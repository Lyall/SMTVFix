#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NaviGimmickLot

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Project_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_NaviGimmickLot.BP_NaviGimmickLot_C.ExecuteUbergraph_BP_NaviGimmickLot
// 0x0100 (0x0100 - 0x0000)
struct BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BE5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BE6[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<int32>                                 CallFunc_CalcCanLotCategoryList_CategoryList;      // 0x00B0(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NAVI_DEVIL                                  CallFunc_GetCurrentNaviDevil_ReturnValue;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BE7[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BE8[0x6];                                     // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetNaviDevilCtrl_Actor;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NaviDevilCtrlBase_C*                K2Node_DynamicCast_AsBP_Navi_Devil_Ctrl_Base;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcNaviGimmickExist_FromCategory_NewParam; // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot) == 0x000008, "Wrong alignment on BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot");
static_assert(sizeof(BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot) == 0x000100, "Wrong size on BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot");
static_assert(offsetof(BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot, EntryPoint) == 0x000000, "Member 'BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member 'BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member 'BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot, CallFunc_CalcCanLotCategoryList_CategoryList) == 0x0000B0, "Member 'BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot::CallFunc_CalcCanLotCategoryList_CategoryList' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot, CallFunc_GetMapCommon_rerutn) == 0x0000C0, "Member 'BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot, CallFunc_GetCurrentNaviDevil_ReturnValue) == 0x0000C8, "Member 'BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot::CallFunc_GetCurrentNaviDevil_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot, K2Node_DynamicCast_AsBPI_Map_Common) == 0x0000D0, "Member 'BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000E1, "Member 'BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot, CallFunc_BPI_GetNaviDevilCtrl_Actor) == 0x0000E8, "Member 'BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot::CallFunc_BPI_GetNaviDevilCtrl_Actor' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot, K2Node_DynamicCast_AsBP_Navi_Devil_Ctrl_Base) == 0x0000F0, "Member 'BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot::K2Node_DynamicCast_AsBP_Navi_Devil_Ctrl_Base' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot, K2Node_DynamicCast_bSuccess_1) == 0x0000F8, "Member 'BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot, CallFunc_CalcNaviGimmickExist_FromCategory_NewParam) == 0x0000F9, "Member 'BP_NaviGimmickLot_C_ExecuteUbergraph_BP_NaviGimmickLot::CallFunc_CalcNaviGimmickExist_FromCategory_NewParam' has a wrong offset!");

// Function BP_NaviGimmickLot.BP_NaviGimmickLot_C.BndEvt__OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_NaviGimmickLot_C_BndEvt__OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BE9[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_NaviGimmickLot_C_BndEvt__OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_NaviGimmickLot_C_BndEvt__OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_NaviGimmickLot_C_BndEvt__OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_NaviGimmickLot_C_BndEvt__OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_NaviGimmickLot_C_BndEvt__OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_NaviGimmickLot_C_BndEvt__OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_BndEvt__OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_NaviGimmickLot_C_BndEvt__OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_BndEvt__OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_NaviGimmickLot_C_BndEvt__OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_BndEvt__OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_NaviGimmickLot_C_BndEvt__OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_BndEvt__OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_NaviGimmickLot_C_BndEvt__OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_BndEvt__OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_NaviGimmickLot_C_BndEvt__OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_NaviGimmickLot.BP_NaviGimmickLot_C.UserConstructionScript
// 0x0078 (0x0078 - 0x0000)
struct BP_NaviGimmickLot_C_UserConstructionScript final
{
public:
	class ABP_NaviDevilGimmick_IgnorePause_C*     L_Gimmick;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BEA[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_NaviGimmickLot_C*>           CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	class ABP_NaviGimmickLot_C*                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BEB[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BEC[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue_1;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NaviGimmickLot_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_NaviGimmickLot_C_UserConstructionScript");
static_assert(sizeof(BP_NaviGimmickLot_C_UserConstructionScript) == 0x000078, "Wrong size on BP_NaviGimmickLot_C_UserConstructionScript");
static_assert(offsetof(BP_NaviGimmickLot_C_UserConstructionScript, L_Gimmick) == 0x000000, "Member 'BP_NaviGimmickLot_C_UserConstructionScript::L_Gimmick' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_NaviGimmickLot_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_UserConstructionScript, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_NaviGimmickLot_C_UserConstructionScript::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_NaviGimmickLot_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_NaviGimmickLot_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_NaviGimmickLot_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_NaviGimmickLot_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_NaviGimmickLot_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_UserConstructionScript, CallFunc_GetMaterial_ReturnValue) == 0x000038, "Member 'BP_NaviGimmickLot_C_UserConstructionScript::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000040, "Member 'BP_NaviGimmickLot_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_UserConstructionScript, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000048, "Member 'BP_NaviGimmickLot_C_UserConstructionScript::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000054, "Member 'BP_NaviGimmickLot_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_UserConstructionScript, CallFunc_GetMaterial_ReturnValue_1) == 0x000058, "Member 'BP_NaviGimmickLot_C_UserConstructionScript::CallFunc_GetMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000060, "Member 'BP_NaviGimmickLot_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_UserConstructionScript, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000068, "Member 'BP_NaviGimmickLot_C_UserConstructionScript::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_1) == 0x000074, "Member 'BP_NaviGimmickLot_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_2) == 0x000075, "Member 'BP_NaviGimmickLot_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_NaviGimmickLot.BP_NaviGimmickLot_C.CheckHitIN
// 0x0060 (0x0060 - 0x0000)
struct BP_NaviGimmickLot_C_CheckHitIN final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffsetSize;                                        // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In;                                                // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BED[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPointInBoxWithTransform_ReturnValue;    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NaviGimmickLot_C_CheckHitIN) == 0x000010, "Wrong alignment on BP_NaviGimmickLot_C_CheckHitIN");
static_assert(sizeof(BP_NaviGimmickLot_C_CheckHitIN) == 0x000060, "Wrong size on BP_NaviGimmickLot_C_CheckHitIN");
static_assert(offsetof(BP_NaviGimmickLot_C_CheckHitIN, Location) == 0x000000, "Member 'BP_NaviGimmickLot_C_CheckHitIN::Location' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CheckHitIN, OffsetSize) == 0x00000C, "Member 'BP_NaviGimmickLot_C_CheckHitIN::OffsetSize' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CheckHitIN, In) == 0x000018, "Member 'BP_NaviGimmickLot_C_CheckHitIN::In' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CheckHitIN, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'BP_NaviGimmickLot_C_CheckHitIN::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CheckHitIN, CallFunc_Add_VectorVector_ReturnValue) == 0x000050, "Member 'BP_NaviGimmickLot_C_CheckHitIN::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CheckHitIN, CallFunc_IsPointInBoxWithTransform_ReturnValue) == 0x00005C, "Member 'BP_NaviGimmickLot_C_CheckHitIN::CallFunc_IsPointInBoxWithTransform_ReturnValue' has a wrong offset!");

// Function BP_NaviGimmickLot.BP_NaviGimmickLot_C.CalcInfo
// 0x0090 (0x0090 - 0x0000)
struct BP_NaviGimmickLot_C_CalcInfo final
{
public:
	class ABP_NaviDevilGimmick_IgnorePause_C*     L_Gimmick;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BEE[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPointInBoxWithTransform_ReturnValue;    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BEF[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_NaviDevilGimmick_IgnorePause_C*> CallFunc_GetAllActorsOfClass_OutActors;            // 0x0068(0x0010)(ReferenceParm)
	class ABP_NaviDevilGimmick_IgnorePause_C*     CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NaviGimmickLot_C_CalcInfo) == 0x000010, "Wrong alignment on BP_NaviGimmickLot_C_CalcInfo");
static_assert(sizeof(BP_NaviGimmickLot_C_CalcInfo) == 0x000090, "Wrong size on BP_NaviGimmickLot_C_CalcInfo");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcInfo, L_Gimmick) == 0x000000, "Member 'BP_NaviGimmickLot_C_CalcInfo::L_Gimmick' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcInfo, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_NaviGimmickLot_C_CalcInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcInfo, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_NaviGimmickLot_C_CalcInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_NaviGimmickLot_C_CalcInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcInfo, CallFunc_Array_Add_ReturnValue) == 0x000014, "Member 'BP_NaviGimmickLot_C_CalcInfo::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcInfo, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_NaviGimmickLot_C_CalcInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcInfo, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'BP_NaviGimmickLot_C_CalcInfo::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcInfo, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'BP_NaviGimmickLot_C_CalcInfo::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcInfo, CallFunc_Array_Find_ReturnValue) == 0x00005C, "Member 'BP_NaviGimmickLot_C_CalcInfo::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcInfo, CallFunc_IsPointInBoxWithTransform_ReturnValue) == 0x000060, "Member 'BP_NaviGimmickLot_C_CalcInfo::CallFunc_IsPointInBoxWithTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000061, "Member 'BP_NaviGimmickLot_C_CalcInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcInfo, CallFunc_GetAllActorsOfClass_OutActors) == 0x000068, "Member 'BP_NaviGimmickLot_C_CalcInfo::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcInfo, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_NaviGimmickLot_C_CalcInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcInfo, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_NaviGimmickLot_C_CalcInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcInfo, CallFunc_Less_IntInt_ReturnValue_1) == 0x000084, "Member 'BP_NaviGimmickLot_C_CalcInfo::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_NaviGimmickLot.BP_NaviGimmickLot_C.CalcCanLotCategoryList
// 0x0158 (0x0158 - 0x0000)
struct BP_NaviGimmickLot_C_CalcCanLotCategoryList final
{
public:
	TArray<int32>                                 Param_CategoryList;                                // 0x0000(0x0010)(Parm, OutParm)
	int32                                         L_Category;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_Near;                                            // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BF0[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         L_Actors;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         L_Cnt;                                             // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BF1[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FNaviDevilGimmickActors>        L_GimmickList;                                     // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 L_list;                                            // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BF2[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BF3[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BF4[0x2];                                     // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_MakeStruct_Color;                           // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FNaviDevilGimmickActors                CallFunc_Array_Get_Item;                           // 0x00C8(0x0020)()
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BF5[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BF6[0x1];                                     // 0x0103(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BF7[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BF8[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetNaviDevilCtrl_Actor;               // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NaviDevilCtrlBase_C*                K2Node_DynamicCast_AsBP_Navi_Devil_Ctrl_Base;      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BF9[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FNaviDevilGimmickActors>        CallFunc_GetGimmickInfoList_List;                  // 0x0148(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_NaviGimmickLot_C_CalcCanLotCategoryList) == 0x000008, "Wrong alignment on BP_NaviGimmickLot_C_CalcCanLotCategoryList");
static_assert(sizeof(BP_NaviGimmickLot_C_CalcCanLotCategoryList) == 0x000158, "Wrong size on BP_NaviGimmickLot_C_CalcCanLotCategoryList");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, Param_CategoryList) == 0x000000, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::Param_CategoryList' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, L_Category) == 0x000010, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::L_Category' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, L_Near) == 0x000014, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::L_Near' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, L_Actors) == 0x000018, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::L_Actors' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, L_Cnt) == 0x000028, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::L_Cnt' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, L_GimmickList) == 0x000030, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::L_GimmickList' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, L_list) == 0x000040, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::L_list' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, Temp_int_Variable) == 0x000054, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, Temp_int_Loop_Counter_Variable_1) == 0x00005C, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, Temp_int_Array_Index_Variable_1) == 0x000068, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, CallFunc_GetPlayerPawn_ReturnValue) == 0x000070, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, Temp_bool_True_if_break_was_hit_Variable) == 0x000078, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, CallFunc_GetVelocity_ReturnValue) == 0x00007C, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, CallFunc_VSize_ReturnValue) == 0x000088, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, CallFunc_Not_PreBool_ReturnValue) == 0x00008C, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x00008D, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, CallFunc_Conv_IntToString_ReturnValue) == 0x000090, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A0, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B0, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000C0, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, K2Node_MakeStruct_Color) == 0x0000C4, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::K2Node_MakeStruct_Color' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, CallFunc_Array_Get_Item_1) == 0x0000E8, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, CallFunc_GetDistanceTo_ReturnValue) == 0x0000F0, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000F4, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, CallFunc_Array_Length_ReturnValue) == 0x0000F8, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, CallFunc_Array_Length_ReturnValue_1) == 0x0000FC, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, CallFunc_Less_IntInt_ReturnValue) == 0x000100, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, CallFunc_Less_IntInt_ReturnValue_1) == 0x000101, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, CallFunc_BooleanAND_ReturnValue) == 0x000102, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, CallFunc_Array_Find_ReturnValue) == 0x000104, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000108, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, CallFunc_GetMapCommon_rerutn) == 0x000110, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, K2Node_DynamicCast_AsBPI_Map_Common) == 0x000118, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, K2Node_DynamicCast_bSuccess) == 0x000128, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, CallFunc_BPI_GetNaviDevilCtrl_Actor) == 0x000130, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::CallFunc_BPI_GetNaviDevilCtrl_Actor' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, K2Node_DynamicCast_AsBP_Navi_Devil_Ctrl_Base) == 0x000138, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::K2Node_DynamicCast_AsBP_Navi_Devil_Ctrl_Base' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, K2Node_DynamicCast_bSuccess_1) == 0x000140, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_NaviGimmickLot_C_CalcCanLotCategoryList, CallFunc_GetGimmickInfoList_List) == 0x000148, "Member 'BP_NaviGimmickLot_C_CalcCanLotCategoryList::CallFunc_GetGimmickInfoList_List' has a wrong offset!");

}

