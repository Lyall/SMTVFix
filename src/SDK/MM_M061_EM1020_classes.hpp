#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MM_M061_EM1020

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_EventMissionBase_classes.hpp"
#include "Project_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass MM_M061_EM1020.MM_M061_EM1020_C
// 0x00F0 (0x0410 - 0x0320)
class AMM_M061_EM1020_C final : public ABP_EventMissionBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_MM_M061_EM1020_C;                   // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USplineComponent*                       Spline;                                            // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Camera_Rot_rot_B8B721874E255FF5566F86A13A1A6DD0;   // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Camera_Rot__Direction_B8B721874E255FF5566F86A13A1A6DD0; // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_436C[0x3];                                     // 0x0335(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Camera_Rot;                                        // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Dev_move_move_A26B899543C08EC3F43AACBB91463B27;    // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Dev_move__Direction_A26B899543C08EC3F43AACBB91463B27; // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_436D[0x3];                                     // 0x0345(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Dev_move;                                          // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Dev_rot_rot_9556329146F9A08DE1DA1DB28725BA2C;      // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Dev_rot__Direction_9556329146F9A08DE1DA1DB28725BA2C; // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_436E[0x3];                                     // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Dev_Rot;                                           // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectIndex;                                       // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MissionId;                                         // 0x0364(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UScriptMessageAsset*                    SystemMessageAsset;                                // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScriptMessageAsset*                    MissionMessageAsset;                               // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MissionEventBase_C*                 MissionEvent;                                      // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Default_View_Target;                               // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACameraActor*>                   Camera;                                            // 0x0388(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ATargetPoint*>                   Target;                                            // 0x0398(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	float                                         Local_length;                                      // 0x03A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Move_distance;                                     // 0x03AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x03B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_436F[0x4];                                     // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Spawn_Actor;                                       // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rot;                                               // 0x03C0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4370[0x4];                                     // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AutoRotateFocus_C*                  Auto_Rotate_Ctrl;                                  // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Spline_Default_Rotation;                           // 0x03D8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Change_BGM;                                        // 0x03E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4371[0x3];                                     // 0x03E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       Default_Player_Camera;                             // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Default_camera_Rotation;                           // 0x03F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4372[0x4];                                     // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACameraActor*                           Instant_Camera;                                    // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CameraFocusEnd;                                    // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_MM_M061_EM1020(int32 EntryPoint);
	void Evt_FinishComplete();
	void Evt_Finish();
	void CloseMsgWindow();
	void CameraFocus();
	void Leave_Event();
	void Dev_leave();
	void Dev_Motion();
	void Fast_Report();
	void End_Mission();
	void After_Complete();
	void Not_Report();
	void Can_Report();
	void Can_Entry();
	void Before_Entry();
	void QuestExecute();
	void ReceiveBeginPlay();
	void OnLoaded_D3D239334707528F5C126AAFE7419C3B(TSubclassOf<class UObject> Loaded);
	void OnLoaded_0B563099408F2B64641C93B79E78019C(TSubclassOf<class UObject> Loaded);
	void OnLoaded_0E38A2EA4724D2AEB4E20FBD4ACC856A(class UObject* Loaded);
	void OnLoaded_8C5F64BC4F1BBF199F45C4BC8D82B4D7(class UObject* Loaded);
	void OnLoaded_0E38A2EA4724D2AEB4E20FBD05E5C6ED(class UObject* Loaded);
	void OnLoaded_0E38A2EA4724D2AEB4E20FBDFAF3B71F(class UObject* Loaded);
	void Camera_Rot__UpdateFunc();
	void Camera_Rot__FinishedFunc();
	void Dev_Rot__UpdateFunc();
	void Dev_Rot__FinishedFunc();
	void Dev_move__UpdateFunc();
	void Dev_move__FinishedFunc();
	void CallDeactivate();
	void CheckActive();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MM_M061_EM1020_C">();
	}
	static class AMM_M061_EM1020_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMM_M061_EM1020_C>();
	}
};
static_assert(alignof(AMM_M061_EM1020_C) == 0x000008, "Wrong alignment on AMM_M061_EM1020_C");
static_assert(sizeof(AMM_M061_EM1020_C) == 0x000410, "Wrong size on AMM_M061_EM1020_C");
static_assert(offsetof(AMM_M061_EM1020_C, UberGraphFrame_MM_M061_EM1020_C) == 0x000320, "Member 'AMM_M061_EM1020_C::UberGraphFrame_MM_M061_EM1020_C' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, Spline) == 0x000328, "Member 'AMM_M061_EM1020_C::Spline' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, Camera_Rot_rot_B8B721874E255FF5566F86A13A1A6DD0) == 0x000330, "Member 'AMM_M061_EM1020_C::Camera_Rot_rot_B8B721874E255FF5566F86A13A1A6DD0' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, Camera_Rot__Direction_B8B721874E255FF5566F86A13A1A6DD0) == 0x000334, "Member 'AMM_M061_EM1020_C::Camera_Rot__Direction_B8B721874E255FF5566F86A13A1A6DD0' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, Camera_Rot) == 0x000338, "Member 'AMM_M061_EM1020_C::Camera_Rot' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, Dev_move_move_A26B899543C08EC3F43AACBB91463B27) == 0x000340, "Member 'AMM_M061_EM1020_C::Dev_move_move_A26B899543C08EC3F43AACBB91463B27' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, Dev_move__Direction_A26B899543C08EC3F43AACBB91463B27) == 0x000344, "Member 'AMM_M061_EM1020_C::Dev_move__Direction_A26B899543C08EC3F43AACBB91463B27' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, Dev_move) == 0x000348, "Member 'AMM_M061_EM1020_C::Dev_move' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, Dev_rot_rot_9556329146F9A08DE1DA1DB28725BA2C) == 0x000350, "Member 'AMM_M061_EM1020_C::Dev_rot_rot_9556329146F9A08DE1DA1DB28725BA2C' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, Dev_rot__Direction_9556329146F9A08DE1DA1DB28725BA2C) == 0x000354, "Member 'AMM_M061_EM1020_C::Dev_rot__Direction_9556329146F9A08DE1DA1DB28725BA2C' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, Dev_Rot) == 0x000358, "Member 'AMM_M061_EM1020_C::Dev_Rot' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, SelectIndex) == 0x000360, "Member 'AMM_M061_EM1020_C::SelectIndex' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, MissionId) == 0x000364, "Member 'AMM_M061_EM1020_C::MissionId' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, SystemMessageAsset) == 0x000368, "Member 'AMM_M061_EM1020_C::SystemMessageAsset' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, MissionMessageAsset) == 0x000370, "Member 'AMM_M061_EM1020_C::MissionMessageAsset' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, MissionEvent) == 0x000378, "Member 'AMM_M061_EM1020_C::MissionEvent' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, Default_View_Target) == 0x000380, "Member 'AMM_M061_EM1020_C::Default_View_Target' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, Camera) == 0x000388, "Member 'AMM_M061_EM1020_C::Camera' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, Target) == 0x000398, "Member 'AMM_M061_EM1020_C::Target' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, Local_length) == 0x0003A8, "Member 'AMM_M061_EM1020_C::Local_length' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, Move_distance) == 0x0003AC, "Member 'AMM_M061_EM1020_C::Move_distance' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, Speed) == 0x0003B0, "Member 'AMM_M061_EM1020_C::Speed' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, Spawn_Actor) == 0x0003B8, "Member 'AMM_M061_EM1020_C::Spawn_Actor' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, Rot) == 0x0003C0, "Member 'AMM_M061_EM1020_C::Rot' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, Auto_Rotate_Ctrl) == 0x0003D0, "Member 'AMM_M061_EM1020_C::Auto_Rotate_Ctrl' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, Spline_Default_Rotation) == 0x0003D8, "Member 'AMM_M061_EM1020_C::Spline_Default_Rotation' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, Change_BGM) == 0x0003E4, "Member 'AMM_M061_EM1020_C::Change_BGM' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, Default_Player_Camera) == 0x0003E8, "Member 'AMM_M061_EM1020_C::Default_Player_Camera' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, Default_camera_Rotation) == 0x0003F0, "Member 'AMM_M061_EM1020_C::Default_camera_Rotation' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, Instant_Camera) == 0x000400, "Member 'AMM_M061_EM1020_C::Instant_Camera' has a wrong offset!");
static_assert(offsetof(AMM_M061_EM1020_C, CameraFocusEnd) == 0x000408, "Member 'AMM_M061_EM1020_C::CameraFocusEnd' has a wrong offset!");

}

