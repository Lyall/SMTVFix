#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapRelic

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_MapGimmickHideReason_structs.hpp"
#include "Project_structs.hpp"
#include "Engine_structs.hpp"
#include "E_RelicColor_structs.hpp"


namespace SDK::Params
{

// Function BP_MapRelic.BP_MapRelic_C.ExecuteUbergraph_BP_MapRelic
// 0x02C0 (0x02C0 - 0x0000)
struct BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37DD[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRealSaveID_SaveID;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelicTimer_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37DE[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRealSaveID_SaveID_1;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37DF[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckRelicFlag_ReturnValue;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37E0[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B8(0x0018)()
	int32                                         CallFunc_GetRealSaveID_SaveID_2;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37E1[0xC];                                     // 0x00D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Success;                        // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37E2[0x3];                                     // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMapID_ReturnValue;                     // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37E3[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMinimapManager*                        CallFunc_GetMinimapManager_ReturnValue;            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMapID_ReturnValue_1;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAreaID_ReturnValue;                    // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMinimapManager*                        CallFunc_GetMinimapManager_ReturnValue_1;          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MapGimmickHideReason                        K2Node_Event_HideReason_1;                         // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37E4[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37E5[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSaveUniqueIdFromDataId_ReturnValue;    // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MapGimmickHideReason                        K2Node_Event_HideReason;                           // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37E6[0x1];                                     // 0x0153(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BIT_DEL_ReturnValue;                      // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BIT_ADD_ReturnValue;                      // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAreaID_ReturnValue_1;                  // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37E7[0x3];                                     // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMapID_ReturnValue_2;                   // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRelicSaveBufferStart_ReturnValue;      // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37E8[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_GetStaticMesh_StaticMesh;                 // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_GetStaticMesh_StaticMesh_1;               // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_GetStaticMesh_StaticMesh_2;               // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGetRelicIgnore_ignore;                  // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37E9[0x3];                                     // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRelicGetCounter_ReturnValue;           // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37EA[0x2];                                     // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37EB[0x3];                                     // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGazeTargetHolder*                      CallFunc_GetGazeTargetHolder_ReturnValue;          // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37EC[0x7];                                     // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGazeTarget>           CallFunc_RegisterGazeTarget_InTarget_CastInput;    // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	class UGazeTargetHolder*                      CallFunc_GetGazeTargetHolder_ReturnValue_1;        // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37ED[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGazeTarget>           CallFunc_UnregisterGazeTarget_InTarget_CastInput;  // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	class UGazeTargetHolder*                      CallFunc_GetGazeTargetHolder_ReturnValue_2;        // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGazeTarget>           CallFunc_UnregisterGazeTarget_InTarget_CastInput_1; // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          CallFunc_BIT_AND_ReturnValue;                      // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37EE[0x2];                                     // 0x01FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRelicData                             CallFunc_GetRelicData_ReturnValue;                 // 0x0200(0x0028)(ConstParm)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37EF[0x3];                                     // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool Success)>                 K2Node_CreateDelegate_OutputDelegate;              // 0x0230(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_And_IntInt_ReturnValue_1;                 // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0245(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37F0[0x2];                                     // 0x0246(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRealSaveID_SaveID_3;                   // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckRelicFlag_ReturnValue_1;             // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x024D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37F1[0x2];                                     // 0x024E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRealSaveID_SaveID_4;                   // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRealSaveID_SaveID_5;                   // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckRelicFlag_ReturnValue_2;             // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37F2[0x3];                                     // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRealSaveID_SaveID_6;                   // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0260(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0270(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_RelicAppearanceBase_C*              CallFunc_GetRelicAppearance_RelicApearance;        // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RelicAppearanceBase_C*              CallFunc_GetRelicAppearance_RelicApearance_1;      // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RelicAppearanceBase_C*              CallFunc_GetRelicAppearance_RelicApearance_2;      // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x02A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckMapPause_IsPause;                // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic) == 0x000010, "Wrong alignment on BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic");
static_assert(sizeof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic) == 0x0002C0, "Wrong size on BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, EntryPoint) == 0x000000, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetRealSaveID_SaveID) == 0x00001C, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetRealSaveID_SaveID' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetRelicTimer_ReturnValue) == 0x000020, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetRelicTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_Conv_FloatToString_ReturnValue) == 0x000028, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_Conv_IntToString_ReturnValue) == 0x000038, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000048, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000068, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetRealSaveID_SaveID_1) == 0x000078, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetRealSaveID_SaveID_1' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000080, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_CheckRelicFlag_ReturnValue) == 0x000090, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_CheckRelicFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000098, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000A8, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B8, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetRealSaveID_SaveID_2) == 0x0000D0, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetRealSaveID_SaveID_2' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0000E0, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000110, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, K2Node_CustomEvent_Success) == 0x00011C, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::K2Node_CustomEvent_Success' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetMapID_ReturnValue) == 0x000120, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetMinimapManager_ReturnValue) == 0x000128, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetMinimapManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetMapID_ReturnValue_1) == 0x000130, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetMapID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetAreaID_ReturnValue) == 0x000134, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetAreaID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetMinimapManager_ReturnValue_1) == 0x000138, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetMinimapManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, K2Node_Event_HideReason_1) == 0x000140, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::K2Node_Event_HideReason_1' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_Add_IntInt_ReturnValue) == 0x000144, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000148, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetSaveUniqueIdFromDataId_ReturnValue) == 0x00014C, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetSaveUniqueIdFromDataId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, K2Node_Event_HideReason) == 0x000150, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::K2Node_Event_HideReason' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000151, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000152, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_BIT_DEL_ReturnValue) == 0x000154, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_BIT_DEL_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_BIT_ADD_ReturnValue) == 0x000158, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_BIT_ADD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetAreaID_ReturnValue_1) == 0x00015C, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetAreaID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, Temp_bool_IsClosed_Variable) == 0x000160, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetMapID_ReturnValue_2) == 0x000164, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetMapID_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetRelicSaveBufferStart_ReturnValue) == 0x000168, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetRelicSaveBufferStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetStaticMesh_StaticMesh) == 0x000170, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetStaticMesh_StaticMesh' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetStaticMesh_StaticMesh_1) == 0x000178, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetStaticMesh_StaticMesh_1' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetStaticMesh_StaticMesh_2) == 0x000180, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetStaticMesh_StaticMesh_2' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_IsGetRelicIgnore_ignore) == 0x000188, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_IsGetRelicIgnore_ignore' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetRelicGetCounter_ReturnValue) == 0x00018C, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetRelicGetCounter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000190, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_BooleanOR_ReturnValue) == 0x000191, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_MakeLiteralInt_ReturnValue) == 0x000194, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x000198, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_Not_PreBool_ReturnValue) == 0x00019C, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetGazeTargetHolder_ReturnValue) == 0x0001A0, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetGazeTargetHolder_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_MakeLiteralByte_ReturnValue) == 0x0001A8, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_RegisterGazeTarget_InTarget_CastInput) == 0x0001B0, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_RegisterGazeTarget_InTarget_CastInput' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetGazeTargetHolder_ReturnValue_1) == 0x0001C0, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetGazeTargetHolder_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, K2Node_Event_EndPlayReason) == 0x0001C8, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_UnregisterGazeTarget_InTarget_CastInput) == 0x0001D0, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_UnregisterGazeTarget_InTarget_CastInput' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetGazeTargetHolder_ReturnValue_2) == 0x0001E0, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetGazeTargetHolder_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_UnregisterGazeTarget_InTarget_CastInput_1) == 0x0001E8, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_UnregisterGazeTarget_InTarget_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_BIT_AND_ReturnValue) == 0x0001F8, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_BIT_AND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, Temp_bool_Variable) == 0x0001F9, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, K2Node_Select_Default) == 0x0001FC, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetRelicData_ReturnValue) == 0x000200, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetRelicData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_And_IntInt_ReturnValue) == 0x000228, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00022C, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, K2Node_CreateDelegate_OutputDelegate) == 0x000230, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_And_IntInt_ReturnValue_1) == 0x000240, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_And_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000244, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000245, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetRealSaveID_SaveID_3) == 0x000248, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetRealSaveID_SaveID_3' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_CheckRelicFlag_ReturnValue_1) == 0x00024C, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_CheckRelicFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, Temp_bool_Has_Been_Initd_Variable) == 0x00024D, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetRealSaveID_SaveID_4) == 0x000250, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetRealSaveID_SaveID_4' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetRealSaveID_SaveID_5) == 0x000254, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetRealSaveID_SaveID_5' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_CheckRelicFlag_ReturnValue_2) == 0x000258, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_CheckRelicFlag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetRealSaveID_SaveID_6) == 0x00025C, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetRealSaveID_SaveID_6' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, K2Node_CreateDelegate_OutputDelegate_1) == 0x000260, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, K2Node_CreateDelegate_OutputDelegate_2) == 0x000270, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetRelicAppearance_RelicApearance) == 0x000280, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetRelicAppearance_RelicApearance' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetRelicAppearance_RelicApearance_1) == 0x000288, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetRelicAppearance_RelicApearance_1' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetRelicAppearance_RelicApearance_2) == 0x000290, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetRelicAppearance_RelicApearance_2' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_GetMapCommon_rerutn) == 0x000298, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, K2Node_DynamicCast_AsBPI_Map_Common) == 0x0002A0, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, K2Node_DynamicCast_bSuccess) == 0x0002B0, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_BPI_CheckMapPause_IsPause) == 0x0002B1, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_BPI_CheckMapPause_IsPause' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002B2, "Member 'BP_MapRelic_C_ExecuteUbergraph_BP_MapRelic::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function BP_MapRelic.BP_MapRelic_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_MapRelic_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapRelic_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_MapRelic_C_ReceiveEndPlay");
static_assert(sizeof(BP_MapRelic_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_MapRelic_C_ReceiveEndPlay");
static_assert(offsetof(BP_MapRelic_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_MapRelic_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_MapRelic.BP_MapRelic_C.BPI_HideGimmick
// 0x0001 (0x0001 - 0x0000)
struct BP_MapRelic_C_BPI_HideGimmick final
{
public:
	E_MapGimmickHideReason                        Param_HideReason;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapRelic_C_BPI_HideGimmick) == 0x000001, "Wrong alignment on BP_MapRelic_C_BPI_HideGimmick");
static_assert(sizeof(BP_MapRelic_C_BPI_HideGimmick) == 0x000001, "Wrong size on BP_MapRelic_C_BPI_HideGimmick");
static_assert(offsetof(BP_MapRelic_C_BPI_HideGimmick, Param_HideReason) == 0x000000, "Member 'BP_MapRelic_C_BPI_HideGimmick::Param_HideReason' has a wrong offset!");

// Function BP_MapRelic.BP_MapRelic_C.BPI_ShowGimmick
// 0x0001 (0x0001 - 0x0000)
struct BP_MapRelic_C_BPI_ShowGimmick final
{
public:
	E_MapGimmickHideReason                        Param_HideReason;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapRelic_C_BPI_ShowGimmick) == 0x000001, "Wrong alignment on BP_MapRelic_C_BPI_ShowGimmick");
static_assert(sizeof(BP_MapRelic_C_BPI_ShowGimmick) == 0x000001, "Wrong size on BP_MapRelic_C_BPI_ShowGimmick");
static_assert(offsetof(BP_MapRelic_C_BPI_ShowGimmick, Param_HideReason) == 0x000000, "Member 'BP_MapRelic_C_BPI_ShowGimmick::Param_HideReason' has a wrong offset!");

// Function BP_MapRelic.BP_MapRelic_C.EvtDis_Result_
// 0x0001 (0x0001 - 0x0000)
struct BP_MapRelic_C_EvtDis_Result_ final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapRelic_C_EvtDis_Result_) == 0x000001, "Wrong alignment on BP_MapRelic_C_EvtDis_Result_");
static_assert(sizeof(BP_MapRelic_C_EvtDis_Result_) == 0x000001, "Wrong size on BP_MapRelic_C_EvtDis_Result_");
static_assert(offsetof(BP_MapRelic_C_EvtDis_Result_, Success) == 0x000000, "Member 'BP_MapRelic_C_EvtDis_Result_::Success' has a wrong offset!");

// Function BP_MapRelic.BP_MapRelic_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_MapRelic_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapRelic_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_MapRelic_C_ReceiveTick");
static_assert(sizeof(BP_MapRelic_C_ReceiveTick) == 0x000004, "Wrong size on BP_MapRelic_C_ReceiveTick");
static_assert(offsetof(BP_MapRelic_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_MapRelic_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_MapRelic.BP_MapRelic_C.UserConstructionScript
// 0x0030 (0x0030 - 0x0000)
struct BP_MapRelic_C_UserConstructionScript final
{
public:
	E_RelicColor                                  Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RelicAppearanceBase_C*              CallFunc_GetRelicAppearance_RelicApearance;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapRelic_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_MapRelic_C_UserConstructionScript");
static_assert(sizeof(BP_MapRelic_C_UserConstructionScript) == 0x000030, "Wrong size on BP_MapRelic_C_UserConstructionScript");
static_assert(offsetof(BP_MapRelic_C_UserConstructionScript, Temp_byte_Variable) == 0x000000, "Member 'BP_MapRelic_C_UserConstructionScript::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_UserConstructionScript, Temp_class_Variable) == 0x000008, "Member 'BP_MapRelic_C_UserConstructionScript::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_UserConstructionScript, Temp_class_Variable_1) == 0x000010, "Member 'BP_MapRelic_C_UserConstructionScript::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_UserConstructionScript, Temp_class_Variable_2) == 0x000018, "Member 'BP_MapRelic_C_UserConstructionScript::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_UserConstructionScript, CallFunc_GetRelicAppearance_RelicApearance) == 0x000020, "Member 'BP_MapRelic_C_UserConstructionScript::CallFunc_GetRelicAppearance_RelicApearance' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_UserConstructionScript, K2Node_Select_Default) == 0x000028, "Member 'BP_MapRelic_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");

// Function BP_MapRelic.BP_MapRelic_C.CalcSave
// 0x0038 (0x0038 - 0x0000)
struct BP_MapRelic_C_CalcSave final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F4[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_MapRelic_C*>                 CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F5[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MapRelic_C*                         CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapRelic_C_CalcSave) == 0x000008, "Wrong alignment on BP_MapRelic_C_CalcSave");
static_assert(sizeof(BP_MapRelic_C_CalcSave) == 0x000038, "Wrong size on BP_MapRelic_C_CalcSave");
static_assert(offsetof(BP_MapRelic_C_CalcSave, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_MapRelic_C_CalcSave::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_CalcSave, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_MapRelic_C_CalcSave::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_CalcSave, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_MapRelic_C_CalcSave::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_CalcSave, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_MapRelic_C_CalcSave::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_CalcSave, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_MapRelic_C_CalcSave::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_CalcSave, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_MapRelic_C_CalcSave::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_CalcSave, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_MapRelic_C_CalcSave::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MapRelic.BP_MapRelic_C.GetRealSaveID
// 0x000C (0x000C - 0x0000)
struct BP_MapRelic_C_GetRealSaveID final
{
public:
	int32                                         Param_SaveId;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37F6[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapRelic_C_GetRealSaveID) == 0x000004, "Wrong alignment on BP_MapRelic_C_GetRealSaveID");
static_assert(sizeof(BP_MapRelic_C_GetRealSaveID) == 0x00000C, "Wrong size on BP_MapRelic_C_GetRealSaveID");
static_assert(offsetof(BP_MapRelic_C_GetRealSaveID, Param_SaveId) == 0x000000, "Member 'BP_MapRelic_C_GetRealSaveID::Param_SaveId' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_GetRealSaveID, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_MapRelic_C_GetRealSaveID::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_GetRealSaveID, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_MapRelic_C_GetRealSaveID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MapRelic.BP_MapRelic_C.DebugTextView
// 0x0002 (0x0002 - 0x0000)
struct BP_MapRelic_C_DebugTextView final
{
public:
	bool                                          View;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapRelic_C_DebugTextView) == 0x000001, "Wrong alignment on BP_MapRelic_C_DebugTextView");
static_assert(sizeof(BP_MapRelic_C_DebugTextView) == 0x000002, "Wrong size on BP_MapRelic_C_DebugTextView");
static_assert(offsetof(BP_MapRelic_C_DebugTextView, View) == 0x000000, "Member 'BP_MapRelic_C_DebugTextView::View' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_DebugTextView, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_MapRelic_C_DebugTextView::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_MapRelic.BP_MapRelic_C.GetStaticMesh
// 0x0018 (0x0018 - 0x0000)
struct BP_MapRelic_C_GetStaticMesh final
{
public:
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RelicAppearanceBase_C*              K2Node_DynamicCast_AsBP_Relic_Appearance_Base;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapRelic_C_GetStaticMesh) == 0x000008, "Wrong alignment on BP_MapRelic_C_GetStaticMesh");
static_assert(sizeof(BP_MapRelic_C_GetStaticMesh) == 0x000018, "Wrong size on BP_MapRelic_C_GetStaticMesh");
static_assert(offsetof(BP_MapRelic_C_GetStaticMesh, StaticMesh) == 0x000000, "Member 'BP_MapRelic_C_GetStaticMesh::StaticMesh' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_GetStaticMesh, K2Node_DynamicCast_AsBP_Relic_Appearance_Base) == 0x000008, "Member 'BP_MapRelic_C_GetStaticMesh::K2Node_DynamicCast_AsBP_Relic_Appearance_Base' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_GetStaticMesh, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_MapRelic_C_GetStaticMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_MapRelic.BP_MapRelic_C.GetParticle
// 0x0010 (0x0010 - 0x0000)
struct BP_MapRelic_C_GetParticle final
{
public:
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RelicAppearanceBase_C*              CallFunc_GetRelicAppearance_RelicApearance;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapRelic_C_GetParticle) == 0x000008, "Wrong alignment on BP_MapRelic_C_GetParticle");
static_assert(sizeof(BP_MapRelic_C_GetParticle) == 0x000010, "Wrong size on BP_MapRelic_C_GetParticle");
static_assert(offsetof(BP_MapRelic_C_GetParticle, ParticleSystem) == 0x000000, "Member 'BP_MapRelic_C_GetParticle::ParticleSystem' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_GetParticle, CallFunc_GetRelicAppearance_RelicApearance) == 0x000008, "Member 'BP_MapRelic_C_GetParticle::CallFunc_GetRelicAppearance_RelicApearance' has a wrong offset!");

// Function BP_MapRelic.BP_MapRelic_C.GetRelicAppearance
// 0x0018 (0x0018 - 0x0000)
struct BP_MapRelic_C_GetRelicAppearance final
{
public:
	class ABP_RelicAppearanceBase_C*              RelicApearance;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RelicAppearanceBase_C*              K2Node_DynamicCast_AsBP_Relic_Appearance_Base;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapRelic_C_GetRelicAppearance) == 0x000008, "Wrong alignment on BP_MapRelic_C_GetRelicAppearance");
static_assert(sizeof(BP_MapRelic_C_GetRelicAppearance) == 0x000018, "Wrong size on BP_MapRelic_C_GetRelicAppearance");
static_assert(offsetof(BP_MapRelic_C_GetRelicAppearance, RelicApearance) == 0x000000, "Member 'BP_MapRelic_C_GetRelicAppearance::RelicApearance' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_GetRelicAppearance, K2Node_DynamicCast_AsBP_Relic_Appearance_Base) == 0x000008, "Member 'BP_MapRelic_C_GetRelicAppearance::K2Node_DynamicCast_AsBP_Relic_Appearance_Base' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_GetRelicAppearance, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_MapRelic_C_GetRelicAppearance::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_MapRelic.BP_MapRelic_C.SetMinimapIconTableRow
// 0x00F0 (0x00F0 - 0x0000)
struct BP_MapRelic_C_SetMinimapIconTableRow final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMinimapIconTableRow                   OutRow;                                            // 0x0008(0x0058)(Parm, OutParm)
	bool                                          NeedToAddMore;                                     // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37F8[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAreaID_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMapID_ReturnValue;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMinimapIconTableRow                   K2Node_MakeStruct_MinimapIconTableRow;             // 0x0098(0x0058)()
};
static_assert(alignof(BP_MapRelic_C_SetMinimapIconTableRow) == 0x000008, "Wrong alignment on BP_MapRelic_C_SetMinimapIconTableRow");
static_assert(sizeof(BP_MapRelic_C_SetMinimapIconTableRow) == 0x0000F0, "Wrong size on BP_MapRelic_C_SetMinimapIconTableRow");
static_assert(offsetof(BP_MapRelic_C_SetMinimapIconTableRow, Param_Index) == 0x000000, "Member 'BP_MapRelic_C_SetMinimapIconTableRow::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_SetMinimapIconTableRow, OutRow) == 0x000008, "Member 'BP_MapRelic_C_SetMinimapIconTableRow::OutRow' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_SetMinimapIconTableRow, NeedToAddMore) == 0x000060, "Member 'BP_MapRelic_C_SetMinimapIconTableRow::NeedToAddMore' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_SetMinimapIconTableRow, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000064, "Member 'BP_MapRelic_C_SetMinimapIconTableRow::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_SetMinimapIconTableRow, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000070, "Member 'BP_MapRelic_C_SetMinimapIconTableRow::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_SetMinimapIconTableRow, CallFunc_BreakRotator_Roll) == 0x00007C, "Member 'BP_MapRelic_C_SetMinimapIconTableRow::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_SetMinimapIconTableRow, CallFunc_BreakRotator_Pitch) == 0x000080, "Member 'BP_MapRelic_C_SetMinimapIconTableRow::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_SetMinimapIconTableRow, CallFunc_BreakRotator_Yaw) == 0x000084, "Member 'BP_MapRelic_C_SetMinimapIconTableRow::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_SetMinimapIconTableRow, CallFunc_FTrunc_ReturnValue) == 0x000088, "Member 'BP_MapRelic_C_SetMinimapIconTableRow::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_SetMinimapIconTableRow, CallFunc_GetAreaID_ReturnValue) == 0x00008C, "Member 'BP_MapRelic_C_SetMinimapIconTableRow::CallFunc_GetAreaID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_SetMinimapIconTableRow, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'BP_MapRelic_C_SetMinimapIconTableRow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_SetMinimapIconTableRow, CallFunc_GetMapID_ReturnValue) == 0x000094, "Member 'BP_MapRelic_C_SetMinimapIconTableRow::CallFunc_GetMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_SetMinimapIconTableRow, K2Node_MakeStruct_MinimapIconTableRow) == 0x000098, "Member 'BP_MapRelic_C_SetMinimapIconTableRow::K2Node_MakeStruct_MinimapIconTableRow' has a wrong offset!");

// Function BP_MapRelic.BP_MapRelic_C.GetGazeTargetType
// 0x0001 (0x0001 - 0x0000)
struct BP_MapRelic_C_GetGazeTargetType final
{
public:
	EGazeTargetType                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapRelic_C_GetGazeTargetType) == 0x000001, "Wrong alignment on BP_MapRelic_C_GetGazeTargetType");
static_assert(sizeof(BP_MapRelic_C_GetGazeTargetType) == 0x000001, "Wrong size on BP_MapRelic_C_GetGazeTargetType");
static_assert(offsetof(BP_MapRelic_C_GetGazeTargetType, ReturnValue) == 0x000000, "Member 'BP_MapRelic_C_GetGazeTargetType::ReturnValue' has a wrong offset!");

// Function BP_MapRelic.BP_MapRelic_C.GetGazeTargetLocation
// 0x0018 (0x0018 - 0x0000)
struct BP_MapRelic_C_GetGazeTargetLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapRelic_C_GetGazeTargetLocation) == 0x000004, "Wrong alignment on BP_MapRelic_C_GetGazeTargetLocation");
static_assert(sizeof(BP_MapRelic_C_GetGazeTargetLocation) == 0x000018, "Wrong size on BP_MapRelic_C_GetGazeTargetLocation");
static_assert(offsetof(BP_MapRelic_C_GetGazeTargetLocation, ReturnValue) == 0x000000, "Member 'BP_MapRelic_C_GetGazeTargetLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapRelic_C_GetGazeTargetLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00000C, "Member 'BP_MapRelic_C_GetGazeTargetLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

}

