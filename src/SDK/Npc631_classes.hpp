#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Npc631

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CharaBaseLight_classes.hpp"
#include "Project_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Npc631.Npc631_C
// 0x0108 (0x0550 - 0x0448)
class ANpc631_C final : public ACharaBaseLight_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Npc631_C;                           // 0x0448(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 RightPropMesh;                                     // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCharaLegComponent_C*                   RightLeg;                                          // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCharaLegComponent_C*                   LeftLeg;                                           // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCharaHeadComponent_C*                  Head;                                              // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 LeftPropMesh;                                      // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 BodyMesh;                                          // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 HeadMesh;                                          // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         Body_ID;                                           // 0x0488(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Head_ID;                                           // 0x048C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         LeftProp_ID;                                       // 0x0490(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         RightProp_ID;                                      // 0x0494(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          RandomCreate;                                      // 0x0498(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_94F2[0x3];                                     // 0x0499(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Anim_ID;                                           // 0x049C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   SlimAnimBP_Soft;                                   // 0x04A0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   FatAnimBP_Soft;                                    // 0x04C8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          Check_CalcAnim;                                    // 0x04F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94F3[0x3];                                     // 0x04F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UpdateAnimDistance;                                // 0x04F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayMotionDistance;                                // 0x04F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayMotion;                                      // 0x04FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Light;                                             // 0x04FD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94F4[0x2];                                     // 0x04FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   LightSocket;                                       // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LoadEnd_Head;                                      // 0x0508(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LoadEnd_Body;                                      // 0x0509(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LoadEnd_LeftProp;                                  // 0x050A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LoadEnd_RightProp;                                 // 0x050B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LoadEnd_Anim;                                      // 0x050C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94F5[0x3];                                     // 0x050D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPointLightComponent*                   PointLight;                                        // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Particle;                                          // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UParticleSystem>         ParticleSoft;                                      // 0x0520(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FName                                   ParticleSocket;                                    // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Npc631(int32 EntryPoint);
	void TempHidden();
	void SetLight();
	void Load();
	void ReceiveTick(float DeltaSeconds);
	void ChangeAnim(int32 AnimID);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void OnLoaded_F8CEF64A47C10BFC2BD909B965CF78A5(class UObject* Loaded);
	void OnLoaded_1ACC4A0149D6859E36E1E2AFCC14601A(TSubclassOf<class UObject> Loaded);
	void OnLoaded_B6B9A86F43FD2BB4849DA59D0BEDFEC1(TSubclassOf<class UObject> Loaded);
	void OnLoaded_9EF9E5C64D166009145576B0F8ECA8EE(class UObject* Loaded);
	void OnLoaded_DB98861A4DFB1BC929A3E48250E9EC13(class UObject* Loaded);
	void OnLoaded_7107B040428DC405C389FEA62DFE5575(class UObject* Loaded);
	void OnLoaded_80DB86A041361D336422AEB038D31040(class UObject* Loaded);
	void OnLoaded_8305F0D348C14421C6D7D8B230302489(class UObject* Loaded);
	void UserConstructionScript();
	void DecideAnim(int32 AnimID, struct FNpc631AnimData* Data);
	void AttachParticle(class UParticleSystem* Param_Particle, class FName Socket);
	void LoadBlockingParticle_AndAttach(TSoftObjectPtr<class UParticleSystem> Param_Particle, class FName Socket);

	EGazeTargetType GetGazeTargetType() const;
	struct FVector GetGazeTargetLocation() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Npc631_C">();
	}
	static class ANpc631_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANpc631_C>();
	}
};
static_assert(alignof(ANpc631_C) == 0x000008, "Wrong alignment on ANpc631_C");
static_assert(sizeof(ANpc631_C) == 0x000550, "Wrong size on ANpc631_C");
static_assert(offsetof(ANpc631_C, UberGraphFrame_Npc631_C) == 0x000448, "Member 'ANpc631_C::UberGraphFrame_Npc631_C' has a wrong offset!");
static_assert(offsetof(ANpc631_C, RightPropMesh) == 0x000450, "Member 'ANpc631_C::RightPropMesh' has a wrong offset!");
static_assert(offsetof(ANpc631_C, RightLeg) == 0x000458, "Member 'ANpc631_C::RightLeg' has a wrong offset!");
static_assert(offsetof(ANpc631_C, LeftLeg) == 0x000460, "Member 'ANpc631_C::LeftLeg' has a wrong offset!");
static_assert(offsetof(ANpc631_C, Head) == 0x000468, "Member 'ANpc631_C::Head' has a wrong offset!");
static_assert(offsetof(ANpc631_C, LeftPropMesh) == 0x000470, "Member 'ANpc631_C::LeftPropMesh' has a wrong offset!");
static_assert(offsetof(ANpc631_C, BodyMesh) == 0x000478, "Member 'ANpc631_C::BodyMesh' has a wrong offset!");
static_assert(offsetof(ANpc631_C, HeadMesh) == 0x000480, "Member 'ANpc631_C::HeadMesh' has a wrong offset!");
static_assert(offsetof(ANpc631_C, Body_ID) == 0x000488, "Member 'ANpc631_C::Body_ID' has a wrong offset!");
static_assert(offsetof(ANpc631_C, Head_ID) == 0x00048C, "Member 'ANpc631_C::Head_ID' has a wrong offset!");
static_assert(offsetof(ANpc631_C, LeftProp_ID) == 0x000490, "Member 'ANpc631_C::LeftProp_ID' has a wrong offset!");
static_assert(offsetof(ANpc631_C, RightProp_ID) == 0x000494, "Member 'ANpc631_C::RightProp_ID' has a wrong offset!");
static_assert(offsetof(ANpc631_C, RandomCreate) == 0x000498, "Member 'ANpc631_C::RandomCreate' has a wrong offset!");
static_assert(offsetof(ANpc631_C, Anim_ID) == 0x00049C, "Member 'ANpc631_C::Anim_ID' has a wrong offset!");
static_assert(offsetof(ANpc631_C, SlimAnimBP_Soft) == 0x0004A0, "Member 'ANpc631_C::SlimAnimBP_Soft' has a wrong offset!");
static_assert(offsetof(ANpc631_C, FatAnimBP_Soft) == 0x0004C8, "Member 'ANpc631_C::FatAnimBP_Soft' has a wrong offset!");
static_assert(offsetof(ANpc631_C, Check_CalcAnim) == 0x0004F0, "Member 'ANpc631_C::Check_CalcAnim' has a wrong offset!");
static_assert(offsetof(ANpc631_C, UpdateAnimDistance) == 0x0004F4, "Member 'ANpc631_C::UpdateAnimDistance' has a wrong offset!");
static_assert(offsetof(ANpc631_C, PlayMotionDistance) == 0x0004F8, "Member 'ANpc631_C::PlayMotionDistance' has a wrong offset!");
static_assert(offsetof(ANpc631_C, IsPlayMotion) == 0x0004FC, "Member 'ANpc631_C::IsPlayMotion' has a wrong offset!");
static_assert(offsetof(ANpc631_C, Light) == 0x0004FD, "Member 'ANpc631_C::Light' has a wrong offset!");
static_assert(offsetof(ANpc631_C, LightSocket) == 0x000500, "Member 'ANpc631_C::LightSocket' has a wrong offset!");
static_assert(offsetof(ANpc631_C, LoadEnd_Head) == 0x000508, "Member 'ANpc631_C::LoadEnd_Head' has a wrong offset!");
static_assert(offsetof(ANpc631_C, LoadEnd_Body) == 0x000509, "Member 'ANpc631_C::LoadEnd_Body' has a wrong offset!");
static_assert(offsetof(ANpc631_C, LoadEnd_LeftProp) == 0x00050A, "Member 'ANpc631_C::LoadEnd_LeftProp' has a wrong offset!");
static_assert(offsetof(ANpc631_C, LoadEnd_RightProp) == 0x00050B, "Member 'ANpc631_C::LoadEnd_RightProp' has a wrong offset!");
static_assert(offsetof(ANpc631_C, LoadEnd_Anim) == 0x00050C, "Member 'ANpc631_C::LoadEnd_Anim' has a wrong offset!");
static_assert(offsetof(ANpc631_C, PointLight) == 0x000510, "Member 'ANpc631_C::PointLight' has a wrong offset!");
static_assert(offsetof(ANpc631_C, Particle) == 0x000518, "Member 'ANpc631_C::Particle' has a wrong offset!");
static_assert(offsetof(ANpc631_C, ParticleSoft) == 0x000520, "Member 'ANpc631_C::ParticleSoft' has a wrong offset!");
static_assert(offsetof(ANpc631_C, ParticleSocket) == 0x000548, "Member 'ANpc631_C::ParticleSocket' has a wrong offset!");

}

