#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Magatsuka

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPI_Magatsuka.BPI_Magatsuka_C.BPI_ShowIconRange
// 0x0002 (0x0002 - 0x0000)
struct BPI_Magatsuka_C_BPI_ShowIconRange final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewParam;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_Magatsuka_C_BPI_ShowIconRange) == 0x000001, "Wrong alignment on BPI_Magatsuka_C_BPI_ShowIconRange");
static_assert(sizeof(BPI_Magatsuka_C_BPI_ShowIconRange) == 0x000002, "Wrong size on BPI_Magatsuka_C_BPI_ShowIconRange");
static_assert(offsetof(BPI_Magatsuka_C_BPI_ShowIconRange, Show) == 0x000000, "Member 'BPI_Magatsuka_C_BPI_ShowIconRange::Show' has a wrong offset!");
static_assert(offsetof(BPI_Magatsuka_C_BPI_ShowIconRange, NewParam) == 0x000001, "Member 'BPI_Magatsuka_C_BPI_ShowIconRange::NewParam' has a wrong offset!");

// Function BPI_Magatsuka.BPI_Magatsuka_C.BPI_ShowMagatsuka
// 0x0001 (0x0001 - 0x0000)
struct BPI_Magatsuka_C_BPI_ShowMagatsuka final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_Magatsuka_C_BPI_ShowMagatsuka) == 0x000001, "Wrong alignment on BPI_Magatsuka_C_BPI_ShowMagatsuka");
static_assert(sizeof(BPI_Magatsuka_C_BPI_ShowMagatsuka) == 0x000001, "Wrong size on BPI_Magatsuka_C_BPI_ShowMagatsuka");
static_assert(offsetof(BPI_Magatsuka_C_BPI_ShowMagatsuka, Show) == 0x000000, "Member 'BPI_Magatsuka_C_BPI_ShowMagatsuka::Show' has a wrong offset!");

// Function BPI_Magatsuka.BPI_Magatsuka_C.BPI_GetComeRangeInfo
// 0x0028 (0x0028 - 0x0000)
struct BPI_Magatsuka_C_BPI_GetComeRangeInfo final
{
public:
	bool                                          View;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93CE[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LocalLocation;                                     // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LocalRotation;                                     // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Size;                                              // 0x001C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Magatsuka_C_BPI_GetComeRangeInfo) == 0x000004, "Wrong alignment on BPI_Magatsuka_C_BPI_GetComeRangeInfo");
static_assert(sizeof(BPI_Magatsuka_C_BPI_GetComeRangeInfo) == 0x000028, "Wrong size on BPI_Magatsuka_C_BPI_GetComeRangeInfo");
static_assert(offsetof(BPI_Magatsuka_C_BPI_GetComeRangeInfo, View) == 0x000000, "Member 'BPI_Magatsuka_C_BPI_GetComeRangeInfo::View' has a wrong offset!");
static_assert(offsetof(BPI_Magatsuka_C_BPI_GetComeRangeInfo, LocalLocation) == 0x000004, "Member 'BPI_Magatsuka_C_BPI_GetComeRangeInfo::LocalLocation' has a wrong offset!");
static_assert(offsetof(BPI_Magatsuka_C_BPI_GetComeRangeInfo, LocalRotation) == 0x000010, "Member 'BPI_Magatsuka_C_BPI_GetComeRangeInfo::LocalRotation' has a wrong offset!");
static_assert(offsetof(BPI_Magatsuka_C_BPI_GetComeRangeInfo, Size) == 0x00001C, "Member 'BPI_Magatsuka_C_BPI_GetComeRangeInfo::Size' has a wrong offset!");

}

