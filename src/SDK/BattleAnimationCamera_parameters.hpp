#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleAnimationCamera

#include "Basic.hpp"


namespace SDK::Params
{

// Function BattleAnimationCamera.BattleAnimationCamera_C.ExecuteUbergraph_BattleAnimationCamera
// 0x0020 (0x0020 - 0x0000)
struct BattleAnimationCamera_C_ExecuteUbergraph_BattleAnimationCamera final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDesignDebugIsUseOldTaskSystem_Enable; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D90[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float OverrunSec)>             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_CustomEvent_OverrunSec;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleAnimationCamera_C_ExecuteUbergraph_BattleAnimationCamera) == 0x000004, "Wrong alignment on BattleAnimationCamera_C_ExecuteUbergraph_BattleAnimationCamera");
static_assert(sizeof(BattleAnimationCamera_C_ExecuteUbergraph_BattleAnimationCamera) == 0x000020, "Wrong size on BattleAnimationCamera_C_ExecuteUbergraph_BattleAnimationCamera");
static_assert(offsetof(BattleAnimationCamera_C_ExecuteUbergraph_BattleAnimationCamera, EntryPoint) == 0x000000, "Member 'BattleAnimationCamera_C_ExecuteUbergraph_BattleAnimationCamera::EntryPoint' has a wrong offset!");
static_assert(offsetof(BattleAnimationCamera_C_ExecuteUbergraph_BattleAnimationCamera, CallFunc_BattleDesignDebugIsUseOldTaskSystem_Enable) == 0x000004, "Member 'BattleAnimationCamera_C_ExecuteUbergraph_BattleAnimationCamera::CallFunc_BattleDesignDebugIsUseOldTaskSystem_Enable' has a wrong offset!");
static_assert(offsetof(BattleAnimationCamera_C_ExecuteUbergraph_BattleAnimationCamera, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BattleAnimationCamera_C_ExecuteUbergraph_BattleAnimationCamera::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BattleAnimationCamera_C_ExecuteUbergraph_BattleAnimationCamera, K2Node_CustomEvent_OverrunSec) == 0x000018, "Member 'BattleAnimationCamera_C_ExecuteUbergraph_BattleAnimationCamera::K2Node_CustomEvent_OverrunSec' has a wrong offset!");
static_assert(offsetof(BattleAnimationCamera_C_ExecuteUbergraph_BattleAnimationCamera, CallFunc_SelectFloat_ReturnValue) == 0x00001C, "Member 'BattleAnimationCamera_C_ExecuteUbergraph_BattleAnimationCamera::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BattleAnimationCamera.BattleAnimationCamera_C.EvtEndPlay
// 0x0004 (0x0004 - 0x0000)
struct BattleAnimationCamera_C_EvtEndPlay final
{
public:
	float                                         OverrunSec;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleAnimationCamera_C_EvtEndPlay) == 0x000004, "Wrong alignment on BattleAnimationCamera_C_EvtEndPlay");
static_assert(sizeof(BattleAnimationCamera_C_EvtEndPlay) == 0x000004, "Wrong size on BattleAnimationCamera_C_EvtEndPlay");
static_assert(offsetof(BattleAnimationCamera_C_EvtEndPlay, OverrunSec) == 0x000000, "Member 'BattleAnimationCamera_C_EvtEndPlay::OverrunSec' has a wrong offset!");

// Function BattleAnimationCamera.BattleAnimationCamera_C.IsFinished
// 0x0001 (0x0001 - 0x0000)
struct BattleAnimationCamera_C_IsFinished final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleAnimationCamera_C_IsFinished) == 0x000001, "Wrong alignment on BattleAnimationCamera_C_IsFinished");
static_assert(sizeof(BattleAnimationCamera_C_IsFinished) == 0x000001, "Wrong size on BattleAnimationCamera_C_IsFinished");
static_assert(offsetof(BattleAnimationCamera_C_IsFinished, RetValue) == 0x000000, "Member 'BattleAnimationCamera_C_IsFinished::RetValue' has a wrong offset!");

// Function BattleAnimationCamera.BattleAnimationCamera_C.SetPlayRate
// 0x000C (0x000C - 0x0000)
struct BattleAnimationCamera_C_SetPlayRate final
{
public:
	float                                         PlayRate;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDesignDebugIsUseOldTaskSystem_Enable; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D91[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleAnimationCamera_C_SetPlayRate) == 0x000004, "Wrong alignment on BattleAnimationCamera_C_SetPlayRate");
static_assert(sizeof(BattleAnimationCamera_C_SetPlayRate) == 0x00000C, "Wrong size on BattleAnimationCamera_C_SetPlayRate");
static_assert(offsetof(BattleAnimationCamera_C_SetPlayRate, PlayRate) == 0x000000, "Member 'BattleAnimationCamera_C_SetPlayRate::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleAnimationCamera_C_SetPlayRate, CallFunc_BattleDesignDebugIsUseOldTaskSystem_Enable) == 0x000004, "Member 'BattleAnimationCamera_C_SetPlayRate::CallFunc_BattleDesignDebugIsUseOldTaskSystem_Enable' has a wrong offset!");
static_assert(offsetof(BattleAnimationCamera_C_SetPlayRate, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'BattleAnimationCamera_C_SetPlayRate::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BattleAnimationCamera.BattleAnimationCamera_C.GetOverrunSec
// 0x0004 (0x0004 - 0x0000)
struct BattleAnimationCamera_C_GetOverrunSec final
{
public:
	float                                         OverrunSec;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleAnimationCamera_C_GetOverrunSec) == 0x000004, "Wrong alignment on BattleAnimationCamera_C_GetOverrunSec");
static_assert(sizeof(BattleAnimationCamera_C_GetOverrunSec) == 0x000004, "Wrong size on BattleAnimationCamera_C_GetOverrunSec");
static_assert(offsetof(BattleAnimationCamera_C_GetOverrunSec, OverrunSec) == 0x000000, "Member 'BattleAnimationCamera_C_GetOverrunSec::OverrunSec' has a wrong offset!");

// Function BattleAnimationCamera.BattleAnimationCamera_C.Update
// 0x0004 (0x0004 - 0x0000)
struct BattleAnimationCamera_C_Update final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleAnimationCamera_C_Update) == 0x000004, "Wrong alignment on BattleAnimationCamera_C_Update");
static_assert(sizeof(BattleAnimationCamera_C_Update) == 0x000004, "Wrong size on BattleAnimationCamera_C_Update");
static_assert(offsetof(BattleAnimationCamera_C_Update, Delta) == 0x000000, "Member 'BattleAnimationCamera_C_Update::Delta' has a wrong offset!");

// Function BattleAnimationCamera.BattleAnimationCamera_C.CameraTickEnable
// 0x0001 (0x0001 - 0x0000)
struct BattleAnimationCamera_C_CameraTickEnable final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleAnimationCamera_C_CameraTickEnable) == 0x000001, "Wrong alignment on BattleAnimationCamera_C_CameraTickEnable");
static_assert(sizeof(BattleAnimationCamera_C_CameraTickEnable) == 0x000001, "Wrong size on BattleAnimationCamera_C_CameraTickEnable");
static_assert(offsetof(BattleAnimationCamera_C_CameraTickEnable, Enable) == 0x000000, "Member 'BattleAnimationCamera_C_CameraTickEnable::Enable' has a wrong offset!");

}

