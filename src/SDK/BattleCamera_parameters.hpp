#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleCamera

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BattleCamera.BattleCamera_C.ExecuteUbergraph_BattleCamera
// 0x00C0 (0x00C0 - 0x0000)
struct BattleCamera_C_ExecuteUbergraph_BattleCamera final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2FAB[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                Temp_object_Variable;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialParameterApplier*              K2Node_DynamicCast_AsMaterial_Parameter_Applier;   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FAC[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      K2Node_DynamicCast_AsMaterial_Instance;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FAD[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFOVAngle_ReturnValue;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FAE[0x2];                                     // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FAF[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_RemoveBlendable_InBlendableObject_CastInput; // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB0[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateComponent_ContinueUpdate;           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamera_C_ExecuteUbergraph_BattleCamera) == 0x000008, "Wrong alignment on BattleCamera_C_ExecuteUbergraph_BattleCamera");
static_assert(sizeof(BattleCamera_C_ExecuteUbergraph_BattleCamera) == 0x0000C0, "Wrong size on BattleCamera_C_ExecuteUbergraph_BattleCamera");
static_assert(offsetof(BattleCamera_C_ExecuteUbergraph_BattleCamera, EntryPoint) == 0x000000, "Member 'BattleCamera_C_ExecuteUbergraph_BattleCamera::EntryPoint' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_ExecuteUbergraph_BattleCamera, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BattleCamera_C_ExecuteUbergraph_BattleCamera::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_ExecuteUbergraph_BattleCamera, K2Node_CustomEvent_Loaded_1) == 0x000018, "Member 'BattleCamera_C_ExecuteUbergraph_BattleCamera::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_ExecuteUbergraph_BattleCamera, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'BattleCamera_C_ExecuteUbergraph_BattleCamera::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_ExecuteUbergraph_BattleCamera, Temp_object_Variable) == 0x000030, "Member 'BattleCamera_C_ExecuteUbergraph_BattleCamera::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_ExecuteUbergraph_BattleCamera, K2Node_CustomEvent_Loaded) == 0x000038, "Member 'BattleCamera_C_ExecuteUbergraph_BattleCamera::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_ExecuteUbergraph_BattleCamera, Temp_object_Variable_1) == 0x000040, "Member 'BattleCamera_C_ExecuteUbergraph_BattleCamera::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_ExecuteUbergraph_BattleCamera, K2Node_DynamicCast_AsMaterial_Parameter_Applier) == 0x000048, "Member 'BattleCamera_C_ExecuteUbergraph_BattleCamera::K2Node_DynamicCast_AsMaterial_Parameter_Applier' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_ExecuteUbergraph_BattleCamera, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BattleCamera_C_ExecuteUbergraph_BattleCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_ExecuteUbergraph_BattleCamera, K2Node_DynamicCast_AsMaterial_Instance) == 0x000058, "Member 'BattleCamera_C_ExecuteUbergraph_BattleCamera::K2Node_DynamicCast_AsMaterial_Instance' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_ExecuteUbergraph_BattleCamera, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BattleCamera_C_ExecuteUbergraph_BattleCamera::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_ExecuteUbergraph_BattleCamera, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000068, "Member 'BattleCamera_C_ExecuteUbergraph_BattleCamera::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_ExecuteUbergraph_BattleCamera, CallFunc_GetPlayerController_ReturnValue) == 0x000070, "Member 'BattleCamera_C_ExecuteUbergraph_BattleCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_ExecuteUbergraph_BattleCamera, CallFunc_GetPlayerController_ReturnValue_1) == 0x000078, "Member 'BattleCamera_C_ExecuteUbergraph_BattleCamera::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_ExecuteUbergraph_BattleCamera, CallFunc_GetFOVAngle_ReturnValue) == 0x000080, "Member 'BattleCamera_C_ExecuteUbergraph_BattleCamera::CallFunc_GetFOVAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_ExecuteUbergraph_BattleCamera, CallFunc_IsValid_ReturnValue) == 0x000084, "Member 'BattleCamera_C_ExecuteUbergraph_BattleCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_ExecuteUbergraph_BattleCamera, CallFunc_IsValid_ReturnValue_1) == 0x000085, "Member 'BattleCamera_C_ExecuteUbergraph_BattleCamera::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_ExecuteUbergraph_BattleCamera, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000088, "Member 'BattleCamera_C_ExecuteUbergraph_BattleCamera::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_ExecuteUbergraph_BattleCamera, CallFunc_IsValid_ReturnValue_2) == 0x000098, "Member 'BattleCamera_C_ExecuteUbergraph_BattleCamera::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_ExecuteUbergraph_BattleCamera, CallFunc_RemoveBlendable_InBlendableObject_CastInput) == 0x0000A0, "Member 'BattleCamera_C_ExecuteUbergraph_BattleCamera::CallFunc_RemoveBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_ExecuteUbergraph_BattleCamera, K2Node_Event_EndPlayReason) == 0x0000B0, "Member 'BattleCamera_C_ExecuteUbergraph_BattleCamera::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_ExecuteUbergraph_BattleCamera, K2Node_Event_DeltaSeconds) == 0x0000B4, "Member 'BattleCamera_C_ExecuteUbergraph_BattleCamera::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_ExecuteUbergraph_BattleCamera, CallFunc_UpdateComponent_ContinueUpdate) == 0x0000B8, "Member 'BattleCamera_C_ExecuteUbergraph_BattleCamera::CallFunc_UpdateComponent_ContinueUpdate' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BattleCamera_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamera_C_ReceiveTick) == 0x000004, "Wrong alignment on BattleCamera_C_ReceiveTick");
static_assert(sizeof(BattleCamera_C_ReceiveTick) == 0x000004, "Wrong size on BattleCamera_C_ReceiveTick");
static_assert(offsetof(BattleCamera_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BattleCamera_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BattleCamera_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamera_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BattleCamera_C_ReceiveEndPlay");
static_assert(sizeof(BattleCamera_C_ReceiveEndPlay) == 0x000001, "Wrong size on BattleCamera_C_ReceiveEndPlay");
static_assert(offsetof(BattleCamera_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BattleCamera_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.OnLoaded_F037AA5742592184378AD09B6B17F15B
// 0x0008 (0x0008 - 0x0000)
struct BattleCamera_C_OnLoaded_F037AA5742592184378AD09B6B17F15B final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamera_C_OnLoaded_F037AA5742592184378AD09B6B17F15B) == 0x000008, "Wrong alignment on BattleCamera_C_OnLoaded_F037AA5742592184378AD09B6B17F15B");
static_assert(sizeof(BattleCamera_C_OnLoaded_F037AA5742592184378AD09B6B17F15B) == 0x000008, "Wrong size on BattleCamera_C_OnLoaded_F037AA5742592184378AD09B6B17F15B");
static_assert(offsetof(BattleCamera_C_OnLoaded_F037AA5742592184378AD09B6B17F15B, Loaded) == 0x000000, "Member 'BattleCamera_C_OnLoaded_F037AA5742592184378AD09B6B17F15B::Loaded' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.OnLoaded_944C3FC641F62CE9C4DDFFBE1BD13F20
// 0x0008 (0x0008 - 0x0000)
struct BattleCamera_C_OnLoaded_944C3FC641F62CE9C4DDFFBE1BD13F20 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamera_C_OnLoaded_944C3FC641F62CE9C4DDFFBE1BD13F20) == 0x000008, "Wrong alignment on BattleCamera_C_OnLoaded_944C3FC641F62CE9C4DDFFBE1BD13F20");
static_assert(sizeof(BattleCamera_C_OnLoaded_944C3FC641F62CE9C4DDFFBE1BD13F20) == 0x000008, "Wrong size on BattleCamera_C_OnLoaded_944C3FC641F62CE9C4DDFFBE1BD13F20");
static_assert(offsetof(BattleCamera_C_OnLoaded_944C3FC641F62CE9C4DDFFBE1BD13F20, Loaded) == 0x000000, "Member 'BattleCamera_C_OnLoaded_944C3FC641F62CE9C4DDFFBE1BD13F20::Loaded' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.UserConstructionScript
// 0x0030 (0x0030 - 0x0000)
struct BattleCamera_C_UserConstructionScript final
{
public:
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamera_C_UserConstructionScript) == 0x000010, "Wrong alignment on BattleCamera_C_UserConstructionScript");
static_assert(sizeof(BattleCamera_C_UserConstructionScript) == 0x000030, "Wrong size on BattleCamera_C_UserConstructionScript");
static_assert(offsetof(BattleCamera_C_UserConstructionScript, CallFunc_GetTransform_ReturnValue) == 0x000000, "Member 'BattleCamera_C_UserConstructionScript::CallFunc_GetTransform_ReturnValue' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.SetHome
// 0x0098 (0x0098 - 0x0000)
struct BattleCamera_C_SetHome final
{
public:
	float                                         BlendTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0004(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FB1[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamera_C_SetHome) == 0x000008, "Wrong alignment on BattleCamera_C_SetHome");
static_assert(sizeof(BattleCamera_C_SetHome) == 0x000098, "Wrong size on BattleCamera_C_SetHome");
static_assert(offsetof(BattleCamera_C_SetHome, BlendTime) == 0x000000, "Member 'BattleCamera_C_SetHome::BlendTime' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetHome, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000004, "Member 'BattleCamera_C_SetHome::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetHome, CallFunc_K2_SetActorTransform_ReturnValue) == 0x00008C, "Member 'BattleCamera_C_SetHome::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetHome, CallFunc_GetPlayerController_ReturnValue) == 0x000090, "Member 'BattleCamera_C_SetHome::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.SetPartyFront
// 0x01A0 (0x01A0 - 0x0000)
struct BattleCamera_C_SetPartyFront final
{
public:
	TScriptInterface<class IBPI_CharaBaseAccessor_C> InUnit;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         DeltaTime;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FB2[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCapsuleComponent*                      CallFunc_BI_GetCapsuleComponent_Param;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_BI_GetMeshComponent_MeshComp;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB3[0xC];                                     // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Find_Look_at_Rotation_with_UpVec_ReturnValue; // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_Select_Default;                             // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0108(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamera_C_SetPartyFront) == 0x000010, "Wrong alignment on BattleCamera_C_SetPartyFront");
static_assert(sizeof(BattleCamera_C_SetPartyFront) == 0x0001A0, "Wrong size on BattleCamera_C_SetPartyFront");
static_assert(offsetof(BattleCamera_C_SetPartyFront, InUnit) == 0x000000, "Member 'BattleCamera_C_SetPartyFront::InUnit' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetPartyFront, DeltaTime) == 0x000010, "Member 'BattleCamera_C_SetPartyFront::DeltaTime' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetPartyFront, Temp_bool_Variable) == 0x000014, "Member 'BattleCamera_C_SetPartyFront::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetPartyFront, CallFunc_BI_GetCapsuleComponent_Param) == 0x000018, "Member 'BattleCamera_C_SetPartyFront::CallFunc_BI_GetCapsuleComponent_Param' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetPartyFront, CallFunc_BI_GetMeshComponent_MeshComp) == 0x000020, "Member 'BattleCamera_C_SetPartyFront::CallFunc_BI_GetMeshComponent_MeshComp' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetPartyFront, CallFunc_GetForwardVector_ReturnValue) == 0x000028, "Member 'BattleCamera_C_SetPartyFront::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetPartyFront, CallFunc_GetSocketTransform_ReturnValue) == 0x000040, "Member 'BattleCamera_C_SetPartyFront::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetPartyFront, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000070, "Member 'BattleCamera_C_SetPartyFront::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetPartyFront, CallFunc_BreakTransform_Location) == 0x00007C, "Member 'BattleCamera_C_SetPartyFront::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetPartyFront, CallFunc_BreakTransform_Rotation) == 0x000088, "Member 'BattleCamera_C_SetPartyFront::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetPartyFront, CallFunc_BreakTransform_Scale) == 0x000094, "Member 'BattleCamera_C_SetPartyFront::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetPartyFront, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A0, "Member 'BattleCamera_C_SetPartyFront::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetPartyFront, CallFunc_FindLookAtRotation_ReturnValue) == 0x0000AC, "Member 'BattleCamera_C_SetPartyFront::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetPartyFront, CallFunc_Find_Look_at_Rotation_with_UpVec_ReturnValue) == 0x0000B8, "Member 'BattleCamera_C_SetPartyFront::CallFunc_Find_Look_at_Rotation_with_UpVec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetPartyFront, K2Node_Select_Default) == 0x0000C4, "Member 'BattleCamera_C_SetPartyFront::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetPartyFront, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'BattleCamera_C_SetPartyFront::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetPartyFront, CallFunc_GetPlayerController_ReturnValue) == 0x000100, "Member 'BattleCamera_C_SetPartyFront::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetPartyFront, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000108, "Member 'BattleCamera_C_SetPartyFront::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetPartyFront, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000190, "Member 'BattleCamera_C_SetPartyFront::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.SetSkillCam
// 0x0150 (0x0150 - 0x0000)
struct BattleCamera_C_SetSkillCam final
{
public:
	TScriptInterface<class IBPI_CharaBaseAccessor_C> PartyIndex;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         DeltaTime;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BI_GetActorRotation_Rotation;             // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMeshComponent*                         CallFunc_BI_GetMeshComponent_MeshComp;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB4[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB5[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x00C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamera_C_SetSkillCam) == 0x000010, "Wrong alignment on BattleCamera_C_SetSkillCam");
static_assert(sizeof(BattleCamera_C_SetSkillCam) == 0x000150, "Wrong size on BattleCamera_C_SetSkillCam");
static_assert(offsetof(BattleCamera_C_SetSkillCam, PartyIndex) == 0x000000, "Member 'BattleCamera_C_SetSkillCam::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetSkillCam, DeltaTime) == 0x000010, "Member 'BattleCamera_C_SetSkillCam::DeltaTime' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetSkillCam, CallFunc_BI_GetActorRotation_Rotation) == 0x000014, "Member 'BattleCamera_C_SetSkillCam::CallFunc_BI_GetActorRotation_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetSkillCam, CallFunc_BI_GetMeshComponent_MeshComp) == 0x000020, "Member 'BattleCamera_C_SetSkillCam::CallFunc_BI_GetMeshComponent_MeshComp' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetSkillCam, CallFunc_GetSocketTransform_ReturnValue) == 0x000030, "Member 'BattleCamera_C_SetSkillCam::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetSkillCam, CallFunc_GetPlayerController_ReturnValue) == 0x000060, "Member 'BattleCamera_C_SetSkillCam::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetSkillCam, CallFunc_BreakTransform_Location) == 0x000068, "Member 'BattleCamera_C_SetSkillCam::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetSkillCam, CallFunc_BreakTransform_Rotation) == 0x000074, "Member 'BattleCamera_C_SetSkillCam::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetSkillCam, CallFunc_BreakTransform_Scale) == 0x000080, "Member 'BattleCamera_C_SetSkillCam::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetSkillCam, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'BattleCamera_C_SetSkillCam::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetSkillCam, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0000C0, "Member 'BattleCamera_C_SetSkillCam::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetSkillCam, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000148, "Member 'BattleCamera_C_SetSkillCam::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.SetSplineCam
// 0x0018 (0x0018 - 0x0000)
struct BattleCamera_C_SetSplineCam final
{
public:
	class UObject*                                SplineActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EyeTarget;                                         // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamera_C_SetSplineCam) == 0x000008, "Wrong alignment on BattleCamera_C_SetSplineCam");
static_assert(sizeof(BattleCamera_C_SetSplineCam) == 0x000018, "Wrong size on BattleCamera_C_SetSplineCam");
static_assert(offsetof(BattleCamera_C_SetSplineCam, SplineActor) == 0x000000, "Member 'BattleCamera_C_SetSplineCam::SplineActor' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetSplineCam, EyeTarget) == 0x000008, "Member 'BattleCamera_C_SetSplineCam::EyeTarget' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetSplineCam, Speed) == 0x000014, "Member 'BattleCamera_C_SetSplineCam::Speed' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.UpdateInterp
// 0x0340 (0x0340 - 0x0000)
struct BattleCamera_C_UpdateInterp final
{
public:
	float                                         Tick;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB6[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_SubTrans;                                       // 0x0010(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             Lo_Trans;                                          // 0x0040(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FB7[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x00D4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FB8[0x3];                                     // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB9[0xC];                                     // 0x0164(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0170(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FBA[0x3];                                     // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FBB[0x3];                                     // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FBC[0xC];                                     // 0x0214(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0220(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetFirstTransform_ReturnValue;            // 0x0250(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetSplinePointNum_retValue;               // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0285(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FBD[0x2];                                     // 0x0286(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_RotatorRotator_ReturnValue;    // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0292(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0293(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x02A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x02C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterp_To_UpVec_Considered_Return_Value; // 0x02D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FBE[0x3];                                     // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_Select_Default;                             // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x02F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FBF[0xC];                                     // 0x0304(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0310(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamera_C_UpdateInterp) == 0x000010, "Wrong alignment on BattleCamera_C_UpdateInterp");
static_assert(sizeof(BattleCamera_C_UpdateInterp) == 0x000340, "Wrong size on BattleCamera_C_UpdateInterp");
static_assert(offsetof(BattleCamera_C_UpdateInterp, Tick) == 0x000000, "Member 'BattleCamera_C_UpdateInterp::Tick' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, Lo_SubTrans) == 0x000010, "Member 'BattleCamera_C_UpdateInterp::Lo_SubTrans' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, Lo_Trans) == 0x000040, "Member 'BattleCamera_C_UpdateInterp::Lo_Trans' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, Temp_bool_Variable) == 0x000070, "Member 'BattleCamera_C_UpdateInterp::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_BreakTransform_Location) == 0x000074, "Member 'BattleCamera_C_UpdateInterp::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_BreakTransform_Rotation) == 0x000080, "Member 'BattleCamera_C_UpdateInterp::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_BreakTransform_Scale) == 0x00008C, "Member 'BattleCamera_C_UpdateInterp::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_BreakRotator_Roll) == 0x000098, "Member 'BattleCamera_C_UpdateInterp::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_BreakRotator_Pitch) == 0x00009C, "Member 'BattleCamera_C_UpdateInterp::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_BreakRotator_Yaw) == 0x0000A0, "Member 'BattleCamera_C_UpdateInterp::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_MakeVector_ReturnValue) == 0x0000A4, "Member 'BattleCamera_C_UpdateInterp::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_BreakTransform_Location_1) == 0x0000B0, "Member 'BattleCamera_C_UpdateInterp::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_BreakTransform_Rotation_1) == 0x0000BC, "Member 'BattleCamera_C_UpdateInterp::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_BreakTransform_Scale_1) == 0x0000C8, "Member 'BattleCamera_C_UpdateInterp::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0000D4, "Member 'BattleCamera_C_UpdateInterp::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_K2_SetActorTransform_ReturnValue) == 0x00015C, "Member 'BattleCamera_C_UpdateInterp::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_VSize_ReturnValue) == 0x000160, "Member 'BattleCamera_C_UpdateInterp::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_GetTransform_ReturnValue) == 0x000170, "Member 'BattleCamera_C_UpdateInterp::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_BreakTransform_Location_2) == 0x0001A0, "Member 'BattleCamera_C_UpdateInterp::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_BreakTransform_Rotation_2) == 0x0001AC, "Member 'BattleCamera_C_UpdateInterp::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_BreakTransform_Scale_2) == 0x0001B8, "Member 'BattleCamera_C_UpdateInterp::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001C4, "Member 'BattleCamera_C_UpdateInterp::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_BreakRotator_Roll_1) == 0x0001C8, "Member 'BattleCamera_C_UpdateInterp::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_BreakRotator_Pitch_1) == 0x0001CC, "Member 'BattleCamera_C_UpdateInterp::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_BreakRotator_Yaw_1) == 0x0001D0, "Member 'BattleCamera_C_UpdateInterp::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001D4, "Member 'BattleCamera_C_UpdateInterp::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_MakeVector_ReturnValue_1) == 0x0001E0, "Member 'BattleCamera_C_UpdateInterp::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0001EC, "Member 'BattleCamera_C_UpdateInterp::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_IsValid_ReturnValue) == 0x0001F8, "Member 'BattleCamera_C_UpdateInterp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_BreakVector_X) == 0x0001FC, "Member 'BattleCamera_C_UpdateInterp::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_BreakVector_Y) == 0x000200, "Member 'BattleCamera_C_UpdateInterp::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_BreakVector_Z) == 0x000204, "Member 'BattleCamera_C_UpdateInterp::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_MakeRotator_ReturnValue) == 0x000208, "Member 'BattleCamera_C_UpdateInterp::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_MakeTransform_ReturnValue) == 0x000220, "Member 'BattleCamera_C_UpdateInterp::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_GetFirstTransform_ReturnValue) == 0x000250, "Member 'BattleCamera_C_UpdateInterp::CallFunc_GetFirstTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_GetSplinePointNum_retValue) == 0x000280, "Member 'BattleCamera_C_UpdateInterp::CallFunc_GetSplinePointNum_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_Greater_IntInt_ReturnValue) == 0x000284, "Member 'BattleCamera_C_UpdateInterp::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_IsValid_ReturnValue_1) == 0x000285, "Member 'BattleCamera_C_UpdateInterp::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_SelectFloat_ReturnValue) == 0x000288, "Member 'BattleCamera_C_UpdateInterp::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00028C, "Member 'BattleCamera_C_UpdateInterp::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_Less_FloatFloat_ReturnValue) == 0x000290, "Member 'BattleCamera_C_UpdateInterp::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_EqualEqual_RotatorRotator_ReturnValue) == 0x000291, "Member 'BattleCamera_C_UpdateInterp::CallFunc_EqualEqual_RotatorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_BooleanAND_ReturnValue) == 0x000292, "Member 'BattleCamera_C_UpdateInterp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_BooleanOR_ReturnValue) == 0x000293, "Member 'BattleCamera_C_UpdateInterp::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000294, "Member 'BattleCamera_C_UpdateInterp::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0002A0, "Member 'BattleCamera_C_UpdateInterp::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_BreakTransform_Location_3) == 0x0002AC, "Member 'BattleCamera_C_UpdateInterp::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_BreakTransform_Rotation_3) == 0x0002B8, "Member 'BattleCamera_C_UpdateInterp::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_BreakTransform_Scale_3) == 0x0002C4, "Member 'BattleCamera_C_UpdateInterp::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_RInterp_To_UpVec_Considered_Return_Value) == 0x0002D0, "Member 'BattleCamera_C_UpdateInterp::CallFunc_RInterp_To_UpVec_Considered_Return_Value' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0002DC, "Member 'BattleCamera_C_UpdateInterp::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_RInterpTo_ReturnValue) == 0x0002E0, "Member 'BattleCamera_C_UpdateInterp::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, K2Node_Select_Default) == 0x0002EC, "Member 'BattleCamera_C_UpdateInterp::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_VInterpTo_ReturnValue) == 0x0002F8, "Member 'BattleCamera_C_UpdateInterp::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateInterp, CallFunc_MakeTransform_ReturnValue_1) == 0x000310, "Member 'BattleCamera_C_UpdateInterp::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.SetRailCam
// 0x0090 (0x0090 - 0x0000)
struct BattleCamera_C_SetRailCam final
{
public:
	class ABP_RailActor_C*                        SplineActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EyeTarget;                                         // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsReturn;                                          // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLockTarget;                                      // 0x0016(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FC0[0x1];                                     // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ChangeSpeedPoint;                                  // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FirstSpeed;                                        // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SecondSpeed;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         brendSpeed;                                        // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPanCamera;                                       // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FC1[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Fovy;                                              // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TargetActor;                                       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FC2[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetFirstTransform_ReturnValue;            // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FC3[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTempoBlendValue_retValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamera_C_SetRailCam) == 0x000010, "Wrong alignment on BattleCamera_C_SetRailCam");
static_assert(sizeof(BattleCamera_C_SetRailCam) == 0x000090, "Wrong size on BattleCamera_C_SetRailCam");
static_assert(offsetof(BattleCamera_C_SetRailCam, SplineActor) == 0x000000, "Member 'BattleCamera_C_SetRailCam::SplineActor' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetRailCam, EyeTarget) == 0x000008, "Member 'BattleCamera_C_SetRailCam::EyeTarget' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetRailCam, IsLoop) == 0x000014, "Member 'BattleCamera_C_SetRailCam::IsLoop' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetRailCam, IsReturn) == 0x000015, "Member 'BattleCamera_C_SetRailCam::IsReturn' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetRailCam, IsLockTarget) == 0x000016, "Member 'BattleCamera_C_SetRailCam::IsLockTarget' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetRailCam, ChangeSpeedPoint) == 0x000018, "Member 'BattleCamera_C_SetRailCam::ChangeSpeedPoint' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetRailCam, FirstSpeed) == 0x00001C, "Member 'BattleCamera_C_SetRailCam::FirstSpeed' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetRailCam, SecondSpeed) == 0x000020, "Member 'BattleCamera_C_SetRailCam::SecondSpeed' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetRailCam, brendSpeed) == 0x000024, "Member 'BattleCamera_C_SetRailCam::brendSpeed' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetRailCam, IsPanCamera) == 0x000028, "Member 'BattleCamera_C_SetRailCam::IsPanCamera' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetRailCam, Fovy) == 0x00002C, "Member 'BattleCamera_C_SetRailCam::Fovy' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetRailCam, TargetActor) == 0x000030, "Member 'BattleCamera_C_SetRailCam::TargetActor' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetRailCam, Temp_bool_Variable) == 0x000038, "Member 'BattleCamera_C_SetRailCam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetRailCam, Temp_bool_Variable_1) == 0x000039, "Member 'BattleCamera_C_SetRailCam::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetRailCam, Temp_bool_Variable_2) == 0x00003A, "Member 'BattleCamera_C_SetRailCam::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetRailCam, CallFunc_GetFirstTransform_ReturnValue) == 0x000040, "Member 'BattleCamera_C_SetRailCam::CallFunc_GetFirstTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetRailCam, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000070, "Member 'BattleCamera_C_SetRailCam::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetRailCam, K2Node_Select_Default) == 0x000074, "Member 'BattleCamera_C_SetRailCam::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetRailCam, CallFunc_GetTempoBlendValue_retValue) == 0x000078, "Member 'BattleCamera_C_SetRailCam::CallFunc_GetTempoBlendValue_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetRailCam, K2Node_Select_Default_1) == 0x00007C, "Member 'BattleCamera_C_SetRailCam::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetRailCam, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000080, "Member 'BattleCamera_C_SetRailCam::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetRailCam, K2Node_Select_Default_2) == 0x000084, "Member 'BattleCamera_C_SetRailCam::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetRailCam, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000088, "Member 'BattleCamera_C_SetRailCam::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.SetCamShake
// 0x0020 (0x0020 - 0x0000)
struct BattleCamera_C_SetCamShake final
{
public:
	class UClass*                                 InShakeClass;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FC4[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Scale;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamera_C_SetCamShake) == 0x000008, "Wrong alignment on BattleCamera_C_SetCamShake");
static_assert(sizeof(BattleCamera_C_SetCamShake) == 0x000020, "Wrong size on BattleCamera_C_SetCamShake");
static_assert(offsetof(BattleCamera_C_SetCamShake, InShakeClass) == 0x000000, "Member 'BattleCamera_C_SetCamShake::InShakeClass' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetCamShake, Sw) == 0x000008, "Member 'BattleCamera_C_SetCamShake::Sw' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetCamShake, Scale) == 0x00000C, "Member 'BattleCamera_C_SetCamShake::Scale' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetCamShake, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000010, "Member 'BattleCamera_C_SetCamShake::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetCamShake, CallFunc_StartCameraShake_ReturnValue) == 0x000018, "Member 'BattleCamera_C_SetCamShake::CallFunc_StartCameraShake_ReturnValue' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.IsInterp
// 0x0004 (0x0004 - 0x0000)
struct BattleCamera_C_IsInterp final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamera_C_IsInterp) == 0x000001, "Wrong alignment on BattleCamera_C_IsInterp");
static_assert(sizeof(BattleCamera_C_IsInterp) == 0x000004, "Wrong size on BattleCamera_C_IsInterp");
static_assert(offsetof(BattleCamera_C_IsInterp, RetValue) == 0x000000, "Member 'BattleCamera_C_IsInterp::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_IsInterp, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000001, "Member 'BattleCamera_C_IsInterp::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_IsInterp, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000002, "Member 'BattleCamera_C_IsInterp::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_IsInterp, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BattleCamera_C_IsInterp::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.SetTarget
// 0x01A0 (0x01A0 - 0x0000)
struct BattleCamera_C_SetTarget final
{
public:
	struct FVector                                Target;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         blendSpeed;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NewLocalVar_0;                                     // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FC5[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0020(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FC6[0x2];                                     // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTempoBlendValue_retValue;              // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC7[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00D0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Find_Look_at_Rotation_with_UpVec_ReturnValue; // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_Select_Default;                             // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FC8[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0170(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamera_C_SetTarget) == 0x000010, "Wrong alignment on BattleCamera_C_SetTarget");
static_assert(sizeof(BattleCamera_C_SetTarget) == 0x0001A0, "Wrong size on BattleCamera_C_SetTarget");
static_assert(offsetof(BattleCamera_C_SetTarget, Target) == 0x000000, "Member 'BattleCamera_C_SetTarget::Target' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, blendSpeed) == 0x00000C, "Member 'BattleCamera_C_SetTarget::blendSpeed' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, NewLocalVar_0) == 0x000010, "Member 'BattleCamera_C_SetTarget::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, Temp_bool_Variable) == 0x00001C, "Member 'BattleCamera_C_SetTarget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00001D, "Member 'BattleCamera_C_SetTarget::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000020, "Member 'BattleCamera_C_SetTarget::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000A8, "Member 'BattleCamera_C_SetTarget::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0000A9, "Member 'BattleCamera_C_SetTarget::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000AC, "Member 'BattleCamera_C_SetTarget::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, CallFunc_GetUpVector_ReturnValue) == 0x0000B8, "Member 'BattleCamera_C_SetTarget::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, CallFunc_GetTempoBlendValue_retValue) == 0x0000C4, "Member 'BattleCamera_C_SetTarget::CallFunc_GetTempoBlendValue_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C8, "Member 'BattleCamera_C_SetTarget::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, CallFunc_GetTransform_ReturnValue) == 0x0000D0, "Member 'BattleCamera_C_SetTarget::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, CallFunc_BreakTransform_Location) == 0x000100, "Member 'BattleCamera_C_SetTarget::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, CallFunc_BreakTransform_Rotation) == 0x00010C, "Member 'BattleCamera_C_SetTarget::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, CallFunc_BreakTransform_Scale) == 0x000118, "Member 'BattleCamera_C_SetTarget::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, CallFunc_FindLookAtRotation_ReturnValue) == 0x000124, "Member 'BattleCamera_C_SetTarget::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, CallFunc_BreakRotator_Roll) == 0x000130, "Member 'BattleCamera_C_SetTarget::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, CallFunc_BreakRotator_Pitch) == 0x000134, "Member 'BattleCamera_C_SetTarget::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, CallFunc_BreakRotator_Yaw) == 0x000138, "Member 'BattleCamera_C_SetTarget::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, CallFunc_BreakRotator_Roll_1) == 0x00013C, "Member 'BattleCamera_C_SetTarget::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, CallFunc_BreakRotator_Pitch_1) == 0x000140, "Member 'BattleCamera_C_SetTarget::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, CallFunc_BreakRotator_Yaw_1) == 0x000144, "Member 'BattleCamera_C_SetTarget::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, CallFunc_Find_Look_at_Rotation_with_UpVec_ReturnValue) == 0x000148, "Member 'BattleCamera_C_SetTarget::CallFunc_Find_Look_at_Rotation_with_UpVec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, CallFunc_MakeRotator_ReturnValue) == 0x000154, "Member 'BattleCamera_C_SetTarget::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, K2Node_Select_Default) == 0x000160, "Member 'BattleCamera_C_SetTarget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetTarget, CallFunc_MakeTransform_ReturnValue) == 0x000170, "Member 'BattleCamera_C_SetTarget::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.SetFovy
// 0x0020 (0x0020 - 0x0000)
struct BattleCamera_C_SetFovy final
{
public:
	float                                         Fovy;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Blend;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FC9[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTempoBlendValue_retValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FCA[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamera_C_SetFovy) == 0x000004, "Wrong alignment on BattleCamera_C_SetFovy");
static_assert(sizeof(BattleCamera_C_SetFovy) == 0x000020, "Wrong size on BattleCamera_C_SetFovy");
static_assert(offsetof(BattleCamera_C_SetFovy, Fovy) == 0x000000, "Member 'BattleCamera_C_SetFovy::Fovy' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetFovy, Blend) == 0x000004, "Member 'BattleCamera_C_SetFovy::Blend' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetFovy, Temp_bool_Variable) == 0x000008, "Member 'BattleCamera_C_SetFovy::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetFovy, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000009, "Member 'BattleCamera_C_SetFovy::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetFovy, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00000A, "Member 'BattleCamera_C_SetFovy::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetFovy, CallFunc_GetTempoBlendValue_retValue) == 0x00000C, "Member 'BattleCamera_C_SetFovy::CallFunc_GetTempoBlendValue_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetFovy, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'BattleCamera_C_SetFovy::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetFovy, K2Node_Select_Default) == 0x000014, "Member 'BattleCamera_C_SetFovy::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetFovy, CallFunc_Less_FloatFloat_ReturnValue) == 0x000018, "Member 'BattleCamera_C_SetFovy::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetFovy, CallFunc_SelectFloat_ReturnValue) == 0x00001C, "Member 'BattleCamera_C_SetFovy::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.UpdateFovyInterp
// 0x000C (0x000C - 0x0000)
struct BattleCamera_C_UpdateFovyInterp final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FCB[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamera_C_UpdateFovyInterp) == 0x000004, "Wrong alignment on BattleCamera_C_UpdateFovyInterp");
static_assert(sizeof(BattleCamera_C_UpdateFovyInterp) == 0x00000C, "Wrong size on BattleCamera_C_UpdateFovyInterp");
static_assert(offsetof(BattleCamera_C_UpdateFovyInterp, DeltaTime) == 0x000000, "Member 'BattleCamera_C_UpdateFovyInterp::DeltaTime' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateFovyInterp, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000004, "Member 'BattleCamera_C_UpdateFovyInterp::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateFovyInterp, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000005, "Member 'BattleCamera_C_UpdateFovyInterp::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateFovyInterp, CallFunc_FInterpTo_ReturnValue) == 0x000008, "Member 'BattleCamera_C_UpdateFovyInterp::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.RailIsArrived
// 0x0002 (0x0002 - 0x0000)
struct BattleCamera_C_RailIsArrived final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsArrived_retValue;                       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamera_C_RailIsArrived) == 0x000001, "Wrong alignment on BattleCamera_C_RailIsArrived");
static_assert(sizeof(BattleCamera_C_RailIsArrived) == 0x000002, "Wrong size on BattleCamera_C_RailIsArrived");
static_assert(offsetof(BattleCamera_C_RailIsArrived, RetValue) == 0x000000, "Member 'BattleCamera_C_RailIsArrived::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_RailIsArrived, CallFunc_IsArrived_retValue) == 0x000001, "Member 'BattleCamera_C_RailIsArrived::CallFunc_IsArrived_retValue' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.SetMainCamera
// 0x0010 (0x0010 - 0x0000)
struct BattleCamera_C_SetMainCamera final
{
public:
	float                                         BlendTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FCC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamera_C_SetMainCamera) == 0x000008, "Wrong alignment on BattleCamera_C_SetMainCamera");
static_assert(sizeof(BattleCamera_C_SetMainCamera) == 0x000010, "Wrong size on BattleCamera_C_SetMainCamera");
static_assert(offsetof(BattleCamera_C_SetMainCamera, BlendTime) == 0x000000, "Member 'BattleCamera_C_SetMainCamera::BlendTime' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_SetMainCamera, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BattleCamera_C_SetMainCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.GetTempoBlendValue
// 0x000C (0x000C - 0x0000)
struct BattleCamera_C_GetTempoBlendValue final
{
public:
	float                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBattleTempo_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamera_C_GetTempoBlendValue) == 0x000004, "Wrong alignment on BattleCamera_C_GetTempoBlendValue");
static_assert(sizeof(BattleCamera_C_GetTempoBlendValue) == 0x00000C, "Wrong size on BattleCamera_C_GetTempoBlendValue");
static_assert(offsetof(BattleCamera_C_GetTempoBlendValue, RetValue) == 0x000000, "Member 'BattleCamera_C_GetTempoBlendValue::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_GetTempoBlendValue, CallFunc_GetBattleTempo_ReturnValue) == 0x000004, "Member 'BattleCamera_C_GetTempoBlendValue::CallFunc_GetBattleTempo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_GetTempoBlendValue, K2Node_SwitchInteger_CmpSuccess) == 0x000008, "Member 'BattleCamera_C_GetTempoBlendValue::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.IsNoMove
// 0x0006 (0x0006 - 0x0000)
struct BattleCamera_C_IsNoMove final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInterp_retValue;                        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_retValue;                       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamera_C_IsNoMove) == 0x000001, "Wrong alignment on BattleCamera_C_IsNoMove");
static_assert(sizeof(BattleCamera_C_IsNoMove) == 0x000006, "Wrong size on BattleCamera_C_IsNoMove");
static_assert(offsetof(BattleCamera_C_IsNoMove, RetValue) == 0x000000, "Member 'BattleCamera_C_IsNoMove::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_IsNoMove, CallFunc_IsInterp_retValue) == 0x000001, "Member 'BattleCamera_C_IsNoMove::CallFunc_IsInterp_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_IsNoMove, CallFunc_IsPlaying_retValue) == 0x000002, "Member 'BattleCamera_C_IsNoMove::CallFunc_IsPlaying_retValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_IsNoMove, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BattleCamera_C_IsNoMove::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_IsNoMove, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'BattleCamera_C_IsNoMove::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_IsNoMove, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'BattleCamera_C_IsNoMove::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.CurrentForce
// 0x0100 (0x0100 - 0x0000)
struct BattleCamera_C_CurrentForce final
{
public:
	float                                         BlendTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FCD[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFOVAngle_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FCE[0xC];                                     // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0070(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamera_C_CurrentForce) == 0x000010, "Wrong alignment on BattleCamera_C_CurrentForce");
static_assert(sizeof(BattleCamera_C_CurrentForce) == 0x000100, "Wrong size on BattleCamera_C_CurrentForce");
static_assert(offsetof(BattleCamera_C_CurrentForce, BlendTime) == 0x000000, "Member 'BattleCamera_C_CurrentForce::BlendTime' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_CurrentForce, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000008, "Member 'BattleCamera_C_CurrentForce::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_CurrentForce, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BattleCamera_C_CurrentForce::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_CurrentForce, CallFunc_GetFOVAngle_ReturnValue) == 0x000018, "Member 'BattleCamera_C_CurrentForce::CallFunc_GetFOVAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_CurrentForce, CallFunc_GetCameraRotation_ReturnValue) == 0x00001C, "Member 'BattleCamera_C_CurrentForce::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_CurrentForce, CallFunc_GetCameraLocation_ReturnValue) == 0x000028, "Member 'BattleCamera_C_CurrentForce::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_CurrentForce, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'BattleCamera_C_CurrentForce::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_CurrentForce, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000070, "Member 'BattleCamera_C_CurrentForce::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_CurrentForce, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000F8, "Member 'BattleCamera_C_CurrentForce::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.StartBlendOverride
// 0x0004 (0x0004 - 0x0000)
struct BattleCamera_C_StartBlendOverride final
{
public:
	float                                         BlendTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamera_C_StartBlendOverride) == 0x000004, "Wrong alignment on BattleCamera_C_StartBlendOverride");
static_assert(sizeof(BattleCamera_C_StartBlendOverride) == 0x000004, "Wrong size on BattleCamera_C_StartBlendOverride");
static_assert(offsetof(BattleCamera_C_StartBlendOverride, BlendTime) == 0x000000, "Member 'BattleCamera_C_StartBlendOverride::BlendTime' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.StartFovyOverride
// 0x0004 (0x0004 - 0x0000)
struct BattleCamera_C_StartFovyOverride final
{
public:
	float                                         Fovy;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamera_C_StartFovyOverride) == 0x000004, "Wrong alignment on BattleCamera_C_StartFovyOverride");
static_assert(sizeof(BattleCamera_C_StartFovyOverride) == 0x000004, "Wrong size on BattleCamera_C_StartFovyOverride");
static_assert(offsetof(BattleCamera_C_StartFovyOverride, Fovy) == 0x000000, "Member 'BattleCamera_C_StartFovyOverride::Fovy' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.GetMID_BattleMapDark
// 0x0008 (0x0008 - 0x0000)
struct BattleCamera_C_GetMID_BattleMapDark final
{
public:
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamera_C_GetMID_BattleMapDark) == 0x000008, "Wrong alignment on BattleCamera_C_GetMID_BattleMapDark");
static_assert(sizeof(BattleCamera_C_GetMID_BattleMapDark) == 0x000008, "Wrong size on BattleCamera_C_GetMID_BattleMapDark");
static_assert(offsetof(BattleCamera_C_GetMID_BattleMapDark, Mid) == 0x000000, "Member 'BattleCamera_C_GetMID_BattleMapDark::Mid' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.OnInterpFinished
// 0x00F0 (0x00F0 - 0x0000)
struct BattleCamera_C_OnInterpFinished final
{
public:
	float                                         CurrentBlendSpeed;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FCF[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0060(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamera_C_OnInterpFinished) == 0x000010, "Wrong alignment on BattleCamera_C_OnInterpFinished");
static_assert(sizeof(BattleCamera_C_OnInterpFinished) == 0x0000F0, "Wrong size on BattleCamera_C_OnInterpFinished");
static_assert(offsetof(BattleCamera_C_OnInterpFinished, CurrentBlendSpeed) == 0x000000, "Member 'BattleCamera_C_OnInterpFinished::CurrentBlendSpeed' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_OnInterpFinished, CallFunc_BreakTransform_Location) == 0x000004, "Member 'BattleCamera_C_OnInterpFinished::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_OnInterpFinished, CallFunc_BreakTransform_Rotation) == 0x000010, "Member 'BattleCamera_C_OnInterpFinished::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_OnInterpFinished, CallFunc_BreakTransform_Scale) == 0x00001C, "Member 'BattleCamera_C_OnInterpFinished::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_OnInterpFinished, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BattleCamera_C_OnInterpFinished::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_OnInterpFinished, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000060, "Member 'BattleCamera_C_OnInterpFinished::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_OnInterpFinished, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000E8, "Member 'BattleCamera_C_OnInterpFinished::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.SetOverrideTarget
// 0x0008 (0x0008 - 0x0000)
struct BattleCamera_C_SetOverrideTarget final
{
public:
	class FName                                   SocketName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamera_C_SetOverrideTarget) == 0x000004, "Wrong alignment on BattleCamera_C_SetOverrideTarget");
static_assert(sizeof(BattleCamera_C_SetOverrideTarget) == 0x000008, "Wrong size on BattleCamera_C_SetOverrideTarget");
static_assert(offsetof(BattleCamera_C_SetOverrideTarget, SocketName) == 0x000000, "Member 'BattleCamera_C_SetOverrideTarget::SocketName' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.Set_MPA_BattleMapDark
// 0x0030 (0x0030 - 0x0000)
struct BattleCamera_C_Set_MPA_BattleMapDark final
{
public:
	TSoftObjectPtr<class UMaterialParameterApplier> MPA;                                               // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjRef_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamera_C_Set_MPA_BattleMapDark) == 0x000008, "Wrong alignment on BattleCamera_C_Set_MPA_BattleMapDark");
static_assert(sizeof(BattleCamera_C_Set_MPA_BattleMapDark) == 0x000030, "Wrong size on BattleCamera_C_Set_MPA_BattleMapDark");
static_assert(offsetof(BattleCamera_C_Set_MPA_BattleMapDark, MPA) == 0x000000, "Member 'BattleCamera_C_Set_MPA_BattleMapDark::MPA' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_Set_MPA_BattleMapDark, CallFunc_IsValidSoftObjRef_ReturnValue) == 0x000028, "Member 'BattleCamera_C_Set_MPA_BattleMapDark::CallFunc_IsValidSoftObjRef_ReturnValue' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.StopCamShake
// 0x0018 (0x0018 - 0x0000)
struct BattleCamera_C_StopCamShake final
{
public:
	bool                                          Immediately;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FD0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamera_C_StopCamShake) == 0x000008, "Wrong alignment on BattleCamera_C_StopCamShake");
static_assert(sizeof(BattleCamera_C_StopCamShake) == 0x000018, "Wrong size on BattleCamera_C_StopCamShake");
static_assert(offsetof(BattleCamera_C_StopCamShake, Immediately) == 0x000000, "Member 'BattleCamera_C_StopCamShake::Immediately' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_StopCamShake, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000008, "Member 'BattleCamera_C_StopCamShake::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_StopCamShake, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BattleCamera_C_StopCamShake::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.UpdateCharaDither
// 0x0004 (0x0004 - 0x0000)
struct BattleCamera_C_UpdateCharaDither final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCamera_C_UpdateCharaDither) == 0x000004, "Wrong alignment on BattleCamera_C_UpdateCharaDither");
static_assert(sizeof(BattleCamera_C_UpdateCharaDither) == 0x000004, "Wrong size on BattleCamera_C_UpdateCharaDither");
static_assert(offsetof(BattleCamera_C_UpdateCharaDither, DeltaTime) == 0x000000, "Member 'BattleCamera_C_UpdateCharaDither::DeltaTime' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.EnableCharaDither
// 0x0010 (0x0010 - 0x0000)
struct BattleCamera_C_EnableCharaDither final
{
public:
	TArray<class AActor*>                         IgnoreActors;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BattleCamera_C_EnableCharaDither) == 0x000008, "Wrong alignment on BattleCamera_C_EnableCharaDither");
static_assert(sizeof(BattleCamera_C_EnableCharaDither) == 0x000010, "Wrong size on BattleCamera_C_EnableCharaDither");
static_assert(offsetof(BattleCamera_C_EnableCharaDither, IgnoreActors) == 0x000000, "Member 'BattleCamera_C_EnableCharaDither::IgnoreActors' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.SetEnableBattleTickMode
// 0x0001 (0x0001 - 0x0000)
struct BattleCamera_C_SetEnableBattleTickMode final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamera_C_SetEnableBattleTickMode) == 0x000001, "Wrong alignment on BattleCamera_C_SetEnableBattleTickMode");
static_assert(sizeof(BattleCamera_C_SetEnableBattleTickMode) == 0x000001, "Wrong size on BattleCamera_C_SetEnableBattleTickMode");
static_assert(offsetof(BattleCamera_C_SetEnableBattleTickMode, Enable) == 0x000000, "Member 'BattleCamera_C_SetEnableBattleTickMode::Enable' has a wrong offset!");

// Function BattleCamera.BattleCamera_C.UpdateComponent
// 0x0008 (0x0008 - 0x0000)
struct BattleCamera_C_UpdateComponent final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ContinueUpdate;                                    // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCamera_C_UpdateComponent) == 0x000004, "Wrong alignment on BattleCamera_C_UpdateComponent");
static_assert(sizeof(BattleCamera_C_UpdateComponent) == 0x000008, "Wrong size on BattleCamera_C_UpdateComponent");
static_assert(offsetof(BattleCamera_C_UpdateComponent, Delta) == 0x000000, "Member 'BattleCamera_C_UpdateComponent::Delta' has a wrong offset!");
static_assert(offsetof(BattleCamera_C_UpdateComponent, ContinueUpdate) == 0x000004, "Member 'BattleCamera_C_UpdateComponent::ContinueUpdate' has a wrong offset!");

}

