#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Quest2

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "E_CampQuest_SsAnimState_structs.hpp"
#include "Project_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WB_Quest2.WB_Quest2_C.OnMovedSummaryScrollBar_ByMouse
// 0x0004 (0x0004 - 0x0000)
struct WB_Quest2_C_OnMovedSummaryScrollBar_ByMouse final
{
public:
	float                                         ScrollRate;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_OnMovedSummaryScrollBar_ByMouse) == 0x000004, "Wrong alignment on WB_Quest2_C_OnMovedSummaryScrollBar_ByMouse");
static_assert(sizeof(WB_Quest2_C_OnMovedSummaryScrollBar_ByMouse) == 0x000004, "Wrong size on WB_Quest2_C_OnMovedSummaryScrollBar_ByMouse");
static_assert(offsetof(WB_Quest2_C_OnMovedSummaryScrollBar_ByMouse, ScrollRate) == 0x000000, "Member 'WB_Quest2_C_OnMovedSummaryScrollBar_ByMouse::ScrollRate' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.OnMovedSlotListScrollBar_ByMouse
// 0x0004 (0x0004 - 0x0000)
struct WB_Quest2_C_OnMovedSlotListScrollBar_ByMouse final
{
public:
	float                                         ScrollRate;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_OnMovedSlotListScrollBar_ByMouse) == 0x000004, "Wrong alignment on WB_Quest2_C_OnMovedSlotListScrollBar_ByMouse");
static_assert(sizeof(WB_Quest2_C_OnMovedSlotListScrollBar_ByMouse) == 0x000004, "Wrong size on WB_Quest2_C_OnMovedSlotListScrollBar_ByMouse");
static_assert(offsetof(WB_Quest2_C_OnMovedSlotListScrollBar_ByMouse, ScrollRate) == 0x000000, "Member 'WB_Quest2_C_OnMovedSlotListScrollBar_ByMouse::ScrollRate' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.OnHoveredMouseToSlot
// 0x0004 (0x0004 - 0x0000)
struct WB_Quest2_C_OnHoveredMouseToSlot final
{
public:
	int32                                         SlotIdx;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_OnHoveredMouseToSlot) == 0x000004, "Wrong alignment on WB_Quest2_C_OnHoveredMouseToSlot");
static_assert(sizeof(WB_Quest2_C_OnHoveredMouseToSlot) == 0x000004, "Wrong size on WB_Quest2_C_OnHoveredMouseToSlot");
static_assert(offsetof(WB_Quest2_C_OnHoveredMouseToSlot, SlotIdx) == 0x000000, "Member 'WB_Quest2_C_OnHoveredMouseToSlot::SlotIdx' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.BindMouseInputEvent
// 0x0030 (0x0030 - 0x0000)
struct WB_Quest2_C_BindMouseInputEvent final
{
public:
	TDelegate<void(float Position)>               K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 OnHoveredSlot)>          K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float Position)>               K2Node_CreateDelegate_OutputDelegate_2;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WB_Quest2_C_BindMouseInputEvent) == 0x000004, "Wrong alignment on WB_Quest2_C_BindMouseInputEvent");
static_assert(sizeof(WB_Quest2_C_BindMouseInputEvent) == 0x000030, "Wrong size on WB_Quest2_C_BindMouseInputEvent");
static_assert(offsetof(WB_Quest2_C_BindMouseInputEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WB_Quest2_C_BindMouseInputEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_BindMouseInputEvent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'WB_Quest2_C_BindMouseInputEvent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_BindMouseInputEvent, K2Node_CreateDelegate_OutputDelegate_2) == 0x000020, "Member 'WB_Quest2_C_BindMouseInputEvent::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.GetMaxSummaryScrollOffset
// 0x0008 (0x0008 - 0x0000)
struct WB_Quest2_C_GetMaxSummaryScrollOffset final
{
public:
	int32                                         MaxOffset;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxScrollOffset_MaxOffset;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_GetMaxSummaryScrollOffset) == 0x000004, "Wrong alignment on WB_Quest2_C_GetMaxSummaryScrollOffset");
static_assert(sizeof(WB_Quest2_C_GetMaxSummaryScrollOffset) == 0x000008, "Wrong size on WB_Quest2_C_GetMaxSummaryScrollOffset");
static_assert(offsetof(WB_Quest2_C_GetMaxSummaryScrollOffset, MaxOffset) == 0x000000, "Member 'WB_Quest2_C_GetMaxSummaryScrollOffset::MaxOffset' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_GetMaxSummaryScrollOffset, CallFunc_GetMaxScrollOffset_MaxOffset) == 0x000004, "Member 'WB_Quest2_C_GetMaxSummaryScrollOffset::CallFunc_GetMaxScrollOffset_MaxOffset' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.IsEnableMouseWheel
// 0x000A (0x000A - 0x0000)
struct WB_Quest2_C_IsEnableMouseWheel final
{
public:
	bool                                          IsEnableScroll_L;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsEnableScroll_R;                                  // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_IsEnableScroll_R;                                // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_IsEnableScroll_L;                                // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMouseOveredToScrollBar_ReturnValue;     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMouseOveredToScrollBar_ReturnValue_1;   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetMouseOvered_ReturnValue;               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetMouseOvered_ReturnValue_1;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Quest2_C_IsEnableMouseWheel) == 0x000001, "Wrong alignment on WB_Quest2_C_IsEnableMouseWheel");
static_assert(sizeof(WB_Quest2_C_IsEnableMouseWheel) == 0x00000A, "Wrong size on WB_Quest2_C_IsEnableMouseWheel");
static_assert(offsetof(WB_Quest2_C_IsEnableMouseWheel, IsEnableScroll_L) == 0x000000, "Member 'WB_Quest2_C_IsEnableMouseWheel::IsEnableScroll_L' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsEnableMouseWheel, IsEnableScroll_R) == 0x000001, "Member 'WB_Quest2_C_IsEnableMouseWheel::IsEnableScroll_R' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsEnableMouseWheel, L_IsEnableScroll_R) == 0x000002, "Member 'WB_Quest2_C_IsEnableMouseWheel::L_IsEnableScroll_R' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsEnableMouseWheel, L_IsEnableScroll_L) == 0x000003, "Member 'WB_Quest2_C_IsEnableMouseWheel::L_IsEnableScroll_L' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsEnableMouseWheel, CallFunc_IsMouseOveredToScrollBar_ReturnValue) == 0x000004, "Member 'WB_Quest2_C_IsEnableMouseWheel::CallFunc_IsMouseOveredToScrollBar_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsEnableMouseWheel, CallFunc_IsMouseOveredToScrollBar_ReturnValue_1) == 0x000005, "Member 'WB_Quest2_C_IsEnableMouseWheel::CallFunc_IsMouseOveredToScrollBar_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsEnableMouseWheel, CallFunc_GetMouseOvered_ReturnValue) == 0x000006, "Member 'WB_Quest2_C_IsEnableMouseWheel::CallFunc_GetMouseOvered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsEnableMouseWheel, CallFunc_BooleanOR_ReturnValue) == 0x000007, "Member 'WB_Quest2_C_IsEnableMouseWheel::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsEnableMouseWheel, CallFunc_GetMouseOvered_ReturnValue_1) == 0x000008, "Member 'WB_Quest2_C_IsEnableMouseWheel::CallFunc_GetMouseOvered_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsEnableMouseWheel, CallFunc_BooleanOR_ReturnValue_1) == 0x000009, "Member 'WB_Quest2_C_IsEnableMouseWheel::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.InitMouseWheelCanvas
// 0x0060 (0x0060 - 0x0000)
struct WB_Quest2_C_InitMouseWheelCanvas final
{
public:
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSSPPositionDataByPartsName_OutVec;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue_1;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSSPPositionDataByPartsName_OutVec_1;   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_InitMouseWheelCanvas) == 0x000008, "Wrong alignment on WB_Quest2_C_InitMouseWheelCanvas");
static_assert(sizeof(WB_Quest2_C_InitMouseWheelCanvas) == 0x000060, "Wrong size on WB_Quest2_C_InitMouseWheelCanvas");
static_assert(offsetof(WB_Quest2_C_InitMouseWheelCanvas, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000000, "Member 'WB_Quest2_C_InitMouseWheelCanvas::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_InitMouseWheelCanvas, CallFunc_GetDesiredSize_ReturnValue) == 0x000008, "Member 'WB_Quest2_C_InitMouseWheelCanvas::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_InitMouseWheelCanvas, CallFunc_BreakVector2D_X) == 0x000010, "Member 'WB_Quest2_C_InitMouseWheelCanvas::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_InitMouseWheelCanvas, CallFunc_BreakVector2D_Y) == 0x000014, "Member 'WB_Quest2_C_InitMouseWheelCanvas::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_InitMouseWheelCanvas, CallFunc_GetSSPPositionDataByPartsName_OutVec) == 0x000018, "Member 'WB_Quest2_C_InitMouseWheelCanvas::CallFunc_GetSSPPositionDataByPartsName_OutVec' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_InitMouseWheelCanvas, CallFunc_BreakVector2D_X_1) == 0x000020, "Member 'WB_Quest2_C_InitMouseWheelCanvas::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_InitMouseWheelCanvas, CallFunc_BreakVector2D_Y_1) == 0x000024, "Member 'WB_Quest2_C_InitMouseWheelCanvas::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_InitMouseWheelCanvas, CallFunc_GetDesiredSize_ReturnValue_1) == 0x000028, "Member 'WB_Quest2_C_InitMouseWheelCanvas::CallFunc_GetDesiredSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_InitMouseWheelCanvas, CallFunc_MakeVector2D_ReturnValue) == 0x000030, "Member 'WB_Quest2_C_InitMouseWheelCanvas::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_InitMouseWheelCanvas, CallFunc_BreakVector2D_X_2) == 0x000038, "Member 'WB_Quest2_C_InitMouseWheelCanvas::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_InitMouseWheelCanvas, CallFunc_BreakVector2D_Y_2) == 0x00003C, "Member 'WB_Quest2_C_InitMouseWheelCanvas::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_InitMouseWheelCanvas, CallFunc_GetSSPPositionDataByPartsName_OutVec_1) == 0x000040, "Member 'WB_Quest2_C_InitMouseWheelCanvas::CallFunc_GetSSPPositionDataByPartsName_OutVec_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_InitMouseWheelCanvas, CallFunc_BreakVector2D_X_3) == 0x000048, "Member 'WB_Quest2_C_InitMouseWheelCanvas::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_InitMouseWheelCanvas, CallFunc_BreakVector2D_Y_3) == 0x00004C, "Member 'WB_Quest2_C_InitMouseWheelCanvas::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_InitMouseWheelCanvas, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000050, "Member 'WB_Quest2_C_InitMouseWheelCanvas::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_InitMouseWheelCanvas, CallFunc_MakeVector2D_ReturnValue_1) == 0x000058, "Member 'WB_Quest2_C_InitMouseWheelCanvas::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.Tick_FrameIn
// 0x0030 (0x0030 - 0x0000)
struct WB_Quest2_C_Tick_FrameIn final
{
public:
	float                                         InDeltaTime;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_933B[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_933C[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue_2;                       // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Quest2_C_Tick_FrameIn) == 0x000004, "Wrong alignment on WB_Quest2_C_Tick_FrameIn");
static_assert(sizeof(WB_Quest2_C_Tick_FrameIn) == 0x000030, "Wrong size on WB_Quest2_C_Tick_FrameIn");
static_assert(offsetof(WB_Quest2_C_Tick_FrameIn, InDeltaTime) == 0x000000, "Member 'WB_Quest2_C_Tick_FrameIn::InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Tick_FrameIn, Temp_int_Variable) == 0x000004, "Member 'WB_Quest2_C_Tick_FrameIn::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Tick_FrameIn, Temp_int_Variable_1) == 0x000008, "Member 'WB_Quest2_C_Tick_FrameIn::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Tick_FrameIn, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'WB_Quest2_C_Tick_FrameIn::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Tick_FrameIn, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000010, "Member 'WB_Quest2_C_Tick_FrameIn::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Tick_FrameIn, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'WB_Quest2_C_Tick_FrameIn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Tick_FrameIn, CallFunc_Play_ReturnValue) == 0x000018, "Member 'WB_Quest2_C_Tick_FrameIn::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Tick_FrameIn, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'WB_Quest2_C_Tick_FrameIn::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Tick_FrameIn, Temp_int_Variable_2) == 0x000020, "Member 'WB_Quest2_C_Tick_FrameIn::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Tick_FrameIn, CallFunc_Play_ReturnValue_1) == 0x000024, "Member 'WB_Quest2_C_Tick_FrameIn::CallFunc_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Tick_FrameIn, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000025, "Member 'WB_Quest2_C_Tick_FrameIn::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Tick_FrameIn, CallFunc_Add_IntInt_ReturnValue_2) == 0x000028, "Member 'WB_Quest2_C_Tick_FrameIn::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Tick_FrameIn, CallFunc_Play_ReturnValue_2) == 0x00002C, "Member 'WB_Quest2_C_Tick_FrameIn::CallFunc_Play_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Tick_FrameIn, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x00002D, "Member 'WB_Quest2_C_Tick_FrameIn::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Tick_FrameIn, K2Node_SwitchInteger_CmpSuccess) == 0x00002E, "Member 'WB_Quest2_C_Tick_FrameIn::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.Update_SummaryScrollBarAnim
// 0x002C (0x002C - 0x0000)
struct WB_Quest2_C_Update_SummaryScrollBarAnim final
{
public:
	float                                         CallFunc_GetScrollPosRate_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimPackName;  // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimationName; // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_933D[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimPackName_1; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimationName_1; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRequiredScroll_RequiredScroll;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Quest2_C_Update_SummaryScrollBarAnim) == 0x000004, "Wrong alignment on WB_Quest2_C_Update_SummaryScrollBarAnim");
static_assert(sizeof(WB_Quest2_C_Update_SummaryScrollBarAnim) == 0x00002C, "Wrong size on WB_Quest2_C_Update_SummaryScrollBarAnim");
static_assert(offsetof(WB_Quest2_C_Update_SummaryScrollBarAnim, CallFunc_GetScrollPosRate_ReturnValue) == 0x000000, "Member 'WB_Quest2_C_Update_SummaryScrollBarAnim::CallFunc_GetScrollPosRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Update_SummaryScrollBarAnim, CallFunc_GetPlayingAnimationName_OutAnimPackName) == 0x000004, "Member 'WB_Quest2_C_Update_SummaryScrollBarAnim::CallFunc_GetPlayingAnimationName_OutAnimPackName' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Update_SummaryScrollBarAnim, CallFunc_GetPlayingAnimationName_OutAnimationName) == 0x00000C, "Member 'WB_Quest2_C_Update_SummaryScrollBarAnim::CallFunc_GetPlayingAnimationName_OutAnimationName' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Update_SummaryScrollBarAnim, K2Node_SwitchName_CmpSuccess) == 0x000014, "Member 'WB_Quest2_C_Update_SummaryScrollBarAnim::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Update_SummaryScrollBarAnim, CallFunc_Play_ReturnValue) == 0x000015, "Member 'WB_Quest2_C_Update_SummaryScrollBarAnim::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Update_SummaryScrollBarAnim, CallFunc_GetPlayingAnimationName_OutAnimPackName_1) == 0x000018, "Member 'WB_Quest2_C_Update_SummaryScrollBarAnim::CallFunc_GetPlayingAnimationName_OutAnimPackName_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Update_SummaryScrollBarAnim, CallFunc_GetPlayingAnimationName_OutAnimationName_1) == 0x000020, "Member 'WB_Quest2_C_Update_SummaryScrollBarAnim::CallFunc_GetPlayingAnimationName_OutAnimationName_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Update_SummaryScrollBarAnim, K2Node_SwitchName_CmpSuccess_1) == 0x000028, "Member 'WB_Quest2_C_Update_SummaryScrollBarAnim::K2Node_SwitchName_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Update_SummaryScrollBarAnim, CallFunc_Play_ReturnValue_1) == 0x000029, "Member 'WB_Quest2_C_Update_SummaryScrollBarAnim::CallFunc_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Update_SummaryScrollBarAnim, CallFunc_IsRequiredScroll_RequiredScroll) == 0x00002A, "Member 'WB_Quest2_C_Update_SummaryScrollBarAnim::CallFunc_IsRequiredScroll_RequiredScroll' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.GetSummaryScrollState
// 0x0018 (0x0018 - 0x0000)
struct WB_Quest2_C_GetSummaryScrollState final
{
public:
	bool                                          IsScroll;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_933E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ScrollRate;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScrollOffset;                                      // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScrollPosRate_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetScrollOffset_ScrollOffset;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRequiredScroll_RequiredScroll;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Quest2_C_GetSummaryScrollState) == 0x000004, "Wrong alignment on WB_Quest2_C_GetSummaryScrollState");
static_assert(sizeof(WB_Quest2_C_GetSummaryScrollState) == 0x000018, "Wrong size on WB_Quest2_C_GetSummaryScrollState");
static_assert(offsetof(WB_Quest2_C_GetSummaryScrollState, IsScroll) == 0x000000, "Member 'WB_Quest2_C_GetSummaryScrollState::IsScroll' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_GetSummaryScrollState, ScrollRate) == 0x000004, "Member 'WB_Quest2_C_GetSummaryScrollState::ScrollRate' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_GetSummaryScrollState, ScrollOffset) == 0x000008, "Member 'WB_Quest2_C_GetSummaryScrollState::ScrollOffset' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_GetSummaryScrollState, CallFunc_GetScrollPosRate_ReturnValue) == 0x00000C, "Member 'WB_Quest2_C_GetSummaryScrollState::CallFunc_GetScrollPosRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_GetSummaryScrollState, CallFunc_GetScrollOffset_ScrollOffset) == 0x000010, "Member 'WB_Quest2_C_GetSummaryScrollState::CallFunc_GetScrollOffset_ScrollOffset' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_GetSummaryScrollState, CallFunc_IsRequiredScroll_RequiredScroll) == 0x000014, "Member 'WB_Quest2_C_GetSummaryScrollState::CallFunc_IsRequiredScroll_RequiredScroll' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.IsPlaying_INOUT
// 0x0060 (0x0060 - 0x0000)
struct WB_Quest2_C_IsPlaying_INOUT final
{
public:
	bool                                          IsAnimPlaying;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_933F[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimPackName;  // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimationName; // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue_2;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_2;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9340[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimPackName_1; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimationName_1; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9341[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimPackName_2; // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimationName_2; // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_2;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9342[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimPackName_3; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimationName_3; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_3;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue_3;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_3;                  // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CampQuest_SsAnimState                       CallFunc_GetSlotListAnimState_AnimState;           // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Quest2_C_IsPlaying_INOUT) == 0x000004, "Wrong alignment on WB_Quest2_C_IsPlaying_INOUT");
static_assert(sizeof(WB_Quest2_C_IsPlaying_INOUT) == 0x000060, "Wrong size on WB_Quest2_C_IsPlaying_INOUT");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, IsAnimPlaying) == 0x000000, "Member 'WB_Quest2_C_IsPlaying_INOUT::IsAnimPlaying' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, CallFunc_IsPlaying_ReturnValue) == 0x000001, "Member 'WB_Quest2_C_IsPlaying_INOUT::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, CallFunc_GetPlayingAnimationName_OutAnimPackName) == 0x000004, "Member 'WB_Quest2_C_IsPlaying_INOUT::CallFunc_GetPlayingAnimationName_OutAnimPackName' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, CallFunc_GetPlayingAnimationName_OutAnimationName) == 0x00000C, "Member 'WB_Quest2_C_IsPlaying_INOUT::CallFunc_GetPlayingAnimationName_OutAnimationName' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, CallFunc_IsVisible_ReturnValue) == 0x000014, "Member 'WB_Quest2_C_IsPlaying_INOUT::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, K2Node_SwitchName_CmpSuccess) == 0x000015, "Member 'WB_Quest2_C_IsPlaying_INOUT::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, CallFunc_BooleanAND_ReturnValue) == 0x000016, "Member 'WB_Quest2_C_IsPlaying_INOUT::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, CallFunc_IsPlaying_ReturnValue_1) == 0x000017, "Member 'WB_Quest2_C_IsPlaying_INOUT::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, CallFunc_IsVisible_ReturnValue_1) == 0x000018, "Member 'WB_Quest2_C_IsPlaying_INOUT::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, CallFunc_IsPlaying_ReturnValue_2) == 0x000019, "Member 'WB_Quest2_C_IsPlaying_INOUT::CallFunc_IsPlaying_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, CallFunc_IsVisible_ReturnValue_2) == 0x00001A, "Member 'WB_Quest2_C_IsPlaying_INOUT::CallFunc_IsVisible_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, CallFunc_BooleanAND_ReturnValue_1) == 0x00001B, "Member 'WB_Quest2_C_IsPlaying_INOUT::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, CallFunc_BooleanAND_ReturnValue_2) == 0x00001C, "Member 'WB_Quest2_C_IsPlaying_INOUT::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, CallFunc_GetPlayingAnimationName_OutAnimPackName_1) == 0x000020, "Member 'WB_Quest2_C_IsPlaying_INOUT::CallFunc_GetPlayingAnimationName_OutAnimPackName_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, CallFunc_GetPlayingAnimationName_OutAnimationName_1) == 0x000028, "Member 'WB_Quest2_C_IsPlaying_INOUT::CallFunc_GetPlayingAnimationName_OutAnimationName_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, K2Node_SwitchName_CmpSuccess_1) == 0x000030, "Member 'WB_Quest2_C_IsPlaying_INOUT::K2Node_SwitchName_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, CallFunc_GetPlayingAnimationName_OutAnimPackName_2) == 0x000034, "Member 'WB_Quest2_C_IsPlaying_INOUT::CallFunc_GetPlayingAnimationName_OutAnimPackName_2' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, CallFunc_GetPlayingAnimationName_OutAnimationName_2) == 0x00003C, "Member 'WB_Quest2_C_IsPlaying_INOUT::CallFunc_GetPlayingAnimationName_OutAnimationName_2' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, K2Node_SwitchName_CmpSuccess_2) == 0x000044, "Member 'WB_Quest2_C_IsPlaying_INOUT::K2Node_SwitchName_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, CallFunc_GetPlayingAnimationName_OutAnimPackName_3) == 0x000048, "Member 'WB_Quest2_C_IsPlaying_INOUT::CallFunc_GetPlayingAnimationName_OutAnimPackName_3' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, CallFunc_GetPlayingAnimationName_OutAnimationName_3) == 0x000050, "Member 'WB_Quest2_C_IsPlaying_INOUT::CallFunc_GetPlayingAnimationName_OutAnimationName_3' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, K2Node_SwitchName_CmpSuccess_3) == 0x000058, "Member 'WB_Quest2_C_IsPlaying_INOUT::K2Node_SwitchName_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, CallFunc_IsPlaying_ReturnValue_3) == 0x000059, "Member 'WB_Quest2_C_IsPlaying_INOUT::CallFunc_IsPlaying_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, CallFunc_IsVisible_ReturnValue_3) == 0x00005A, "Member 'WB_Quest2_C_IsPlaying_INOUT::CallFunc_IsVisible_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, CallFunc_BooleanAND_ReturnValue_3) == 0x00005B, "Member 'WB_Quest2_C_IsPlaying_INOUT::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, CallFunc_GetSlotListAnimState_AnimState) == 0x00005C, "Member 'WB_Quest2_C_IsPlaying_INOUT::CallFunc_GetSlotListAnimState_AnimState' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_IsPlaying_INOUT, K2Node_SwitchEnum_CmpSuccess) == 0x00005D, "Member 'WB_Quest2_C_IsPlaying_INOUT::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.GetSlotMaxDraw
// 0x0008 (0x0008 - 0x0000)
struct WB_Quest2_C_GetSlotMaxDraw final
{
public:
	int32                                         MaxDrawNum;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotDrawMax_MaxDrawNum;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_GetSlotMaxDraw) == 0x000004, "Wrong alignment on WB_Quest2_C_GetSlotMaxDraw");
static_assert(sizeof(WB_Quest2_C_GetSlotMaxDraw) == 0x000008, "Wrong size on WB_Quest2_C_GetSlotMaxDraw");
static_assert(offsetof(WB_Quest2_C_GetSlotMaxDraw, MaxDrawNum) == 0x000000, "Member 'WB_Quest2_C_GetSlotMaxDraw::MaxDrawNum' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_GetSlotMaxDraw, CallFunc_GetSlotDrawMax_MaxDrawNum) == 0x000004, "Member 'WB_Quest2_C_GetSlotMaxDraw::CallFunc_GetSlotDrawMax_MaxDrawNum' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.GetCategoryWindowPos
// 0x0010 (0x0010 - 0x0000)
struct WB_Quest2_C_GetCategoryWindowPos final
{
public:
	struct FVector2D                              Position;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSSPPositionDataByPartsName_OutVec;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_GetCategoryWindowPos) == 0x000004, "Wrong alignment on WB_Quest2_C_GetCategoryWindowPos");
static_assert(sizeof(WB_Quest2_C_GetCategoryWindowPos) == 0x000010, "Wrong size on WB_Quest2_C_GetCategoryWindowPos");
static_assert(offsetof(WB_Quest2_C_GetCategoryWindowPos, Position) == 0x000000, "Member 'WB_Quest2_C_GetCategoryWindowPos::Position' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_GetCategoryWindowPos, CallFunc_GetSSPPositionDataByPartsName_OutVec) == 0x000008, "Member 'WB_Quest2_C_GetCategoryWindowPos::CallFunc_GetSSPPositionDataByPartsName_OutVec' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.SummaryMove_Down
// 0x0004 (0x0004 - 0x0000)
struct WB_Quest2_C_SummaryMove_Down final
{
public:
	float                                         CallFunc_GetScrollPosRate_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_SummaryMove_Down) == 0x000004, "Wrong alignment on WB_Quest2_C_SummaryMove_Down");
static_assert(sizeof(WB_Quest2_C_SummaryMove_Down) == 0x000004, "Wrong size on WB_Quest2_C_SummaryMove_Down");
static_assert(offsetof(WB_Quest2_C_SummaryMove_Down, CallFunc_GetScrollPosRate_ReturnValue) == 0x000000, "Member 'WB_Quest2_C_SummaryMove_Down::CallFunc_GetScrollPosRate_ReturnValue' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.SummaryMove_Up
// 0x0004 (0x0004 - 0x0000)
struct WB_Quest2_C_SummaryMove_Up final
{
public:
	float                                         CallFunc_GetScrollPosRate_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_SummaryMove_Up) == 0x000004, "Wrong alignment on WB_Quest2_C_SummaryMove_Up");
static_assert(sizeof(WB_Quest2_C_SummaryMove_Up) == 0x000004, "Wrong size on WB_Quest2_C_SummaryMove_Up");
static_assert(offsetof(WB_Quest2_C_SummaryMove_Up, CallFunc_GetScrollPosRate_ReturnValue) == 0x000000, "Member 'WB_Quest2_C_SummaryMove_Up::CallFunc_GetScrollPosRate_ReturnValue' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.SetSummaryScrollOffset
// 0x0010 (0x0010 - 0x0000)
struct WB_Quest2_C_SetSummaryScrollOffset final
{
public:
	int32                                         InScrollOffset;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetScrollOffset_ScrollOffset;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9343[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollPosRate_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_SetSummaryScrollOffset) == 0x000004, "Wrong alignment on WB_Quest2_C_SetSummaryScrollOffset");
static_assert(sizeof(WB_Quest2_C_SetSummaryScrollOffset) == 0x000010, "Wrong size on WB_Quest2_C_SetSummaryScrollOffset");
static_assert(offsetof(WB_Quest2_C_SetSummaryScrollOffset, InScrollOffset) == 0x000000, "Member 'WB_Quest2_C_SetSummaryScrollOffset::InScrollOffset' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetSummaryScrollOffset, CallFunc_GetScrollOffset_ScrollOffset) == 0x000004, "Member 'WB_Quest2_C_SetSummaryScrollOffset::CallFunc_GetScrollOffset_ScrollOffset' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetSummaryScrollOffset, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000008, "Member 'WB_Quest2_C_SetSummaryScrollOffset::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetSummaryScrollOffset, CallFunc_GetScrollPosRate_ReturnValue) == 0x00000C, "Member 'WB_Quest2_C_SetSummaryScrollOffset::CallFunc_GetScrollPosRate_ReturnValue' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.SetCursorIndex
// 0x0004 (0x0004 - 0x0000)
struct WB_Quest2_C_SetCursorIndex final
{
public:
	int32                                         InSlotIdx;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_SetCursorIndex) == 0x000004, "Wrong alignment on WB_Quest2_C_SetCursorIndex");
static_assert(sizeof(WB_Quest2_C_SetCursorIndex) == 0x000004, "Wrong size on WB_Quest2_C_SetCursorIndex");
static_assert(offsetof(WB_Quest2_C_SetCursorIndex, InSlotIdx) == 0x000000, "Member 'WB_Quest2_C_SetCursorIndex::InSlotIdx' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.GetCursorIndex
// 0x0008 (0x0008 - 0x0000)
struct WB_Quest2_C_GetCursorIndex final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCursorIndex_SlotIdx;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_GetCursorIndex) == 0x000004, "Wrong alignment on WB_Quest2_C_GetCursorIndex");
static_assert(sizeof(WB_Quest2_C_GetCursorIndex) == 0x000008, "Wrong size on WB_Quest2_C_GetCursorIndex");
static_assert(offsetof(WB_Quest2_C_GetCursorIndex, SlotIndex) == 0x000000, "Member 'WB_Quest2_C_GetCursorIndex::SlotIndex' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_GetCursorIndex, CallFunc_GetCursorIndex_SlotIdx) == 0x000004, "Member 'WB_Quest2_C_GetCursorIndex::CallFunc_GetCursorIndex_SlotIdx' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.SetUpdateIconState
// 0x0008 (0x0008 - 0x0000)
struct WB_Quest2_C_SetUpdateIconState final
{
public:
	int32                                         InSlotIdx;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsVisibleIcon;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Quest2_C_SetUpdateIconState) == 0x000004, "Wrong alignment on WB_Quest2_C_SetUpdateIconState");
static_assert(sizeof(WB_Quest2_C_SetUpdateIconState) == 0x000008, "Wrong size on WB_Quest2_C_SetUpdateIconState");
static_assert(offsetof(WB_Quest2_C_SetUpdateIconState, InSlotIdx) == 0x000000, "Member 'WB_Quest2_C_SetUpdateIconState::InSlotIdx' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetUpdateIconState, IsVisibleIcon) == 0x000004, "Member 'WB_Quest2_C_SetUpdateIconState::IsVisibleIcon' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.SetNewIconState
// 0x0008 (0x0008 - 0x0000)
struct WB_Quest2_C_SetNewIconState final
{
public:
	int32                                         InSlotIdx;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsVisibleIcon;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Quest2_C_SetNewIconState) == 0x000004, "Wrong alignment on WB_Quest2_C_SetNewIconState");
static_assert(sizeof(WB_Quest2_C_SetNewIconState) == 0x000008, "Wrong size on WB_Quest2_C_SetNewIconState");
static_assert(offsetof(WB_Quest2_C_SetNewIconState, InSlotIdx) == 0x000000, "Member 'WB_Quest2_C_SetNewIconState::InSlotIdx' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetNewIconState, IsVisibleIcon) == 0x000004, "Member 'WB_Quest2_C_SetNewIconState::IsVisibleIcon' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.SetSlotScrollBarVisibility
// 0x0001 (0x0001 - 0x0000)
struct WB_Quest2_C_SetSlotScrollBarVisibility final
{
public:
	bool                                          IsVisibleScrollBar;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Quest2_C_SetSlotScrollBarVisibility) == 0x000001, "Wrong alignment on WB_Quest2_C_SetSlotScrollBarVisibility");
static_assert(sizeof(WB_Quest2_C_SetSlotScrollBarVisibility) == 0x000001, "Wrong size on WB_Quest2_C_SetSlotScrollBarVisibility");
static_assert(offsetof(WB_Quest2_C_SetSlotScrollBarVisibility, IsVisibleScrollBar) == 0x000000, "Member 'WB_Quest2_C_SetSlotScrollBarVisibility::IsVisibleScrollBar' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.SetSlotScrollBarRate
// 0x0008 (0x0008 - 0x0000)
struct WB_Quest2_C_SetSlotScrollBarRate final
{
public:
	float                                         InScrollRate;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_SetSlotScrollBarRate) == 0x000004, "Wrong alignment on WB_Quest2_C_SetSlotScrollBarRate");
static_assert(sizeof(WB_Quest2_C_SetSlotScrollBarRate) == 0x000008, "Wrong size on WB_Quest2_C_SetSlotScrollBarRate");
static_assert(offsetof(WB_Quest2_C_SetSlotScrollBarRate, InScrollRate) == 0x000000, "Member 'WB_Quest2_C_SetSlotScrollBarRate::InScrollRate' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetSlotScrollBarRate, CallFunc_FClamp_ReturnValue) == 0x000004, "Member 'WB_Quest2_C_SetSlotScrollBarRate::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.GetScrollBarPos
// 0x0040 (0x0040 - 0x0000)
struct WB_Quest2_C_GetScrollBarPos final
{
public:
	struct FVector2D                              Pos_Quest;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Pos_Summary;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue_1;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSSPPositionDataByPartsName_OutVec;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSSPPositionDataByPartsName_OutVec_1;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_GetScrollBarPos) == 0x000004, "Wrong alignment on WB_Quest2_C_GetScrollBarPos");
static_assert(sizeof(WB_Quest2_C_GetScrollBarPos) == 0x000040, "Wrong size on WB_Quest2_C_GetScrollBarPos");
static_assert(offsetof(WB_Quest2_C_GetScrollBarPos, Pos_Quest) == 0x000000, "Member 'WB_Quest2_C_GetScrollBarPos::Pos_Quest' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_GetScrollBarPos, Pos_Summary) == 0x000008, "Member 'WB_Quest2_C_GetScrollBarPos::Pos_Summary' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_GetScrollBarPos, CallFunc_GetDesiredSize_ReturnValue) == 0x000010, "Member 'WB_Quest2_C_GetScrollBarPos::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_GetScrollBarPos, CallFunc_GetDesiredSize_ReturnValue_1) == 0x000018, "Member 'WB_Quest2_C_GetScrollBarPos::CallFunc_GetDesiredSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_GetScrollBarPos, CallFunc_BreakVector2D_X) == 0x000020, "Member 'WB_Quest2_C_GetScrollBarPos::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_GetScrollBarPos, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'WB_Quest2_C_GetScrollBarPos::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_GetScrollBarPos, CallFunc_BreakVector2D_X_1) == 0x000028, "Member 'WB_Quest2_C_GetScrollBarPos::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_GetScrollBarPos, CallFunc_BreakVector2D_Y_1) == 0x00002C, "Member 'WB_Quest2_C_GetScrollBarPos::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_GetScrollBarPos, CallFunc_GetSSPPositionDataByPartsName_OutVec) == 0x000030, "Member 'WB_Quest2_C_GetScrollBarPos::CallFunc_GetSSPPositionDataByPartsName_OutVec' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_GetScrollBarPos, CallFunc_GetSSPPositionDataByPartsName_OutVec_1) == 0x000038, "Member 'WB_Quest2_C_GetScrollBarPos::CallFunc_GetSSPPositionDataByPartsName_OutVec_1' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.GetScrollBarWidget
// 0x0010 (0x0010 - 0x0000)
struct WB_Quest2_C_GetScrollBarWidget final
{
public:
	class UWB_ScrollBar_C*                        ScrollBar_Quest;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ScrollBar_C*                        ScrollBar_Summary;                                 // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_GetScrollBarWidget) == 0x000008, "Wrong alignment on WB_Quest2_C_GetScrollBarWidget");
static_assert(sizeof(WB_Quest2_C_GetScrollBarWidget) == 0x000010, "Wrong size on WB_Quest2_C_GetScrollBarWidget");
static_assert(offsetof(WB_Quest2_C_GetScrollBarWidget, ScrollBar_Quest) == 0x000000, "Member 'WB_Quest2_C_GetScrollBarWidget::ScrollBar_Quest' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_GetScrollBarWidget, ScrollBar_Summary) == 0x000008, "Member 'WB_Quest2_C_GetScrollBarWidget::ScrollBar_Summary' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.Update_RewardIcon
// 0x01A8 (0x01A8 - 0x0000)
struct WB_Quest2_C_Update_RewardIcon final
{
public:
	struct FCampQuestListData                     InQuestData;                                       // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         L_IconElementID;                                   // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMissionRewardData>             L_RewardData;                                      // 0x0010(0x0010)(Edit, BlueprintVisible)
	struct FMissionData                           CallFunc_GetMissionData_ReturnValue;               // 0x0020(0x00B8)(ConstParm)
	struct FMissionData                           CallFunc_GetMissionData_ReturnValue_1;             // 0x00D8(0x00B8)(ConstParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9344[0x2];                                     // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionRewardData                     CallFunc_Array_Get_Item;                           // 0x0194(0x0008)(NoDestructor)
	int32                                         CallFunc_GetItemIconIdByItemId_ReturnValue;        // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Quest2_C_Update_RewardIcon) == 0x000008, "Wrong alignment on WB_Quest2_C_Update_RewardIcon");
static_assert(sizeof(WB_Quest2_C_Update_RewardIcon) == 0x0001A8, "Wrong size on WB_Quest2_C_Update_RewardIcon");
static_assert(offsetof(WB_Quest2_C_Update_RewardIcon, InQuestData) == 0x000000, "Member 'WB_Quest2_C_Update_RewardIcon::InQuestData' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Update_RewardIcon, L_IconElementID) == 0x00000C, "Member 'WB_Quest2_C_Update_RewardIcon::L_IconElementID' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Update_RewardIcon, L_RewardData) == 0x000010, "Member 'WB_Quest2_C_Update_RewardIcon::L_RewardData' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Update_RewardIcon, CallFunc_GetMissionData_ReturnValue) == 0x000020, "Member 'WB_Quest2_C_Update_RewardIcon::CallFunc_GetMissionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Update_RewardIcon, CallFunc_GetMissionData_ReturnValue_1) == 0x0000D8, "Member 'WB_Quest2_C_Update_RewardIcon::CallFunc_GetMissionData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Update_RewardIcon, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000190, "Member 'WB_Quest2_C_Update_RewardIcon::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Update_RewardIcon, CallFunc_Less_IntInt_ReturnValue) == 0x000191, "Member 'WB_Quest2_C_Update_RewardIcon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Update_RewardIcon, CallFunc_Array_Get_Item) == 0x000194, "Member 'WB_Quest2_C_Update_RewardIcon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Update_RewardIcon, CallFunc_GetItemIconIdByItemId_ReturnValue) == 0x00019C, "Member 'WB_Quest2_C_Update_RewardIcon::CallFunc_GetItemIconIdByItemId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Update_RewardIcon, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0001A0, "Member 'WB_Quest2_C_Update_RewardIcon::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.SetNoneQuestInfo
// 0x0020 (0x0020 - 0x0000)
struct WB_Quest2_C_SetNoneQuestInfo final
{
public:
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByLabel_self_CastInput;   // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByLabel_self_CastInput_1; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Quest2_C_SetNoneQuestInfo) == 0x000008, "Wrong alignment on WB_Quest2_C_SetNoneQuestInfo");
static_assert(sizeof(WB_Quest2_C_SetNoneQuestInfo) == 0x000020, "Wrong size on WB_Quest2_C_SetNoneQuestInfo");
static_assert(offsetof(WB_Quest2_C_SetNoneQuestInfo, CallFunc_SetScriptMessageByLabel_self_CastInput) == 0x000000, "Member 'WB_Quest2_C_SetNoneQuestInfo::CallFunc_SetScriptMessageByLabel_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetNoneQuestInfo, CallFunc_SetScriptMessageByLabel_self_CastInput_1) == 0x000010, "Member 'WB_Quest2_C_SetNoneQuestInfo::CallFunc_SetScriptMessageByLabel_self_CastInput_1' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.SetQuestInfo
// 0x0138 (0x0138 - 0x0000)
struct WB_Quest2_C_SetQuestInfo final
{
public:
	struct FCampQuestListData                     InData;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	uint8                                         Pad_9345[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScriptMessage                         CallFunc_GetMissionClientNameMsg_ReturnValue;      // 0x0010(0x0040)(ConstParm)
	int32                                         CallFunc_GetMissionRewardMsg_outTag1;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMissionRewardMsg_outTag2;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScriptMessage                         CallFunc_GetMissionRewardMsg_ReturnValue;          // 0x0058(0x0040)(ConstParm)
	struct FScriptMessage                         CallFunc_GetMissionExplainMsg_ReturnValue;         // 0x0098(0x0040)(ConstParm)
	bool                                          CallFunc_CheckMissionComplete_ReturnValue;         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9346[0x5];                                     // 0x00DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMessageTagInterface>  K2Node_DynamicCast_AsMessage_Tag_Interface;        // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9347[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMessageTagInterface>  K2Node_DynamicCast_AsMessage_Tag_Interface_1;      // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9348[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMessageTagInterface>  K2Node_DynamicCast_AsMessage_Tag_Interface_2;      // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9349[0x5];                                     // 0x0123(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByID_self_CastInput;      // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Quest2_C_SetQuestInfo) == 0x000008, "Wrong alignment on WB_Quest2_C_SetQuestInfo");
static_assert(sizeof(WB_Quest2_C_SetQuestInfo) == 0x000138, "Wrong size on WB_Quest2_C_SetQuestInfo");
static_assert(offsetof(WB_Quest2_C_SetQuestInfo, InData) == 0x000000, "Member 'WB_Quest2_C_SetQuestInfo::InData' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetQuestInfo, CallFunc_GetMissionClientNameMsg_ReturnValue) == 0x000010, "Member 'WB_Quest2_C_SetQuestInfo::CallFunc_GetMissionClientNameMsg_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetQuestInfo, CallFunc_GetMissionRewardMsg_outTag1) == 0x000050, "Member 'WB_Quest2_C_SetQuestInfo::CallFunc_GetMissionRewardMsg_outTag1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetQuestInfo, CallFunc_GetMissionRewardMsg_outTag2) == 0x000054, "Member 'WB_Quest2_C_SetQuestInfo::CallFunc_GetMissionRewardMsg_outTag2' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetQuestInfo, CallFunc_GetMissionRewardMsg_ReturnValue) == 0x000058, "Member 'WB_Quest2_C_SetQuestInfo::CallFunc_GetMissionRewardMsg_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetQuestInfo, CallFunc_GetMissionExplainMsg_ReturnValue) == 0x000098, "Member 'WB_Quest2_C_SetQuestInfo::CallFunc_GetMissionExplainMsg_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetQuestInfo, CallFunc_CheckMissionComplete_ReturnValue) == 0x0000D8, "Member 'WB_Quest2_C_SetQuestInfo::CallFunc_CheckMissionComplete_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetQuestInfo, Temp_byte_Variable) == 0x0000D9, "Member 'WB_Quest2_C_SetQuestInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetQuestInfo, Temp_byte_Variable_1) == 0x0000DA, "Member 'WB_Quest2_C_SetQuestInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetQuestInfo, K2Node_DynamicCast_AsMessage_Tag_Interface) == 0x0000E0, "Member 'WB_Quest2_C_SetQuestInfo::K2Node_DynamicCast_AsMessage_Tag_Interface' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetQuestInfo, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'WB_Quest2_C_SetQuestInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetQuestInfo, K2Node_DynamicCast_AsMessage_Tag_Interface_1) == 0x0000F8, "Member 'WB_Quest2_C_SetQuestInfo::K2Node_DynamicCast_AsMessage_Tag_Interface_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetQuestInfo, K2Node_DynamicCast_bSuccess_1) == 0x000108, "Member 'WB_Quest2_C_SetQuestInfo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetQuestInfo, K2Node_DynamicCast_AsMessage_Tag_Interface_2) == 0x000110, "Member 'WB_Quest2_C_SetQuestInfo::K2Node_DynamicCast_AsMessage_Tag_Interface_2' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetQuestInfo, K2Node_DynamicCast_bSuccess_2) == 0x000120, "Member 'WB_Quest2_C_SetQuestInfo::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetQuestInfo, Temp_bool_Variable) == 0x000121, "Member 'WB_Quest2_C_SetQuestInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetQuestInfo, K2Node_Select_Default) == 0x000122, "Member 'WB_Quest2_C_SetQuestInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetQuestInfo, CallFunc_SetScriptMessageByID_self_CastInput) == 0x000128, "Member 'WB_Quest2_C_SetQuestInfo::CallFunc_SetScriptMessageByID_self_CastInput' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.SetSlotListInfo
// 0x0020 (0x0020 - 0x0000)
struct WB_Quest2_C_SetSlotListInfo final
{
public:
	TArray<struct FCampQuestListData>             InListInfo;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_934A[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_SetSlotListInfo) == 0x000008, "Wrong alignment on WB_Quest2_C_SetSlotListInfo");
static_assert(sizeof(WB_Quest2_C_SetSlotListInfo) == 0x000020, "Wrong size on WB_Quest2_C_SetSlotListInfo");
static_assert(offsetof(WB_Quest2_C_SetSlotListInfo, InListInfo) == 0x000000, "Member 'WB_Quest2_C_SetSlotListInfo::InListInfo' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetSlotListInfo, Temp_byte_Variable) == 0x000010, "Member 'WB_Quest2_C_SetSlotListInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetSlotListInfo, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'WB_Quest2_C_SetSlotListInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetSlotListInfo, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000018, "Member 'WB_Quest2_C_SetSlotListInfo::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetSlotListInfo, Temp_byte_Variable_1) == 0x000019, "Member 'WB_Quest2_C_SetSlotListInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetSlotListInfo, Temp_bool_Variable) == 0x00001A, "Member 'WB_Quest2_C_SetSlotListInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_SetSlotListInfo, K2Node_Select_Default) == 0x00001B, "Member 'WB_Quest2_C_SetSlotListInfo::K2Node_Select_Default' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.Play_Setup
// 0x0009 (0x0009 - 0x0000)
struct WB_Quest2_C_Play_Setup final
{
public:
	bool                                          SlotList;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OtherParts;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_2;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_3;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_4;                       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_5;                       // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_6;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Quest2_C_Play_Setup) == 0x000001, "Wrong alignment on WB_Quest2_C_Play_Setup");
static_assert(sizeof(WB_Quest2_C_Play_Setup) == 0x000009, "Wrong size on WB_Quest2_C_Play_Setup");
static_assert(offsetof(WB_Quest2_C_Play_Setup, SlotList) == 0x000000, "Member 'WB_Quest2_C_Play_Setup::SlotList' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_Setup, OtherParts) == 0x000001, "Member 'WB_Quest2_C_Play_Setup::OtherParts' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_Setup, CallFunc_Play_ReturnValue) == 0x000002, "Member 'WB_Quest2_C_Play_Setup::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_Setup, CallFunc_Play_ReturnValue_1) == 0x000003, "Member 'WB_Quest2_C_Play_Setup::CallFunc_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_Setup, CallFunc_Play_ReturnValue_2) == 0x000004, "Member 'WB_Quest2_C_Play_Setup::CallFunc_Play_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_Setup, CallFunc_Play_ReturnValue_3) == 0x000005, "Member 'WB_Quest2_C_Play_Setup::CallFunc_Play_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_Setup, CallFunc_Play_ReturnValue_4) == 0x000006, "Member 'WB_Quest2_C_Play_Setup::CallFunc_Play_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_Setup, CallFunc_Play_ReturnValue_5) == 0x000007, "Member 'WB_Quest2_C_Play_Setup::CallFunc_Play_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_Setup, CallFunc_Play_ReturnValue_6) == 0x000008, "Member 'WB_Quest2_C_Play_Setup::CallFunc_Play_ReturnValue_6' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.Play_Loop
// 0x0009 (0x0009 - 0x0000)
struct WB_Quest2_C_Play_Loop final
{
public:
	bool                                          SlotList;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OtherParts;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_2;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_3;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_4;                       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_5;                       // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_6;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Quest2_C_Play_Loop) == 0x000001, "Wrong alignment on WB_Quest2_C_Play_Loop");
static_assert(sizeof(WB_Quest2_C_Play_Loop) == 0x000009, "Wrong size on WB_Quest2_C_Play_Loop");
static_assert(offsetof(WB_Quest2_C_Play_Loop, SlotList) == 0x000000, "Member 'WB_Quest2_C_Play_Loop::SlotList' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_Loop, OtherParts) == 0x000001, "Member 'WB_Quest2_C_Play_Loop::OtherParts' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_Loop, CallFunc_Play_ReturnValue) == 0x000002, "Member 'WB_Quest2_C_Play_Loop::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_Loop, CallFunc_Play_ReturnValue_1) == 0x000003, "Member 'WB_Quest2_C_Play_Loop::CallFunc_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_Loop, CallFunc_Play_ReturnValue_2) == 0x000004, "Member 'WB_Quest2_C_Play_Loop::CallFunc_Play_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_Loop, CallFunc_Play_ReturnValue_3) == 0x000005, "Member 'WB_Quest2_C_Play_Loop::CallFunc_Play_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_Loop, CallFunc_Play_ReturnValue_4) == 0x000006, "Member 'WB_Quest2_C_Play_Loop::CallFunc_Play_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_Loop, CallFunc_Play_ReturnValue_5) == 0x000007, "Member 'WB_Quest2_C_Play_Loop::CallFunc_Play_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_Loop, CallFunc_Play_ReturnValue_6) == 0x000008, "Member 'WB_Quest2_C_Play_Loop::CallFunc_Play_ReturnValue_6' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.Play_FrameOut
// 0x0009 (0x0009 - 0x0000)
struct WB_Quest2_C_Play_FrameOut final
{
public:
	bool                                          SlotList;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OtherParts;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_2;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_3;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_4;                       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_5;                       // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_6;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Quest2_C_Play_FrameOut) == 0x000001, "Wrong alignment on WB_Quest2_C_Play_FrameOut");
static_assert(sizeof(WB_Quest2_C_Play_FrameOut) == 0x000009, "Wrong size on WB_Quest2_C_Play_FrameOut");
static_assert(offsetof(WB_Quest2_C_Play_FrameOut, SlotList) == 0x000000, "Member 'WB_Quest2_C_Play_FrameOut::SlotList' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_FrameOut, OtherParts) == 0x000001, "Member 'WB_Quest2_C_Play_FrameOut::OtherParts' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_FrameOut, CallFunc_Play_ReturnValue) == 0x000002, "Member 'WB_Quest2_C_Play_FrameOut::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_FrameOut, CallFunc_Play_ReturnValue_1) == 0x000003, "Member 'WB_Quest2_C_Play_FrameOut::CallFunc_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_FrameOut, CallFunc_Play_ReturnValue_2) == 0x000004, "Member 'WB_Quest2_C_Play_FrameOut::CallFunc_Play_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_FrameOut, CallFunc_Play_ReturnValue_3) == 0x000005, "Member 'WB_Quest2_C_Play_FrameOut::CallFunc_Play_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_FrameOut, CallFunc_Play_ReturnValue_4) == 0x000006, "Member 'WB_Quest2_C_Play_FrameOut::CallFunc_Play_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_FrameOut, CallFunc_Play_ReturnValue_5) == 0x000007, "Member 'WB_Quest2_C_Play_FrameOut::CallFunc_Play_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_FrameOut, CallFunc_Play_ReturnValue_6) == 0x000008, "Member 'WB_Quest2_C_Play_FrameOut::CallFunc_Play_ReturnValue_6' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.Play_FrameIn
// 0x0009 (0x0009 - 0x0000)
struct WB_Quest2_C_Play_FrameIn final
{
public:
	bool                                          SlotList;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OtherParts;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_2;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_3;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_4;                       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_5;                       // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_6;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Quest2_C_Play_FrameIn) == 0x000001, "Wrong alignment on WB_Quest2_C_Play_FrameIn");
static_assert(sizeof(WB_Quest2_C_Play_FrameIn) == 0x000009, "Wrong size on WB_Quest2_C_Play_FrameIn");
static_assert(offsetof(WB_Quest2_C_Play_FrameIn, SlotList) == 0x000000, "Member 'WB_Quest2_C_Play_FrameIn::SlotList' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_FrameIn, OtherParts) == 0x000001, "Member 'WB_Quest2_C_Play_FrameIn::OtherParts' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_FrameIn, CallFunc_Play_ReturnValue) == 0x000002, "Member 'WB_Quest2_C_Play_FrameIn::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_FrameIn, CallFunc_Play_ReturnValue_1) == 0x000003, "Member 'WB_Quest2_C_Play_FrameIn::CallFunc_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_FrameIn, CallFunc_Play_ReturnValue_2) == 0x000004, "Member 'WB_Quest2_C_Play_FrameIn::CallFunc_Play_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_FrameIn, CallFunc_Play_ReturnValue_3) == 0x000005, "Member 'WB_Quest2_C_Play_FrameIn::CallFunc_Play_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_FrameIn, CallFunc_Play_ReturnValue_4) == 0x000006, "Member 'WB_Quest2_C_Play_FrameIn::CallFunc_Play_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_FrameIn, CallFunc_Play_ReturnValue_5) == 0x000007, "Member 'WB_Quest2_C_Play_FrameIn::CallFunc_Play_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Play_FrameIn, CallFunc_Play_ReturnValue_6) == 0x000008, "Member 'WB_Quest2_C_Play_FrameIn::CallFunc_Play_ReturnValue_6' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.BndEvt__SsPlayer_ScrollBar_Summary_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Summary_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Summary_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Summary_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Summary_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Summary_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Summary_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Summary_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Summary_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Summary_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Summary_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Summary_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Summary_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Summary_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.BndEvt__SsPlayer_ScrollBar_Quest_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Quest_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Quest_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Quest_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Quest_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Quest_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Quest_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Quest_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Quest_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Quest_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Quest_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Quest_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Quest_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_Quest2_C_BndEvt__SsPlayer_ScrollBar_Quest_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_Quest2_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Quest2_C_PreConstruct) == 0x000001, "Wrong alignment on WB_Quest2_C_PreConstruct");
static_assert(sizeof(WB_Quest2_C_PreConstruct) == 0x000001, "Wrong size on WB_Quest2_C_PreConstruct");
static_assert(offsetof(WB_Quest2_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_Quest2_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.BndEvt__SsPlayer_Reward_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_Quest2_C_BndEvt__SsPlayer_Reward_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_BndEvt__SsPlayer_Reward_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_Quest2_C_BndEvt__SsPlayer_Reward_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_Quest2_C_BndEvt__SsPlayer_Reward_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_Quest2_C_BndEvt__SsPlayer_Reward_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_Reward_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_Quest2_C_BndEvt__SsPlayer_Reward_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_Reward_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_Quest2_C_BndEvt__SsPlayer_Reward_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_Reward_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_Quest2_C_BndEvt__SsPlayer_Reward_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_Reward_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_Quest2_C_BndEvt__SsPlayer_Reward_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.BndEvt__SsPlayer_Client_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_Quest2_C_BndEvt__SsPlayer_Client_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_BndEvt__SsPlayer_Client_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_Quest2_C_BndEvt__SsPlayer_Client_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_Quest2_C_BndEvt__SsPlayer_Client_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_Quest2_C_BndEvt__SsPlayer_Client_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_Client_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_Quest2_C_BndEvt__SsPlayer_Client_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_Client_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_Quest2_C_BndEvt__SsPlayer_Client_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_Client_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_Quest2_C_BndEvt__SsPlayer_Client_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_Client_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_Quest2_C_BndEvt__SsPlayer_Client_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.BndEvt__SsPlayer_NoQuest_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_Quest2_C_BndEvt__SsPlayer_NoQuest_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_BndEvt__SsPlayer_NoQuest_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_Quest2_C_BndEvt__SsPlayer_NoQuest_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_Quest2_C_BndEvt__SsPlayer_NoQuest_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_Quest2_C_BndEvt__SsPlayer_NoQuest_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_NoQuest_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_Quest2_C_BndEvt__SsPlayer_NoQuest_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_NoQuest_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_Quest2_C_BndEvt__SsPlayer_NoQuest_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_NoQuest_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_Quest2_C_BndEvt__SsPlayer_NoQuest_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_NoQuest_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_Quest2_C_BndEvt__SsPlayer_NoQuest_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.BndEvt__SsPlayer_ListHeader_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_Quest2_C_BndEvt__SsPlayer_ListHeader_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_BndEvt__SsPlayer_ListHeader_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_Quest2_C_BndEvt__SsPlayer_ListHeader_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_Quest2_C_BndEvt__SsPlayer_ListHeader_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_Quest2_C_BndEvt__SsPlayer_ListHeader_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_ListHeader_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_Quest2_C_BndEvt__SsPlayer_ListHeader_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_ListHeader_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_Quest2_C_BndEvt__SsPlayer_ListHeader_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_ListHeader_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_Quest2_C_BndEvt__SsPlayer_ListHeader_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_ListHeader_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_Quest2_C_BndEvt__SsPlayer_ListHeader_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.BndEvt__SsPlayer_Summary_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_Quest2_C_BndEvt__SsPlayer_Summary_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_BndEvt__SsPlayer_Summary_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_Quest2_C_BndEvt__SsPlayer_Summary_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_Quest2_C_BndEvt__SsPlayer_Summary_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_Quest2_C_BndEvt__SsPlayer_Summary_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_Summary_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_Quest2_C_BndEvt__SsPlayer_Summary_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_Summary_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_Quest2_C_BndEvt__SsPlayer_Summary_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_Summary_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_Quest2_C_BndEvt__SsPlayer_Summary_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_BndEvt__SsPlayer_Summary_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_Quest2_C_BndEvt__SsPlayer_Summary_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_Quest2_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_Tick) == 0x000004, "Wrong alignment on WB_Quest2_C_Tick");
static_assert(sizeof(WB_Quest2_C_Tick) == 0x00003C, "Wrong size on WB_Quest2_C_Tick");
static_assert(offsetof(WB_Quest2_C_Tick, MyGeometry) == 0x000000, "Member 'WB_Quest2_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_Quest2_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.ExecuteUbergraph_WB_Quest2
// 0x0108 (0x0108 - 0x0000)
struct WB_Quest2_C_ExecuteUbergraph_WB_Quest2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_2;                       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_3;                       // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_4;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_5;                       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_934B[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName_6;         // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName_6;        // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex_6;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex_6;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue_6;                       // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_7;                       // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_8;                       // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName_5;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName_5;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex_5;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex_5;       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue_9;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_10;                      // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_11;                      // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_12;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_934C[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName_4;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName_4;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex_4;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex_4;       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName_3;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName_3;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex_3;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex_3;       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_2;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess_3;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_934D[0x2];                                     // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName_2;         // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName_2;        // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex_2;        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex_2;       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName_1;         // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName_1;        // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex_1;        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex_1;       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_4;                    // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess_5;                    // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_934E[0x2];                                     // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex;          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex;         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue_13;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess_6;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_934F[0x2];                                     // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00CC(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2) == 0x000004, "Wrong alignment on WB_Quest2_C_ExecuteUbergraph_WB_Quest2");
static_assert(sizeof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2) == 0x000108, "Wrong size on WB_Quest2_C_ExecuteUbergraph_WB_Quest2");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, EntryPoint) == 0x000000, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, CallFunc_Play_ReturnValue) == 0x000004, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, CallFunc_Play_ReturnValue_1) == 0x000005, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::CallFunc_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, CallFunc_Play_ReturnValue_2) == 0x000006, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::CallFunc_Play_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, CallFunc_Play_ReturnValue_3) == 0x000007, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::CallFunc_Play_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, CallFunc_Play_ReturnValue_4) == 0x000008, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::CallFunc_Play_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, CallFunc_Play_ReturnValue_5) == 0x000009, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::CallFunc_Play_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimPackName_6) == 0x00000C, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimPackName_6' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimationName_6) == 0x000014, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimationName_6' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimPackIndex_6) == 0x00001C, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimPackIndex_6' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimationIndex_6) == 0x000020, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimationIndex_6' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, CallFunc_Play_ReturnValue_6) == 0x000024, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::CallFunc_Play_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_SwitchName_CmpSuccess) == 0x000025, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, CallFunc_Play_ReturnValue_7) == 0x000026, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::CallFunc_Play_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, CallFunc_Play_ReturnValue_8) == 0x000027, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::CallFunc_Play_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimPackName_5) == 0x000028, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimPackName_5' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimationName_5) == 0x000030, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimationName_5' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimPackIndex_5) == 0x000038, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimPackIndex_5' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimationIndex_5) == 0x00003C, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimationIndex_5' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, CallFunc_Play_ReturnValue_9) == 0x000040, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::CallFunc_Play_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_SwitchName_CmpSuccess_1) == 0x000041, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_SwitchName_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, CallFunc_Play_ReturnValue_10) == 0x000042, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::CallFunc_Play_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, CallFunc_Play_ReturnValue_11) == 0x000043, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::CallFunc_Play_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, CallFunc_Play_ReturnValue_12) == 0x000044, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::CallFunc_Play_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_Event_IsDesignTime) == 0x000045, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimPackName_4) == 0x000048, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimPackName_4' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimationName_4) == 0x000050, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimationName_4' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimPackIndex_4) == 0x000058, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimPackIndex_4' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimationIndex_4) == 0x00005C, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimationIndex_4' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimPackName_3) == 0x000060, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimPackName_3' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimationName_3) == 0x000068, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimationName_3' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimPackIndex_3) == 0x000070, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimPackIndex_3' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimationIndex_3) == 0x000074, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimationIndex_3' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_SwitchName_CmpSuccess_2) == 0x000078, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_SwitchName_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_SwitchName_CmpSuccess_3) == 0x000079, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_SwitchName_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimPackName_2) == 0x00007C, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimPackName_2' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimationName_2) == 0x000084, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimationName_2' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimPackIndex_2) == 0x00008C, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimPackIndex_2' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimationIndex_2) == 0x000090, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimationIndex_2' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimPackName_1) == 0x000094, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimPackName_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimationName_1) == 0x00009C, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimationName_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimPackIndex_1) == 0x0000A4, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimPackIndex_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimationIndex_1) == 0x0000A8, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimationIndex_1' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_SwitchName_CmpSuccess_4) == 0x0000AC, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_SwitchName_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_SwitchName_CmpSuccess_5) == 0x0000AD, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_SwitchName_CmpSuccess_5' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimPackName) == 0x0000B0, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimationName) == 0x0000B8, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimationName' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimPackIndex) == 0x0000C0, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_ComponentBoundEvent_AnimationIndex) == 0x0000C4, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_ComponentBoundEvent_AnimationIndex' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, CallFunc_Play_ReturnValue_13) == 0x0000C8, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::CallFunc_Play_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_SwitchName_CmpSuccess_6) == 0x0000C9, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_SwitchName_CmpSuccess_6' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_Event_MyGeometry) == 0x0000CC, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Quest2_C_ExecuteUbergraph_WB_Quest2, K2Node_Event_InDeltaTime) == 0x000104, "Member 'WB_Quest2_C_ExecuteUbergraph_WB_Quest2::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.OnMoved_SummaryScrollBar_ByMouse__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WB_Quest2_C_OnMoved_SummaryScrollBar_ByMouse__DelegateSignature final
{
public:
	float                                         ScrollRate;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_OnMoved_SummaryScrollBar_ByMouse__DelegateSignature) == 0x000004, "Wrong alignment on WB_Quest2_C_OnMoved_SummaryScrollBar_ByMouse__DelegateSignature");
static_assert(sizeof(WB_Quest2_C_OnMoved_SummaryScrollBar_ByMouse__DelegateSignature) == 0x000004, "Wrong size on WB_Quest2_C_OnMoved_SummaryScrollBar_ByMouse__DelegateSignature");
static_assert(offsetof(WB_Quest2_C_OnMoved_SummaryScrollBar_ByMouse__DelegateSignature, ScrollRate) == 0x000000, "Member 'WB_Quest2_C_OnMoved_SummaryScrollBar_ByMouse__DelegateSignature::ScrollRate' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.OnMoved_SlotListScrollBar_ByMouse__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WB_Quest2_C_OnMoved_SlotListScrollBar_ByMouse__DelegateSignature final
{
public:
	float                                         ScrollRate;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_OnMoved_SlotListScrollBar_ByMouse__DelegateSignature) == 0x000004, "Wrong alignment on WB_Quest2_C_OnMoved_SlotListScrollBar_ByMouse__DelegateSignature");
static_assert(sizeof(WB_Quest2_C_OnMoved_SlotListScrollBar_ByMouse__DelegateSignature) == 0x000004, "Wrong size on WB_Quest2_C_OnMoved_SlotListScrollBar_ByMouse__DelegateSignature");
static_assert(offsetof(WB_Quest2_C_OnMoved_SlotListScrollBar_ByMouse__DelegateSignature, ScrollRate) == 0x000000, "Member 'WB_Quest2_C_OnMoved_SlotListScrollBar_ByMouse__DelegateSignature::ScrollRate' has a wrong offset!");

// Function WB_Quest2.WB_Quest2_C.OnHovered_MouseToSlot__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WB_Quest2_C_OnHovered_MouseToSlot__DelegateSignature final
{
public:
	int32                                         SlotIdx;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Quest2_C_OnHovered_MouseToSlot__DelegateSignature) == 0x000004, "Wrong alignment on WB_Quest2_C_OnHovered_MouseToSlot__DelegateSignature");
static_assert(sizeof(WB_Quest2_C_OnHovered_MouseToSlot__DelegateSignature) == 0x000004, "Wrong size on WB_Quest2_C_OnHovered_MouseToSlot__DelegateSignature");
static_assert(offsetof(WB_Quest2_C_OnHovered_MouseToSlot__DelegateSignature, SlotIdx) == 0x000000, "Member 'WB_Quest2_C_OnHovered_MouseToSlot__DelegateSignature::SlotIdx' has a wrong offset!");

}

