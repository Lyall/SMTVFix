#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_MapLevelCtrl

#include "Basic.hpp"

#include "E_MAP_SYSTEMRESIDENT_ID_structs.hpp"
#include "MapSubLevelGarden_ST_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "MapSubLevelTable_ST_structs.hpp"
#include "MapUnResident_ST_structs.hpp"
#include "MapSubLevelMinimap_ST_structs.hpp"
#include "Project_structs.hpp"


namespace SDK::Params
{

// Function BPL_MapLevelCtrl.BPL_MapLevelCtrl_C.GetResidentLevel
// 0x05E0 (0x05E0 - 0x0000)
struct BPL_MapLevelCtrl_C_GetResidentLevel final
{
public:
	int32                                         MapId;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A98[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPrimaryAssetId>                ResidentLevel;                                     // 0x0010(0x0010)(Parm, OutParm)
	int32                                         L_index;                                           // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_area_id;                                         // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_map_id;                                          // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A99[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9A[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9B[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9C[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x0058(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMapSubLevelTable_ST                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0078(0x02A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9D[0x7];                                     // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSubLevelTable_ST                   CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0328(0x02A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9E[0x3];                                     // 0x05D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x05D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x05D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x05DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_MapLevelCtrl_C_GetResidentLevel) == 0x000008, "Wrong alignment on BPL_MapLevelCtrl_C_GetResidentLevel");
static_assert(sizeof(BPL_MapLevelCtrl_C_GetResidentLevel) == 0x0005E0, "Wrong size on BPL_MapLevelCtrl_C_GetResidentLevel");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetResidentLevel, MapId) == 0x000000, "Member 'BPL_MapLevelCtrl_C_GetResidentLevel::MapId' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetResidentLevel, __WorldContext) == 0x000008, "Member 'BPL_MapLevelCtrl_C_GetResidentLevel::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetResidentLevel, ResidentLevel) == 0x000010, "Member 'BPL_MapLevelCtrl_C_GetResidentLevel::ResidentLevel' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetResidentLevel, L_index) == 0x000020, "Member 'BPL_MapLevelCtrl_C_GetResidentLevel::L_index' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetResidentLevel, L_area_id) == 0x000024, "Member 'BPL_MapLevelCtrl_C_GetResidentLevel::L_area_id' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetResidentLevel, L_map_id) == 0x000028, "Member 'BPL_MapLevelCtrl_C_GetResidentLevel::L_map_id' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetResidentLevel, Temp_bool_True_if_break_was_hit_Variable) == 0x00002C, "Member 'BPL_MapLevelCtrl_C_GetResidentLevel::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetResidentLevel, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BPL_MapLevelCtrl_C_GetResidentLevel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetResidentLevel, CallFunc_Not_PreBool_ReturnValue) == 0x000034, "Member 'BPL_MapLevelCtrl_C_GetResidentLevel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetResidentLevel, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BPL_MapLevelCtrl_C_GetResidentLevel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetResidentLevel, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000040, "Member 'BPL_MapLevelCtrl_C_GetResidentLevel::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetResidentLevel, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BPL_MapLevelCtrl_C_GetResidentLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetResidentLevel, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x000058, "Member 'BPL_MapLevelCtrl_C_GetResidentLevel::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetResidentLevel, CallFunc_Array_Get_Item) == 0x000068, "Member 'BPL_MapLevelCtrl_C_GetResidentLevel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetResidentLevel, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BPL_MapLevelCtrl_C_GetResidentLevel::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetResidentLevel, CallFunc_GetDataTableRowFromName_OutRow) == 0x000078, "Member 'BPL_MapLevelCtrl_C_GetResidentLevel::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetResidentLevel, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000320, "Member 'BPL_MapLevelCtrl_C_GetResidentLevel::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetResidentLevel, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000328, "Member 'BPL_MapLevelCtrl_C_GetResidentLevel::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetResidentLevel, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0005D0, "Member 'BPL_MapLevelCtrl_C_GetResidentLevel::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetResidentLevel, CallFunc_Array_Length_ReturnValue) == 0x0005D4, "Member 'BPL_MapLevelCtrl_C_GetResidentLevel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetResidentLevel, CallFunc_Less_IntInt_ReturnValue) == 0x0005D8, "Member 'BPL_MapLevelCtrl_C_GetResidentLevel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetResidentLevel, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0005D9, "Member 'BPL_MapLevelCtrl_C_GetResidentLevel::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetResidentLevel, CallFunc_BooleanAND_ReturnValue) == 0x0005DA, "Member 'BPL_MapLevelCtrl_C_GetResidentLevel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BPL_MapLevelCtrl.BPL_MapLevelCtrl_C.GetAreaResidentLevel
// 0x05F0 (0x05F0 - 0x0000)
struct BPL_MapLevelCtrl_C_GetAreaResidentLevel final
{
public:
	int32                                         MapId;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPrimaryAssetId>                AreaResidentLevel;                                 // 0x0010(0x0010)(Parm, OutParm)
	int32                                         L_index;                                           // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_area_id;                                         // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_map_id;                                          // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9F[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AA0[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AA1[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0048(0x0010)(ReferenceParm)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x0058(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMapSubLevelTable_ST                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0078(0x02A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AA2[0x7];                                     // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSubLevelTable_ST                   CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0328(0x02A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AA3[0x3];                                     // 0x05D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x05D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x05D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x05DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AA4[0x5];                                     // 0x05DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPrimaryAssetId>                K2Node_Select_Default;                             // 0x05E0(0x0010)(ReferenceParm)
};
static_assert(alignof(BPL_MapLevelCtrl_C_GetAreaResidentLevel) == 0x000008, "Wrong alignment on BPL_MapLevelCtrl_C_GetAreaResidentLevel");
static_assert(sizeof(BPL_MapLevelCtrl_C_GetAreaResidentLevel) == 0x0005F0, "Wrong size on BPL_MapLevelCtrl_C_GetAreaResidentLevel");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, MapId) == 0x000000, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::MapId' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, AreaId) == 0x000004, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::AreaId' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, __WorldContext) == 0x000008, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, AreaResidentLevel) == 0x000010, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::AreaResidentLevel' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, L_index) == 0x000020, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::L_index' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, L_area_id) == 0x000024, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::L_area_id' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, L_map_id) == 0x000028, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::L_map_id' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, Temp_bool_True_if_break_was_hit_Variable) == 0x00002C, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, CallFunc_Not_PreBool_ReturnValue) == 0x000034, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, Temp_int_Variable) == 0x00003C, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000048, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x000058, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, CallFunc_Array_Get_Item) == 0x000068, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, CallFunc_GetDataTableRowFromName_OutRow) == 0x000078, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000320, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000328, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0005D0, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, CallFunc_Array_Length_ReturnValue) == 0x0005D4, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, CallFunc_Less_IntInt_ReturnValue) == 0x0005D8, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0005D9, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, CallFunc_BooleanAND_ReturnValue) == 0x0005DA, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaResidentLevel, K2Node_Select_Default) == 0x0005E0, "Member 'BPL_MapLevelCtrl_C_GetAreaResidentLevel::K2Node_Select_Default' has a wrong offset!");

// Function BPL_MapLevelCtrl.BPL_MapLevelCtrl_C.GetUnresidentLevel
// 0x0698 (0x0698 - 0x0000)
struct BPL_MapLevelCtrl_C_GetUnresidentLevel final
{
public:
	int32                                         MapId;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPrimaryAssetId>                UnResidentLevel;                                   // 0x0010(0x0010)(Parm, OutParm)
	TArray<struct FPrimaryAssetId>                UnLoadList;                                        // 0x0020(0x0010)(Parm, OutParm)
	int32                                         L_area_id;                                         // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AA5[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPrimaryAssetId>                L_Unprimelist;                                     // 0x0038(0x0010)(Edit, BlueprintVisible)
	TArray<struct FPrimaryAssetId>                L_primelist;                                       // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         L_index;                                           // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_map_id;                                          // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AA6[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AA7[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPrimaryAssetId                        CallFunc_Array_Get_Item;                           // 0x0084(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AA8[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AA9[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x00C8(0x0010)(ReferenceParm)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x00D8(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AAA[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSubLevelTable_ST                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x00F8(0x02A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AAB[0x1];                                     // 0x03A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMapSubLevelTable_ST                   CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x03B0(0x02A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0659(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AAC[0x2];                                     // 0x065A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x065C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMapUnResident_ST                      CallFunc_Array_Get_Item_3;                         // 0x0660(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0688(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x068C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x068D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x068E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x068F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MapFlagCh_OK;                             // 0x0691(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0692(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0693(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_MapLevelCtrl_C_GetUnresidentLevel) == 0x000008, "Wrong alignment on BPL_MapLevelCtrl_C_GetUnresidentLevel");
static_assert(sizeof(BPL_MapLevelCtrl_C_GetUnresidentLevel) == 0x000698, "Wrong size on BPL_MapLevelCtrl_C_GetUnresidentLevel");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, MapId) == 0x000000, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::MapId' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, AreaId) == 0x000004, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::AreaId' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, __WorldContext) == 0x000008, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, UnResidentLevel) == 0x000010, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::UnResidentLevel' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, UnLoadList) == 0x000020, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::UnLoadList' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, L_area_id) == 0x000030, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::L_area_id' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, L_Unprimelist) == 0x000038, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::L_Unprimelist' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, L_primelist) == 0x000048, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::L_primelist' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, L_index) == 0x000058, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::L_index' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, L_map_id) == 0x00005C, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::L_map_id' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, Temp_int_Array_Index_Variable_1) == 0x00006C, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, Temp_int_Loop_Counter_Variable_1) == 0x000070, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_Add_IntInt_ReturnValue_1) == 0x000074, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, Temp_bool_True_if_break_was_hit_Variable) == 0x000078, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, Temp_int_Array_Index_Variable_2) == 0x00007C, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_Not_PreBool_ReturnValue) == 0x000080, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_Array_Get_Item) == 0x000084, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_Array_RemoveItem_ReturnValue) == 0x000098, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_Conv_NameToString_ReturnValue) == 0x0000A0, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B0, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000C0, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0000C8, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x0000D8, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_Array_Get_Item_1) == 0x0000E8, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_Array_Length_ReturnValue_1) == 0x0000F0, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000F8, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0003A0, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_Less_IntInt_ReturnValue) == 0x0003A1, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_BooleanAND_ReturnValue) == 0x0003A2, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, Temp_int_Loop_Counter_Variable_2) == 0x0003A4, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_Array_Get_Item_2) == 0x0003A8, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0003B0, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000658, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_Less_IntInt_ReturnValue_1) == 0x000659, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_Add_IntInt_ReturnValue_2) == 0x00065C, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_Array_Get_Item_3) == 0x000660, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_Array_Length_ReturnValue_2) == 0x000688, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00068C, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_Less_IntInt_ReturnValue_2) == 0x00068D, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00068E, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_BooleanOR_ReturnValue) == 0x00068F, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_BooleanOR_ReturnValue_1) == 0x000690, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_MapFlagCh_OK) == 0x000691, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_MapFlagCh_OK' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_BooleanAND_ReturnValue_1) == 0x000692, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000693, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");

// Function BPL_MapLevelCtrl.BPL_MapLevelCtrl_C.GetSystemLevel
// 0x08B0 (0x08B0 - 0x0000)
struct BPL_MapLevelCtrl_C_GetSystemLevel final
{
public:
	int32                                         MapId;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MAP_SYSTEMRESIDENT_ID                       Type;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StreamOnly;                                        // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AAD[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPrimaryAssetId>                ResidentLevel;                                     // 0x0010(0x0010)(Parm, OutParm)
	int32                                         L_AreaIdEnv;                                       // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_stream_only;                                     // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AAE[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPrimaryAssetId>                LocalList;                                         // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         L_index;                                           // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MAP_SYSTEMRESIDENT_ID                       L_type;                                            // 0x003C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AAF[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_map_id;                                          // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AB0[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameMode_C>       K2Node_DynamicCast_AsBPI_Game_Mode;                // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInGardenLevel_IsInGardenLevel;          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AB1[0x2];                                     // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAreaIdEnv_AreaIdEnv;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAgratEnvLevel_Enable;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AB2[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPrimaryAssetId>                CallFunc_GetAgratEnvLevel_EnvLevels;               // 0x0070(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AB3[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPrimaryAssetId>                CallFunc_GetUnresidentLevel_UnResidentLevel;       // 0x0088(0x0010)(ReferenceParm)
	TArray<struct FPrimaryAssetId>                CallFunc_GetUnresidentLevel_UnLoadList;            // 0x0098(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AB4[0x1];                                     // 0x00AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLastRyuketsuTableIndex_ReturnValue;    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRyuketsuData                          CallFunc_GetRyuketsuData_ReturnValue;              // 0x00B0(0x003C)(ConstParm, NoDestructor)
	struct FPrimaryAssetId                        K2Node_MakeStruct_PrimaryAssetId;                  // 0x00EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AB5[0x1];                                     // 0x0103(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_MAP_SYSTEMRESIDENT_ID                       Temp_byte_Variable;                                // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AB6[0x1];                                     // 0x010B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AB7[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0118(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AB8[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x0130(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AB9[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSubLevelTable_ST                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0150(0x02A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x03FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ABA[0x1];                                     // 0x03FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x03FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x0404(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ABB[0x3];                                     // 0x0405(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSubLevelTable_ST                   CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0408(0x02A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x06B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x06B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ABC[0x2];                                     // 0x06B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPrimaryAssetId                        CallFunc_Array_Get_Item_2;                         // 0x06B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x06C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        CallFunc_Array_Get_Item_3;                         // 0x06CC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x06DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ABD[0x3];                                     // 0x06DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x06E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x06E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        CallFunc_Array_Get_Item_4;                         // 0x06E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ABE[0x3];                                     // 0x06F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x06FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0700(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0704(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_2;            // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ABF[0x3];                                     // 0x0709(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPrimaryAssetId                        K2Node_Select_Default;                             // 0x070C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC0[0x4];                                     // 0x071C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPrimaryAssetId>                K2Node_MakeArray_Array;                            // 0x0720(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable_1;                              // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AC1[0xF];                                     // 0x0731(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSubLevelGarden_ST                  K2Node_Select_Default_1;                           // 0x0740(0x00B0)(HasGetValueTypeHash)
	struct FMapSubLevelGarden_ST                  K2Node_Select_Default_2;                           // 0x07F0(0x00B0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x08A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x08A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_MapLevelCtrl_C_GetSystemLevel) == 0x000010, "Wrong alignment on BPL_MapLevelCtrl_C_GetSystemLevel");
static_assert(sizeof(BPL_MapLevelCtrl_C_GetSystemLevel) == 0x0008B0, "Wrong size on BPL_MapLevelCtrl_C_GetSystemLevel");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, MapId) == 0x000000, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::MapId' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, Type) == 0x000004, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::Type' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, StreamOnly) == 0x000005, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::StreamOnly' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, __WorldContext) == 0x000008, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, ResidentLevel) == 0x000010, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::ResidentLevel' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, L_AreaIdEnv) == 0x000020, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::L_AreaIdEnv' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, L_stream_only) == 0x000024, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::L_stream_only' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, LocalList) == 0x000028, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::LocalList' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, L_index) == 0x000038, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::L_index' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, L_type) == 0x00003C, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::L_type' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, L_map_id) == 0x000040, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::L_map_id' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_GetGameMode_ReturnValue) == 0x000048, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, K2Node_DynamicCast_AsBPI_Game_Mode) == 0x000050, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::K2Node_DynamicCast_AsBPI_Game_Mode' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_IsInGardenLevel_IsInGardenLevel) == 0x000061, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_IsInGardenLevel_IsInGardenLevel' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_GetAreaIdEnv_AreaIdEnv) == 0x000064, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_GetAreaIdEnv_AreaIdEnv' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_GetAgratEnvLevel_Enable) == 0x000068, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_GetAgratEnvLevel_Enable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_GetAgratEnvLevel_EnvLevels) == 0x000070, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_GetAgratEnvLevel_EnvLevels' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000080, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_GetUnresidentLevel_UnResidentLevel) == 0x000088, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_GetUnresidentLevel_UnResidentLevel' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_GetUnresidentLevel_UnLoadList) == 0x000098, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_GetUnresidentLevel_UnLoadList' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A8, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_BooleanAND_ReturnValue) == 0x0000A9, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000AA, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_GetLastRyuketsuTableIndex_ReturnValue) == 0x0000AC, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_GetLastRyuketsuTableIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_GetRyuketsuData_ReturnValue) == 0x0000B0, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_GetRyuketsuData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, K2Node_MakeStruct_PrimaryAssetId) == 0x0000EC, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::K2Node_MakeStruct_PrimaryAssetId' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000FC, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000FD, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, Temp_bool_True_if_break_was_hit_Variable) == 0x0000FE, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_Not_PreBool_ReturnValue) == 0x0000FF, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000100, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000101, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000102, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, Temp_int_Array_Index_Variable) == 0x000104, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_BooleanOR_ReturnValue) == 0x000108, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_BooleanOR_ReturnValue_1) == 0x000109, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, Temp_byte_Variable) == 0x00010A, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, Temp_int_Loop_Counter_Variable) == 0x00010C, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_Add_IntInt_ReturnValue) == 0x000110, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000118, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000128, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x000130, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_Array_Get_Item) == 0x000140, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_Array_Length_ReturnValue) == 0x000148, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_GetDataTableRowFromName_OutRow) == 0x000150, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0003F8, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_Less_IntInt_ReturnValue) == 0x0003F9, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_BooleanAND_ReturnValue_1) == 0x0003FA, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_Array_Get_Item_1) == 0x0003FC, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x000404, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000408, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0006B0, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, Temp_bool_Variable) == 0x0006B1, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_Array_Get_Item_2) == 0x0006B4, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_Array_Add_ReturnValue) == 0x0006C4, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_Array_Length_ReturnValue_1) == 0x0006C8, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_Array_Get_Item_3) == 0x0006CC, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0006DC, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_Array_Add_ReturnValue_1) == 0x0006E0, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_Array_Length_ReturnValue_2) == 0x0006E4, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_Array_Get_Item_4) == 0x0006E8, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x0006F8, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_Array_Add_ReturnValue_2) == 0x0006FC, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_Array_Length_ReturnValue_3) == 0x000700, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_Array_Add_ReturnValue_3) == 0x000704, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_NotEqual_IntInt_ReturnValue_2) == 0x000708, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_NotEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, K2Node_Select_Default) == 0x00070C, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, K2Node_MakeArray_Array) == 0x000720, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, Temp_bool_Variable_1) == 0x000730, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, K2Node_Select_Default_1) == 0x000740, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, K2Node_Select_Default_2) == 0x0007F0, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_Array_Add_ReturnValue_4) == 0x0008A0, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetSystemLevel, CallFunc_Array_Add_ReturnValue_5) == 0x0008A4, "Member 'BPL_MapLevelCtrl_C_GetSystemLevel::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");

// Function BPL_MapLevelCtrl.BPL_MapLevelCtrl_C.GetPersistentLevel
// 0x05D8 (0x05D8 - 0x0000)
struct BPL_MapLevelCtrl_C_GetPersistentLevel final
{
public:
	int32                                         MapId;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        ResidentLevel;                                     // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_mapid;                                           // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AC3[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AC4[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC5[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x0050(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC6[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSubLevelTable_ST                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0070(0x02A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x031A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x031B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x031C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC7[0x4];                                     // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSubLevelTable_ST                   CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0328(0x02A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_MapLevelCtrl_C_GetPersistentLevel) == 0x000008, "Wrong alignment on BPL_MapLevelCtrl_C_GetPersistentLevel");
static_assert(sizeof(BPL_MapLevelCtrl_C_GetPersistentLevel) == 0x0005D8, "Wrong size on BPL_MapLevelCtrl_C_GetPersistentLevel");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentLevel, MapId) == 0x000000, "Member 'BPL_MapLevelCtrl_C_GetPersistentLevel::MapId' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentLevel, __WorldContext) == 0x000008, "Member 'BPL_MapLevelCtrl_C_GetPersistentLevel::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentLevel, ResidentLevel) == 0x000010, "Member 'BPL_MapLevelCtrl_C_GetPersistentLevel::ResidentLevel' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentLevel, L_index) == 0x000020, "Member 'BPL_MapLevelCtrl_C_GetPersistentLevel::L_index' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentLevel, L_mapid) == 0x000024, "Member 'BPL_MapLevelCtrl_C_GetPersistentLevel::L_mapid' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentLevel, Temp_bool_True_if_break_was_hit_Variable) == 0x000028, "Member 'BPL_MapLevelCtrl_C_GetPersistentLevel::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentLevel, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BPL_MapLevelCtrl_C_GetPersistentLevel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentLevel, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BPL_MapLevelCtrl_C_GetPersistentLevel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentLevel, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BPL_MapLevelCtrl_C_GetPersistentLevel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentLevel, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000038, "Member 'BPL_MapLevelCtrl_C_GetPersistentLevel::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentLevel, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BPL_MapLevelCtrl_C_GetPersistentLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentLevel, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x000050, "Member 'BPL_MapLevelCtrl_C_GetPersistentLevel::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentLevel, CallFunc_Array_Get_Item) == 0x000060, "Member 'BPL_MapLevelCtrl_C_GetPersistentLevel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentLevel, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BPL_MapLevelCtrl_C_GetPersistentLevel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentLevel, CallFunc_GetDataTableRowFromName_OutRow) == 0x000070, "Member 'BPL_MapLevelCtrl_C_GetPersistentLevel::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentLevel, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000318, "Member 'BPL_MapLevelCtrl_C_GetPersistentLevel::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentLevel, CallFunc_Less_IntInt_ReturnValue) == 0x000319, "Member 'BPL_MapLevelCtrl_C_GetPersistentLevel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentLevel, CallFunc_BooleanAND_ReturnValue) == 0x00031A, "Member 'BPL_MapLevelCtrl_C_GetPersistentLevel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentLevel, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00031B, "Member 'BPL_MapLevelCtrl_C_GetPersistentLevel::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentLevel, CallFunc_Array_Get_Item_1) == 0x00031C, "Member 'BPL_MapLevelCtrl_C_GetPersistentLevel::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentLevel, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000328, "Member 'BPL_MapLevelCtrl_C_GetPersistentLevel::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentLevel, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0005D0, "Member 'BPL_MapLevelCtrl_C_GetPersistentLevel::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");

// Function BPL_MapLevelCtrl.BPL_MapLevelCtrl_C.GetPersistentName
// 0x05D0 (0x05D0 - 0x0000)
struct BPL_MapLevelCtrl_C_GetPersistentName final
{
public:
	int32                                         MapId;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PersistentName;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_mapid;                                           // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AC9[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ACA[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ACB[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x0048(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMapSubLevelTable_ST                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0068(0x02A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ACC[0x7];                                     // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSubLevelTable_ST                   CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0318(0x02A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ACD[0x3];                                     // 0x05C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x05C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x05C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x05CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_MapLevelCtrl_C_GetPersistentName) == 0x000008, "Wrong alignment on BPL_MapLevelCtrl_C_GetPersistentName");
static_assert(sizeof(BPL_MapLevelCtrl_C_GetPersistentName) == 0x0005D0, "Wrong size on BPL_MapLevelCtrl_C_GetPersistentName");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentName, MapId) == 0x000000, "Member 'BPL_MapLevelCtrl_C_GetPersistentName::MapId' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentName, __WorldContext) == 0x000008, "Member 'BPL_MapLevelCtrl_C_GetPersistentName::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentName, PersistentName) == 0x000010, "Member 'BPL_MapLevelCtrl_C_GetPersistentName::PersistentName' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentName, L_index) == 0x000018, "Member 'BPL_MapLevelCtrl_C_GetPersistentName::L_index' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentName, L_mapid) == 0x00001C, "Member 'BPL_MapLevelCtrl_C_GetPersistentName::L_mapid' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentName, Temp_bool_True_if_break_was_hit_Variable) == 0x000020, "Member 'BPL_MapLevelCtrl_C_GetPersistentName::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentName, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BPL_MapLevelCtrl_C_GetPersistentName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentName, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BPL_MapLevelCtrl_C_GetPersistentName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentName, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BPL_MapLevelCtrl_C_GetPersistentName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentName, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000030, "Member 'BPL_MapLevelCtrl_C_GetPersistentName::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentName, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BPL_MapLevelCtrl_C_GetPersistentName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentName, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x000048, "Member 'BPL_MapLevelCtrl_C_GetPersistentName::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentName, CallFunc_Array_Get_Item) == 0x000058, "Member 'BPL_MapLevelCtrl_C_GetPersistentName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentName, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'BPL_MapLevelCtrl_C_GetPersistentName::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentName, CallFunc_GetDataTableRowFromName_OutRow) == 0x000068, "Member 'BPL_MapLevelCtrl_C_GetPersistentName::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentName, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000310, "Member 'BPL_MapLevelCtrl_C_GetPersistentName::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentName, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000318, "Member 'BPL_MapLevelCtrl_C_GetPersistentName::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentName, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0005C0, "Member 'BPL_MapLevelCtrl_C_GetPersistentName::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentName, CallFunc_Array_Length_ReturnValue) == 0x0005C4, "Member 'BPL_MapLevelCtrl_C_GetPersistentName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentName, CallFunc_Less_IntInt_ReturnValue) == 0x0005C8, "Member 'BPL_MapLevelCtrl_C_GetPersistentName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentName, CallFunc_BooleanAND_ReturnValue) == 0x0005C9, "Member 'BPL_MapLevelCtrl_C_GetPersistentName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentName, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0005CA, "Member 'BPL_MapLevelCtrl_C_GetPersistentName::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BPL_MapLevelCtrl.BPL_MapLevelCtrl_C.GetPersistentMapName
// 0x0320 (0x0320 - 0x0000)
struct BPL_MapLevelCtrl_C_GetPersistentMapName final
{
public:
	int32                                         L_mapid;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ACE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MapName;                                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_map;                                             // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ACF[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AD0[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD1[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x0048(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMapSubLevelTable_ST                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0068(0x02A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AD2[0x3];                                     // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x031A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_MapLevelCtrl_C_GetPersistentMapName) == 0x000008, "Wrong alignment on BPL_MapLevelCtrl_C_GetPersistentMapName");
static_assert(sizeof(BPL_MapLevelCtrl_C_GetPersistentMapName) == 0x000320, "Wrong size on BPL_MapLevelCtrl_C_GetPersistentMapName");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentMapName, L_mapid) == 0x000000, "Member 'BPL_MapLevelCtrl_C_GetPersistentMapName::L_mapid' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentMapName, __WorldContext) == 0x000008, "Member 'BPL_MapLevelCtrl_C_GetPersistentMapName::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentMapName, MapName) == 0x000010, "Member 'BPL_MapLevelCtrl_C_GetPersistentMapName::MapName' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentMapName, L_index) == 0x000018, "Member 'BPL_MapLevelCtrl_C_GetPersistentMapName::L_index' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentMapName, L_map) == 0x00001C, "Member 'BPL_MapLevelCtrl_C_GetPersistentMapName::L_map' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentMapName, Temp_bool_True_if_break_was_hit_Variable) == 0x000020, "Member 'BPL_MapLevelCtrl_C_GetPersistentMapName::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentMapName, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BPL_MapLevelCtrl_C_GetPersistentMapName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentMapName, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BPL_MapLevelCtrl_C_GetPersistentMapName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentMapName, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BPL_MapLevelCtrl_C_GetPersistentMapName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentMapName, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000030, "Member 'BPL_MapLevelCtrl_C_GetPersistentMapName::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentMapName, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BPL_MapLevelCtrl_C_GetPersistentMapName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentMapName, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x000048, "Member 'BPL_MapLevelCtrl_C_GetPersistentMapName::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentMapName, CallFunc_Array_Get_Item) == 0x000058, "Member 'BPL_MapLevelCtrl_C_GetPersistentMapName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentMapName, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'BPL_MapLevelCtrl_C_GetPersistentMapName::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentMapName, CallFunc_GetDataTableRowFromName_OutRow) == 0x000068, "Member 'BPL_MapLevelCtrl_C_GetPersistentMapName::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentMapName, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000310, "Member 'BPL_MapLevelCtrl_C_GetPersistentMapName::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentMapName, CallFunc_Array_Length_ReturnValue) == 0x000314, "Member 'BPL_MapLevelCtrl_C_GetPersistentMapName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentMapName, CallFunc_Less_IntInt_ReturnValue) == 0x000318, "Member 'BPL_MapLevelCtrl_C_GetPersistentMapName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentMapName, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000319, "Member 'BPL_MapLevelCtrl_C_GetPersistentMapName::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetPersistentMapName, CallFunc_BooleanAND_ReturnValue) == 0x00031A, "Member 'BPL_MapLevelCtrl_C_GetPersistentMapName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BPL_MapLevelCtrl.BPL_MapLevelCtrl_C.GetMinimap
// 0x0618 (0x0618 - 0x0000)
struct BPL_MapLevelCtrl_C_GetMinimap final
{
public:
	int32                                         MapId;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMapSubLevelMinimap_ST                 Minimap;                                           // 0x0010(0x0050)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_mapid;                                           // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AD4[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AD5[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0078(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD6[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x0090(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD7[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSubLevelTable_ST                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x00B0(0x02A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x035A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x035B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x035C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD8[0x4];                                     // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSubLevelTable_ST                   CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0368(0x02A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_MapLevelCtrl_C_GetMinimap) == 0x000008, "Wrong alignment on BPL_MapLevelCtrl_C_GetMinimap");
static_assert(sizeof(BPL_MapLevelCtrl_C_GetMinimap) == 0x000618, "Wrong size on BPL_MapLevelCtrl_C_GetMinimap");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetMinimap, MapId) == 0x000000, "Member 'BPL_MapLevelCtrl_C_GetMinimap::MapId' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetMinimap, __WorldContext) == 0x000008, "Member 'BPL_MapLevelCtrl_C_GetMinimap::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetMinimap, Minimap) == 0x000010, "Member 'BPL_MapLevelCtrl_C_GetMinimap::Minimap' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetMinimap, L_index) == 0x000060, "Member 'BPL_MapLevelCtrl_C_GetMinimap::L_index' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetMinimap, L_mapid) == 0x000064, "Member 'BPL_MapLevelCtrl_C_GetMinimap::L_mapid' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetMinimap, Temp_bool_True_if_break_was_hit_Variable) == 0x000068, "Member 'BPL_MapLevelCtrl_C_GetMinimap::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetMinimap, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'BPL_MapLevelCtrl_C_GetMinimap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetMinimap, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'BPL_MapLevelCtrl_C_GetMinimap::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetMinimap, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'BPL_MapLevelCtrl_C_GetMinimap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetMinimap, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000078, "Member 'BPL_MapLevelCtrl_C_GetMinimap::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetMinimap, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'BPL_MapLevelCtrl_C_GetMinimap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetMinimap, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x000090, "Member 'BPL_MapLevelCtrl_C_GetMinimap::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetMinimap, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BPL_MapLevelCtrl_C_GetMinimap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetMinimap, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'BPL_MapLevelCtrl_C_GetMinimap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetMinimap, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000B0, "Member 'BPL_MapLevelCtrl_C_GetMinimap::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetMinimap, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000358, "Member 'BPL_MapLevelCtrl_C_GetMinimap::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetMinimap, CallFunc_Less_IntInt_ReturnValue) == 0x000359, "Member 'BPL_MapLevelCtrl_C_GetMinimap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetMinimap, CallFunc_BooleanAND_ReturnValue) == 0x00035A, "Member 'BPL_MapLevelCtrl_C_GetMinimap::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetMinimap, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00035B, "Member 'BPL_MapLevelCtrl_C_GetMinimap::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetMinimap, CallFunc_Array_Get_Item_1) == 0x00035C, "Member 'BPL_MapLevelCtrl_C_GetMinimap::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetMinimap, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000368, "Member 'BPL_MapLevelCtrl_C_GetMinimap::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetMinimap, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000610, "Member 'BPL_MapLevelCtrl_C_GetMinimap::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");

// Function BPL_MapLevelCtrl.BPL_MapLevelCtrl_C.GetAreaBattleHideLevel
// 0x0600 (0x0600 - 0x0000)
struct BPL_MapLevelCtrl_C_GetAreaBattleHideLevel final
{
public:
	int32                                         MapId;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPrimaryAssetId>                BattleHideLevel;                                   // 0x0010(0x0010)(Parm, OutParm)
	TArray<struct FPrimaryAssetId>                ReturnArray;                                       // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         L_index;                                           // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_area_id;                                         // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_map_id;                                          // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AD9[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ADA[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ADB[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0058(0x0010)(ReferenceParm)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x0068(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMapSubLevelTable_ST                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0088(0x02A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ADC[0x7];                                     // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSubLevelTable_ST                   CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0338(0x02A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ADD[0x3];                                     // 0x05E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x05E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x05EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ADE[0x5];                                     // 0x05EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPrimaryAssetId>                K2Node_Select_Default;                             // 0x05F0(0x0010)(ReferenceParm)
};
static_assert(alignof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel) == 0x000008, "Wrong alignment on BPL_MapLevelCtrl_C_GetAreaBattleHideLevel");
static_assert(sizeof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel) == 0x000600, "Wrong size on BPL_MapLevelCtrl_C_GetAreaBattleHideLevel");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, MapId) == 0x000000, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::MapId' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, AreaId) == 0x000004, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::AreaId' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, __WorldContext) == 0x000008, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, BattleHideLevel) == 0x000010, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::BattleHideLevel' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, ReturnArray) == 0x000020, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::ReturnArray' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, L_index) == 0x000030, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::L_index' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, L_area_id) == 0x000034, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::L_area_id' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, L_map_id) == 0x000038, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::L_map_id' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, Temp_bool_True_if_break_was_hit_Variable) == 0x00003C, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, CallFunc_Not_PreBool_ReturnValue) == 0x000044, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, Temp_int_Variable) == 0x00004C, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000058, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x000068, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, CallFunc_Array_Get_Item) == 0x000078, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, CallFunc_GetDataTableRowFromName_OutRow) == 0x000088, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000330, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000338, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0005E0, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, CallFunc_Array_Length_ReturnValue) == 0x0005E4, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, CallFunc_Less_IntInt_ReturnValue) == 0x0005E8, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0005E9, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, CallFunc_BooleanAND_ReturnValue) == 0x0005EA, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaBattleHideLevel, K2Node_Select_Default) == 0x0005F0, "Member 'BPL_MapLevelCtrl_C_GetAreaBattleHideLevel::K2Node_Select_Default' has a wrong offset!");

// Function BPL_MapLevelCtrl.BPL_MapLevelCtrl_C.GetGardenLevel
// 0x0780 (0x0780 - 0x0000)
struct BPL_MapLevelCtrl_C_GetGardenLevel final
{
public:
	int32                                         MapId;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ADF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMapSubLevelGarden_ST                  Garden;                                            // 0x0010(0x00B0)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_mapid;                                           // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE0[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSubLevelGarden_ST                  K2Node_MakeStruct_MapSubLevelGarden_ST;            // 0x00D0(0x00B0)(HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AE1[0x2];                                     // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLastRyuketsuTableIndex_ReturnValue;    // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRyuketsuData                          CallFunc_GetRyuketsuData_ReturnValue;              // 0x018C(0x003C)(ConstParm, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AE2[0x3];                                     // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x01D0(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AE3[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x01E8(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE4[0x4];                                     // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSubLevelTable_ST                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0208(0x02A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x04B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x04B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x04B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE5[0x4];                                     // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSubLevelTable_ST                   CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x04C0(0x02A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AE6[0x3];                                     // 0x0769(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x076C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_MapLevelCtrl_C_GetGardenLevel) == 0x000010, "Wrong alignment on BPL_MapLevelCtrl_C_GetGardenLevel");
static_assert(sizeof(BPL_MapLevelCtrl_C_GetGardenLevel) == 0x000780, "Wrong size on BPL_MapLevelCtrl_C_GetGardenLevel");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, MapId) == 0x000000, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::MapId' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, __WorldContext) == 0x000008, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, Garden) == 0x000010, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::Garden' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, L_index) == 0x0000C0, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::L_index' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, L_mapid) == 0x0000C4, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::L_mapid' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, Temp_int_Array_Index_Variable) == 0x0000C8, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, K2Node_MakeStruct_MapSubLevelGarden_ST) == 0x0000D0, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::K2Node_MakeStruct_MapSubLevelGarden_ST' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, Temp_bool_True_if_break_was_hit_Variable) == 0x000180, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, CallFunc_Not_PreBool_ReturnValue) == 0x000181, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, CallFunc_GetLastRyuketsuTableIndex_ReturnValue) == 0x000184, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::CallFunc_GetLastRyuketsuTableIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, Temp_int_Loop_Counter_Variable) == 0x000188, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, CallFunc_GetRyuketsuData_ReturnValue) == 0x00018C, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::CallFunc_GetRyuketsuData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, CallFunc_Add_IntInt_ReturnValue) == 0x0001C8, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0001CC, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0001D0, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001E0, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x0001E8, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, CallFunc_Array_Get_Item) == 0x0001F8, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, CallFunc_Array_Length_ReturnValue) == 0x000200, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, CallFunc_GetDataTableRowFromName_OutRow) == 0x000208, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0004B0, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, CallFunc_Less_IntInt_ReturnValue) == 0x0004B1, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, CallFunc_BooleanAND_ReturnValue) == 0x0004B2, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0004B3, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, CallFunc_Array_Get_Item_1) == 0x0004B4, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0004C0, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000768, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, CallFunc_Array_Length_ReturnValue_1) == 0x00076C, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetGardenLevel, CallFunc_Greater_IntInt_ReturnValue) == 0x000770, "Member 'BPL_MapLevelCtrl_C_GetGardenLevel::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BPL_MapLevelCtrl.BPL_MapLevelCtrl_C.GetUnresidentLevel_check
// 0x03D8 (0x03D8 - 0x0000)
struct BPL_MapLevelCtrl_C_GetUnresidentLevel_check final
{
public:
	int32                                         MapId;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_area_id;                                         // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE7[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPrimaryAssetId>                L_Unprimelist;                                     // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<struct FPrimaryAssetId>                L_primelist;                                       // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         L_index;                                           // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_map_id;                                          // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AE8[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AE9[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0068(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AEA[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSubLevelTable_ST                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0088(0x02A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AEB[0x3];                                     // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMapUnResident_ST                      CallFunc_Array_Get_Item_1;                         // 0x0338(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AEC[0x3];                                     // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPrimaryAssetId                        CallFunc_Array_Get_Item_2;                         // 0x0368(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AED[0x7];                                     // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0390(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x03A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AEE[0x3];                                     // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x03A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x03B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AEF[0x2];                                     // 0x03CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check) == 0x000008, "Wrong alignment on BPL_MapLevelCtrl_C_GetUnresidentLevel_check");
static_assert(sizeof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check) == 0x0003D8, "Wrong size on BPL_MapLevelCtrl_C_GetUnresidentLevel_check");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, MapId) == 0x000000, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::MapId' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, AreaId) == 0x000004, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::AreaId' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, __WorldContext) == 0x000008, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, L_area_id) == 0x000010, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::L_area_id' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, L_Unprimelist) == 0x000018, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::L_Unprimelist' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, L_primelist) == 0x000028, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::L_primelist' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, L_index) == 0x000038, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::L_index' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, L_map_id) == 0x00003C, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::L_map_id' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, Temp_int_Array_Index_Variable_1) == 0x00004C, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, Temp_int_Loop_Counter_Variable_1) == 0x000050, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, Temp_bool_True_if_break_was_hit_Variable) == 0x000058, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, Temp_int_Array_Index_Variable_2) == 0x00005C, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000068, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, Temp_int_Loop_Counter_Variable_2) == 0x000078, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, CallFunc_Array_Get_Item) == 0x00007C, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, CallFunc_GetDataTableRowFromName_OutRow) == 0x000088, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000330, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, CallFunc_Add_IntInt_ReturnValue_2) == 0x000334, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, CallFunc_Array_Get_Item_1) == 0x000338, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, CallFunc_Array_Length_ReturnValue) == 0x000360, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, CallFunc_Less_IntInt_ReturnValue) == 0x000364, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, CallFunc_Array_Get_Item_2) == 0x000368, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, CallFunc_Array_Contains_ReturnValue) == 0x000378, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, CallFunc_Conv_NameToString_ReturnValue) == 0x000380, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, CallFunc_Concat_StrStr_ReturnValue) == 0x000390, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, CallFunc_Array_Length_ReturnValue_1) == 0x0003A0, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, CallFunc_Less_IntInt_ReturnValue_1) == 0x0003A4, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, CallFunc_Conv_IntToString_ReturnValue) == 0x0003A8, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0003B8, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, CallFunc_Array_Length_ReturnValue_2) == 0x0003C8, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, CallFunc_Less_IntInt_ReturnValue_2) == 0x0003CC, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, CallFunc_BooleanAND_ReturnValue) == 0x0003CD, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetUnresidentLevel_check, CallFunc_Array_Add_ReturnValue) == 0x0003D0, "Member 'BPL_MapLevelCtrl_C_GetUnresidentLevel_check::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BPL_MapLevelCtrl.BPL_MapLevelCtrl_C.GetAreaIdEnv
// 0x0020 (0x0020 - 0x0000)
struct BPL_MapLevelCtrl_C_GetAreaIdEnv final
{
public:
	int32                                         MapId;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaIdEnv;                                         // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEventFlag_ReturnValue;               // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AF1[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAreaID_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_MapLevelCtrl_C_GetAreaIdEnv) == 0x000008, "Wrong alignment on BPL_MapLevelCtrl_C_GetAreaIdEnv");
static_assert(sizeof(BPL_MapLevelCtrl_C_GetAreaIdEnv) == 0x000020, "Wrong size on BPL_MapLevelCtrl_C_GetAreaIdEnv");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaIdEnv, MapId) == 0x000000, "Member 'BPL_MapLevelCtrl_C_GetAreaIdEnv::MapId' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaIdEnv, __WorldContext) == 0x000008, "Member 'BPL_MapLevelCtrl_C_GetAreaIdEnv::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaIdEnv, AreaIdEnv) == 0x000010, "Member 'BPL_MapLevelCtrl_C_GetAreaIdEnv::AreaIdEnv' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaIdEnv, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'BPL_MapLevelCtrl_C_GetAreaIdEnv::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaIdEnv, CallFunc_CheckEventFlag_ReturnValue) == 0x000015, "Member 'BPL_MapLevelCtrl_C_GetAreaIdEnv::CallFunc_CheckEventFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAreaIdEnv, CallFunc_GetAreaID_ReturnValue) == 0x000018, "Member 'BPL_MapLevelCtrl_C_GetAreaIdEnv::CallFunc_GetAreaID_ReturnValue' has a wrong offset!");

// Function BPL_MapLevelCtrl.BPL_MapLevelCtrl_C.GetAgratEnvLevel
// 0x0678 (0x0678 - 0x0000)
struct BPL_MapLevelCtrl_C_GetAgratEnvLevel final
{
public:
	int32                                         MapId;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MAP_SYSTEMRESIDENT_ID                       Type;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF2[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AF3[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPrimaryAssetId>                EnvLevels;                                         // 0x0018(0x0010)(Parm, OutParm)
	int32                                         L_index;                                           // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        L_AgratEnvLevel;                                   // 0x002C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AF4[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AF5[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AF6[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPrimaryAssetId>                K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm)
	TArray<struct FPrimaryAssetId>                K2Node_MakeArray_Array_1;                          // 0x0068(0x0010)(ReferenceParm)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0078(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x0090(0x0010)(ReferenceParm)
	struct FMapSubLevelTable_ST                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x00A0(0x02A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AF7[0x3];                                     // 0x0349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x034C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF8[0x4];                                     // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSubLevelTable_ST                   CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0358(0x02A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AF9[0x7];                                     // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapUnResident_ST                      CallFunc_Array_Get_Item_2;                         // 0x0608(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0634(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0639(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MapFlagCh_OK;                             // 0x063A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AFA[0x1];                                     // 0x063B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0641(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AFB[0x6];                                     // 0x0642(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPrimaryAssetId>                K2Node_MakeArray_Array_2;                          // 0x0648(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AFC[0x4];                                     // 0x065C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPrimaryAssetId>                K2Node_MakeArray_Array_3;                          // 0x0660(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AFD[0x3];                                     // 0x0671(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0674(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_MapLevelCtrl_C_GetAgratEnvLevel) == 0x000008, "Wrong alignment on BPL_MapLevelCtrl_C_GetAgratEnvLevel");
static_assert(sizeof(BPL_MapLevelCtrl_C_GetAgratEnvLevel) == 0x000678, "Wrong size on BPL_MapLevelCtrl_C_GetAgratEnvLevel");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, MapId) == 0x000000, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::MapId' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, Type) == 0x000004, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::Type' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, __WorldContext) == 0x000008, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, Enable) == 0x000010, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::Enable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, EnvLevels) == 0x000018, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::EnvLevels' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, L_index) == 0x000028, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::L_index' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, L_AgratEnvLevel) == 0x00002C, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::L_AgratEnvLevel' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000040, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000041, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, Temp_bool_True_if_break_was_hit_Variable) == 0x00004C, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, CallFunc_Not_PreBool_ReturnValue) == 0x000054, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, K2Node_MakeArray_Array) == 0x000058, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, K2Node_MakeArray_Array_1) == 0x000068, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000078, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, CallFunc_Array_Get_Item) == 0x000088, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x000090, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000A0, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000348, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, CallFunc_Array_Get_Item_1) == 0x00034C, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000358, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000600, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, CallFunc_Array_Get_Item_2) == 0x000608, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, CallFunc_Array_Length_ReturnValue) == 0x000630, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, CallFunc_Array_Find_ReturnValue) == 0x000634, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000638, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000639, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, CallFunc_MapFlagCh_OK) == 0x00063A, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::CallFunc_MapFlagCh_OK' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, CallFunc_Array_Length_ReturnValue_1) == 0x00063C, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, CallFunc_Less_IntInt_ReturnValue) == 0x000640, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, CallFunc_BooleanAND_ReturnValue) == 0x000641, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, K2Node_MakeArray_Array_2) == 0x000648, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, Temp_int_Loop_Counter_Variable_1) == 0x000658, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, K2Node_MakeArray_Array_3) == 0x000660, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, CallFunc_Less_IntInt_ReturnValue_1) == 0x000670, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapLevelCtrl_C_GetAgratEnvLevel, CallFunc_Add_IntInt_ReturnValue_1) == 0x000674, "Member 'BPL_MapLevelCtrl_C_GetAgratEnvLevel::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

}

