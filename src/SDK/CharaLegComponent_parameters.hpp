#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharaLegComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK::Params
{

// Function CharaLegComponent.CharaLegComponent_C.Update
// 0x0048 (0x0048 - 0x0000)
struct CharaLegComponent_C_Update final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkinnedMeshComponent*                  Mesh;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sink;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IKEnable;                                          // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0024(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_UpdateLegEffector_Location;               // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_UpdateLegEffector_Rotation;               // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaLegComponent_C_Update) == 0x000008, "Wrong alignment on CharaLegComponent_C_Update");
static_assert(sizeof(CharaLegComponent_C_Update) == 0x000048, "Wrong size on CharaLegComponent_C_Update");
static_assert(offsetof(CharaLegComponent_C_Update, DeltaTime) == 0x000000, "Member 'CharaLegComponent_C_Update::DeltaTime' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_Update, Mesh) == 0x000008, "Member 'CharaLegComponent_C_Update::Mesh' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_Update, Sink) == 0x000010, "Member 'CharaLegComponent_C_Update::Sink' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_Update, IKEnable) == 0x000014, "Member 'CharaLegComponent_C_Update::IKEnable' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_Update, Location) == 0x000018, "Member 'CharaLegComponent_C_Update::Location' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_Update, Rotation) == 0x000024, "Member 'CharaLegComponent_C_Update::Rotation' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_Update, CallFunc_UpdateLegEffector_Location) == 0x000030, "Member 'CharaLegComponent_C_Update::CallFunc_UpdateLegEffector_Location' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_Update, CallFunc_UpdateLegEffector_Rotation) == 0x00003C, "Member 'CharaLegComponent_C_Update::CallFunc_UpdateLegEffector_Rotation' has a wrong offset!");

// Function CharaLegComponent.CharaLegComponent_C.UpdateGroundContact
// 0x0200 (0x0200 - 0x0000)
struct CharaLegComponent_C_UpdateGroundContact final
{
public:
	class USkinnedMeshComponent*                  Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sink;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                UpVector;                                          // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharacterScale;                                    // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	EDrawDebugTrace                               Temp_byte_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMinElement_ReturnValue;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable_1;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEffectorOffsetLimit_ReturnValue;       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               K2Node_Select_Default;                             // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetParentBone_ReturnValue;                // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetAdjustedTransform_ReturnValue;         // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetAdjustedTransform_ReturnValue_1;       // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectGroundLocation_ReturnValue;        // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TraceGround_Hit;                          // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D5[0x3];                                      // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TraceGround_Location;                     // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TraceGround_Normal;                       // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_TraceGround_Surface;                      // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaLegComponent_C_UpdateGroundContact) == 0x000010, "Wrong alignment on CharaLegComponent_C_UpdateGroundContact");
static_assert(sizeof(CharaLegComponent_C_UpdateGroundContact) == 0x000200, "Wrong size on CharaLegComponent_C_UpdateGroundContact");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, Mesh) == 0x000000, "Member 'CharaLegComponent_C_UpdateGroundContact::Mesh' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, Sink) == 0x000008, "Member 'CharaLegComponent_C_UpdateGroundContact::Sink' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, UpVector) == 0x00000C, "Member 'CharaLegComponent_C_UpdateGroundContact::UpVector' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CharacterScale) == 0x000018, "Member 'CharaLegComponent_C_UpdateGroundContact::CharacterScale' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, Temp_bool_Variable) == 0x00001C, "Member 'CharaLegComponent_C_UpdateGroundContact::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, Temp_byte_Variable) == 0x000050, "Member 'CharaLegComponent_C_UpdateGroundContact::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_BreakTransform_Location) == 0x000054, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_BreakTransform_Rotation) == 0x000060, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_BreakTransform_Scale) == 0x00006C, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_GetMinElement_ReturnValue) == 0x000078, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_GetMinElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x00007C, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, Temp_byte_Variable_1) == 0x000088, "Member 'CharaLegComponent_C_UpdateGroundContact::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_GetEffectorOffsetLimit_ReturnValue) == 0x00008C, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_GetEffectorOffsetLimit_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_NegateVector_ReturnValue) == 0x000090, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000A0, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B0, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_Add_VectorVector_ReturnValue) == 0x0000BC, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, K2Node_Select_Default) == 0x0000C8, "Member 'CharaLegComponent_C_UpdateGroundContact::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000CC, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_GetParentBone_ReturnValue) == 0x0000D0, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_GetParentBone_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_GetAdjustedTransform_ReturnValue) == 0x0000E0, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_GetAdjustedTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_GetAdjustedTransform_ReturnValue_1) == 0x000110, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_GetAdjustedTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_BreakTransform_Location_1) == 0x000140, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_BreakTransform_Rotation_1) == 0x00014C, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_BreakTransform_Scale_1) == 0x000158, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_BreakTransform_Location_2) == 0x000164, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_BreakTransform_Rotation_2) == 0x000170, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_BreakTransform_Scale_2) == 0x00017C, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_ProjectGroundLocation_ReturnValue) == 0x000188, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_ProjectGroundLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000194, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_VSize_ReturnValue) == 0x0001A0, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001A4, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0001A8, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0001AC, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_MakeVector_ReturnValue) == 0x0001B0, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001BC, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_TransformLocation_ReturnValue) == 0x0001C8, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_TraceGround_Hit) == 0x0001D4, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_TraceGround_Hit' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_TraceGround_Location) == 0x0001D8, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_TraceGround_Location' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_TraceGround_Normal) == 0x0001E4, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_TraceGround_Normal' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_TraceGround_Surface) == 0x0001F0, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_TraceGround_Surface' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateGroundContact, CallFunc_SelectVector_ReturnValue) == 0x0001F4, "Member 'CharaLegComponent_C_UpdateGroundContact::CallFunc_SelectVector_ReturnValue' has a wrong offset!");

// Function CharaLegComponent.CharaLegComponent_C.UpdateLegEffector
// 0x0230 (0x0230 - 0x0000)
struct CharaLegComponent_C_UpdateLegEffector final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkinnedMeshComponent*                  Mesh;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IKEnable;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0014(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0020(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               EffectorRotationTarget;                            // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                EffectorLocationTarget;                            // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTimeCache;                                    // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0xC];                                       // 0x00A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetAdjustedTransform_ReturnValue;         // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_GetParentBone_ReturnValue;                // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetAdjustedTransform_ReturnValue_1;       // 0x0140(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_ProjectGroundLocation_ReturnValue;        // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeFootDeltaRotation_ReturnValue;        // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue_1;   // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaLegComponent_C_UpdateLegEffector) == 0x000010, "Wrong alignment on CharaLegComponent_C_UpdateLegEffector");
static_assert(sizeof(CharaLegComponent_C_UpdateLegEffector) == 0x000230, "Wrong size on CharaLegComponent_C_UpdateLegEffector");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, DeltaTime) == 0x000000, "Member 'CharaLegComponent_C_UpdateLegEffector::DeltaTime' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, Mesh) == 0x000008, "Member 'CharaLegComponent_C_UpdateLegEffector::Mesh' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, IKEnable) == 0x000010, "Member 'CharaLegComponent_C_UpdateLegEffector::IKEnable' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, Location) == 0x000014, "Member 'CharaLegComponent_C_UpdateLegEffector::Location' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, Rotation) == 0x000020, "Member 'CharaLegComponent_C_UpdateLegEffector::Rotation' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, EffectorRotationTarget) == 0x00002C, "Member 'CharaLegComponent_C_UpdateLegEffector::EffectorRotationTarget' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, EffectorLocationTarget) == 0x000038, "Member 'CharaLegComponent_C_UpdateLegEffector::EffectorLocationTarget' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, DeltaTimeCache) == 0x000044, "Member 'CharaLegComponent_C_UpdateLegEffector::DeltaTimeCache' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000050, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_BreakTransform_Location) == 0x000080, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_BreakTransform_Rotation) == 0x00008C, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_BreakTransform_Scale) == 0x000098, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_GetSocketTransform_ReturnValue) == 0x0000B0, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_GetAdjustedTransform_ReturnValue) == 0x0000E0, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_GetAdjustedTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_GetParentBone_ReturnValue) == 0x000110, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_GetParentBone_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_BreakTransform_Location_1) == 0x000118, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_BreakTransform_Rotation_1) == 0x000124, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_BreakTransform_Scale_1) == 0x000130, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_GetAdjustedTransform_ReturnValue_1) == 0x000140, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_GetAdjustedTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_ProjectGroundLocation_ReturnValue) == 0x000170, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_ProjectGroundLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_BreakTransform_Location_2) == 0x00017C, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_BreakTransform_Rotation_2) == 0x000188, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_BreakTransform_Scale_2) == 0x000194, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001A0, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0001AC, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0001B8, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_SelectFloat_ReturnValue) == 0x0001C4, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_SelectFloat_ReturnValue_1) == 0x0001C8, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_RInterpTo_ReturnValue) == 0x0001CC, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_VInterpTo_ReturnValue) == 0x0001D8, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_InverseTransformLocation_ReturnValue) == 0x0001E4, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_Add_VectorVector_ReturnValue) == 0x0001F0, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x0001FC, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000208, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_MakeFootDeltaRotation_ReturnValue) == 0x000214, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_MakeFootDeltaRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_UpdateLegEffector, CallFunc_InverseTransformLocation_ReturnValue_1) == 0x000220, "Member 'CharaLegComponent_C_UpdateLegEffector::CallFunc_InverseTransformLocation_ReturnValue_1' has a wrong offset!");

// Function CharaLegComponent.CharaLegComponent_C.MakeFootDeltaRotation
// 0x0210 (0x0210 - 0x0000)
struct CharaLegComponent_C_MakeFootDeltaRotation final
{
public:
	class USkinnedMeshComponent*                  Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_Debug;                                       // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               ReturnValue;                                       // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	float                                         FootTwistAngle;                                    // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               FootDeltaRotation;                                 // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromAtoB_ReturnValue;              // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakRotToAxisAndAngle_Axis;              // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotToAxisAndAngle_Angle;             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue_1;                      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue;      // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue_2;                      // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_138[0x8];                                      // 0x0138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetAdjustedTransform_ReturnValue;         // 0x0140(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue;           // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue_1;    // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_FCeil_ReturnValue_3;                      // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaLegComponent_C_MakeFootDeltaRotation) == 0x000010, "Wrong alignment on CharaLegComponent_C_MakeFootDeltaRotation");
static_assert(sizeof(CharaLegComponent_C_MakeFootDeltaRotation) == 0x000210, "Wrong size on CharaLegComponent_C_MakeFootDeltaRotation");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, Mesh) == 0x000000, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::Mesh' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, Normal) == 0x000008, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::Normal' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, Param_Debug) == 0x000014, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::Param_Debug' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, ReturnValue) == 0x000018, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, FootTwistAngle) == 0x000024, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::FootTwistAngle' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, FootDeltaRotation) == 0x000028, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::FootDeltaRotation' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_BreakTransform_Location) == 0x000034, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_BreakTransform_Rotation) == 0x000040, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_BreakTransform_Scale) == 0x00004C, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_GetUpVector_ReturnValue) == 0x000058, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_MakeRotFromAtoB_ReturnValue) == 0x000064, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_MakeRotFromAtoB_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_BreakRotToAxisAndAngle_Axis) == 0x000070, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_BreakRotToAxisAndAngle_Axis' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_BreakRotToAxisAndAngle_Angle) == 0x00007C, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_BreakRotToAxisAndAngle_Angle' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_FCeil_ReturnValue) == 0x000080, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_FCeil_ReturnValue_1) == 0x000084, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_FCeil_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_Conv_IntToString_ReturnValue) == 0x000088, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000098, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000A8, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_RotatorFromAxisAndAngle_ReturnValue) == 0x0000AC, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_RotatorFromAxisAndAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_SelectFloat_ReturnValue) == 0x0000B8, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_FCeil_ReturnValue_2) == 0x0000BC, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_FCeil_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0000C0, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D0, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E0, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000F0, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000100, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000110, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000118, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000128, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_GetAdjustedTransform_ReturnValue) == 0x000140, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_GetAdjustedTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_InverseTransformDirection_ReturnValue) == 0x000170, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_TransformDirection_ReturnValue) == 0x00017C, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_TransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_BreakVector_X) == 0x000188, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_BreakVector_Y) == 0x00018C, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_BreakVector_Z) == 0x000190, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_RotatorFromAxisAndAngle_ReturnValue_1) == 0x000194, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_RotatorFromAxisAndAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_DegAtan2_ReturnValue) == 0x0001A0, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_ComposeRotators_ReturnValue) == 0x0001A4, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_FCeil_ReturnValue_3) == 0x0001B0, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_FCeil_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_Conv_IntToString_ReturnValue_3) == 0x0001B8, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_GetFloatValue_ReturnValue) == 0x0001C8, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0001D0, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_Abs_ReturnValue) == 0x0001E0, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0001E8, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_DegAcos_ReturnValue) == 0x0001F8, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001FC, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_FClamp_ReturnValue) == 0x000200, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_MakeFootDeltaRotation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000204, "Member 'CharaLegComponent_C_MakeFootDeltaRotation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function CharaLegComponent.CharaLegComponent_C.GetLegIKTarget
// 0x0080 (0x0080 - 0x0000)
struct CharaLegComponent_C_GetLegIKTarget final
{
public:
	class USkinnedMeshComponent*                  Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0xC];                                       // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRefPoseTransform_ReturnValue;          // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaLegComponent_C_GetLegIKTarget) == 0x000010, "Wrong alignment on CharaLegComponent_C_GetLegIKTarget");
static_assert(sizeof(CharaLegComponent_C_GetLegIKTarget) == 0x000080, "Wrong size on CharaLegComponent_C_GetLegIKTarget");
static_assert(offsetof(CharaLegComponent_C_GetLegIKTarget, Mesh) == 0x000000, "Member 'CharaLegComponent_C_GetLegIKTarget::Mesh' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_GetLegIKTarget, ReturnValue) == 0x000008, "Member 'CharaLegComponent_C_GetLegIKTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_GetLegIKTarget, CallFunc_GetRefPoseTransform_ReturnValue) == 0x000020, "Member 'CharaLegComponent_C_GetLegIKTarget::CallFunc_GetRefPoseTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_GetLegIKTarget, CallFunc_BreakTransform_Location) == 0x000050, "Member 'CharaLegComponent_C_GetLegIKTarget::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_GetLegIKTarget, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'CharaLegComponent_C_GetLegIKTarget::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_GetLegIKTarget, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'CharaLegComponent_C_GetLegIKTarget::CallFunc_BreakTransform_Scale' has a wrong offset!");

// Function CharaLegComponent.CharaLegComponent_C.TestSink
// 0x0230 (0x0230 - 0x0000)
struct CharaLegComponent_C_TestSink final
{
public:
	class USkinnedMeshComponent*                  Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SinkLimit;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_Debug;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SinkMin;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SinkMax;                                           // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharacterScale;                                    // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable;                                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMinElement_ReturnValue;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable_1;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               K2Node_Select_Default;                             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEffectorOffsetLimit_ReturnValue;       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetAdjustedTransform_ReturnValue;         // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_GetParentBone_ReturnValue;                // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetAdjustedTransform_ReturnValue_1;       // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_ProjectGroundLocation_ReturnValue;        // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TraceGround_Hit;                          // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TraceGround_Location;                     // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TraceGround_Normal;                       // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_TraceGround_Surface;                      // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeFootDeltaRotation_ReturnValue;        // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaLegComponent_C_TestSink) == 0x000010, "Wrong alignment on CharaLegComponent_C_TestSink");
static_assert(sizeof(CharaLegComponent_C_TestSink) == 0x000230, "Wrong size on CharaLegComponent_C_TestSink");
static_assert(offsetof(CharaLegComponent_C_TestSink, Mesh) == 0x000000, "Member 'CharaLegComponent_C_TestSink::Mesh' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, SinkLimit) == 0x000008, "Member 'CharaLegComponent_C_TestSink::SinkLimit' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, Param_Debug) == 0x00000C, "Member 'CharaLegComponent_C_TestSink::Param_Debug' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, SinkMin) == 0x000010, "Member 'CharaLegComponent_C_TestSink::SinkMin' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, SinkMax) == 0x000014, "Member 'CharaLegComponent_C_TestSink::SinkMax' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CharacterScale) == 0x000018, "Member 'CharaLegComponent_C_TestSink::CharacterScale' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, Temp_bool_Variable) == 0x00001C, "Member 'CharaLegComponent_C_TestSink::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'CharaLegComponent_C_TestSink::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_BreakTransform_Location) == 0x000050, "Member 'CharaLegComponent_C_TestSink::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'CharaLegComponent_C_TestSink::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'CharaLegComponent_C_TestSink::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, Temp_byte_Variable) == 0x000074, "Member 'CharaLegComponent_C_TestSink::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_GetMinElement_ReturnValue) == 0x000078, "Member 'CharaLegComponent_C_TestSink::CallFunc_GetMinElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x00007C, "Member 'CharaLegComponent_C_TestSink::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, Temp_byte_Variable_1) == 0x000088, "Member 'CharaLegComponent_C_TestSink::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_MakeVector_ReturnValue) == 0x00008C, "Member 'CharaLegComponent_C_TestSink::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, K2Node_Select_Default) == 0x000098, "Member 'CharaLegComponent_C_TestSink::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00009C, "Member 'CharaLegComponent_C_TestSink::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_GetEffectorOffsetLimit_ReturnValue) == 0x0000A0, "Member 'CharaLegComponent_C_TestSink::CallFunc_GetEffectorOffsetLimit_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000A4, "Member 'CharaLegComponent_C_TestSink::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_GetAdjustedTransform_ReturnValue) == 0x0000B0, "Member 'CharaLegComponent_C_TestSink::CallFunc_GetAdjustedTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_GetParentBone_ReturnValue) == 0x0000E0, "Member 'CharaLegComponent_C_TestSink::CallFunc_GetParentBone_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_BreakTransform_Location_1) == 0x0000E8, "Member 'CharaLegComponent_C_TestSink::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_BreakTransform_Rotation_1) == 0x0000F4, "Member 'CharaLegComponent_C_TestSink::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_BreakTransform_Scale_1) == 0x000100, "Member 'CharaLegComponent_C_TestSink::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_GetAdjustedTransform_ReturnValue_1) == 0x000110, "Member 'CharaLegComponent_C_TestSink::CallFunc_GetAdjustedTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_ProjectGroundLocation_ReturnValue) == 0x000140, "Member 'CharaLegComponent_C_TestSink::CallFunc_ProjectGroundLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_BreakTransform_Location_2) == 0x00014C, "Member 'CharaLegComponent_C_TestSink::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_BreakTransform_Rotation_2) == 0x000158, "Member 'CharaLegComponent_C_TestSink::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_BreakTransform_Scale_2) == 0x000164, "Member 'CharaLegComponent_C_TestSink::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_Add_VectorVector_ReturnValue) == 0x000170, "Member 'CharaLegComponent_C_TestSink::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00017C, "Member 'CharaLegComponent_C_TestSink::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_TransformLocation_ReturnValue) == 0x000188, "Member 'CharaLegComponent_C_TestSink::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000194, "Member 'CharaLegComponent_C_TestSink::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_TraceGround_Hit) == 0x000198, "Member 'CharaLegComponent_C_TestSink::CallFunc_TraceGround_Hit' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_TraceGround_Location) == 0x00019C, "Member 'CharaLegComponent_C_TestSink::CallFunc_TraceGround_Location' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_TraceGround_Normal) == 0x0001A8, "Member 'CharaLegComponent_C_TestSink::CallFunc_TraceGround_Normal' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_TraceGround_Surface) == 0x0001B4, "Member 'CharaLegComponent_C_TestSink::CallFunc_TraceGround_Surface' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_InverseTransformLocation_ReturnValue) == 0x0001B8, "Member 'CharaLegComponent_C_TestSink::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x0001C4, "Member 'CharaLegComponent_C_TestSink::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0001D0, "Member 'CharaLegComponent_C_TestSink::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_MakeFootDeltaRotation_ReturnValue) == 0x0001DC, "Member 'CharaLegComponent_C_TestSink::CallFunc_MakeFootDeltaRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_BreakVector_X) == 0x0001E8, "Member 'CharaLegComponent_C_TestSink::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_BreakVector_Y) == 0x0001EC, "Member 'CharaLegComponent_C_TestSink::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_BreakVector_Z) == 0x0001F0, "Member 'CharaLegComponent_C_TestSink::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x0001F4, "Member 'CharaLegComponent_C_TestSink::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_FMin_ReturnValue) == 0x000200, "Member 'CharaLegComponent_C_TestSink::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000204, "Member 'CharaLegComponent_C_TestSink::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_BreakVector_X_1) == 0x000210, "Member 'CharaLegComponent_C_TestSink::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_BreakVector_Y_1) == 0x000214, "Member 'CharaLegComponent_C_TestSink::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_BreakVector_Z_1) == 0x000218, "Member 'CharaLegComponent_C_TestSink::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00021C, "Member 'CharaLegComponent_C_TestSink::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_TestSink, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000220, "Member 'CharaLegComponent_C_TestSink::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function CharaLegComponent.CharaLegComponent_C.GetEffectorOffsetLimit
// 0x0008 (0x0008 - 0x0000)
struct CharaLegComponent_C_GetEffectorOffsetLimit final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaLegComponent_C_GetEffectorOffsetLimit) == 0x000004, "Wrong alignment on CharaLegComponent_C_GetEffectorOffsetLimit");
static_assert(sizeof(CharaLegComponent_C_GetEffectorOffsetLimit) == 0x000008, "Wrong size on CharaLegComponent_C_GetEffectorOffsetLimit");
static_assert(offsetof(CharaLegComponent_C_GetEffectorOffsetLimit, ReturnValue) == 0x000000, "Member 'CharaLegComponent_C_GetEffectorOffsetLimit::ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_GetEffectorOffsetLimit, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'CharaLegComponent_C_GetEffectorOffsetLimit::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function CharaLegComponent.CharaLegComponent_C.GetAdjustedTransform
// 0x00A0 (0x00A0 - 0x0000)
struct CharaLegComponent_C_GetAdjustedTransform final
{
public:
	class USkinnedMeshComponent*                  Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Socket;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             ReturnValue;                                       // 0x0010(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaLegComponent_C_GetAdjustedTransform) == 0x000010, "Wrong alignment on CharaLegComponent_C_GetAdjustedTransform");
static_assert(sizeof(CharaLegComponent_C_GetAdjustedTransform) == 0x0000A0, "Wrong size on CharaLegComponent_C_GetAdjustedTransform");
static_assert(offsetof(CharaLegComponent_C_GetAdjustedTransform, Mesh) == 0x000000, "Member 'CharaLegComponent_C_GetAdjustedTransform::Mesh' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_GetAdjustedTransform, Socket) == 0x000008, "Member 'CharaLegComponent_C_GetAdjustedTransform::Socket' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_GetAdjustedTransform, ReturnValue) == 0x000010, "Member 'CharaLegComponent_C_GetAdjustedTransform::ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_GetAdjustedTransform, CallFunc_GetSocketTransform_ReturnValue) == 0x000040, "Member 'CharaLegComponent_C_GetAdjustedTransform::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_GetAdjustedTransform, CallFunc_ComposeTransforms_ReturnValue) == 0x000070, "Member 'CharaLegComponent_C_GetAdjustedTransform::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");

// Function CharaLegComponent.CharaLegComponent_C.ProjectGroundLocation
// 0x0078 (0x0078 - 0x0000)
struct CharaLegComponent_C_ProjectGroundLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaLegComponent_C_ProjectGroundLocation) == 0x000004, "Wrong alignment on CharaLegComponent_C_ProjectGroundLocation");
static_assert(sizeof(CharaLegComponent_C_ProjectGroundLocation) == 0x000078, "Wrong size on CharaLegComponent_C_ProjectGroundLocation");
static_assert(offsetof(CharaLegComponent_C_ProjectGroundLocation, Location) == 0x000000, "Member 'CharaLegComponent_C_ProjectGroundLocation::Location' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_ProjectGroundLocation, ReturnValue) == 0x00000C, "Member 'CharaLegComponent_C_ProjectGroundLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_ProjectGroundLocation, CallFunc_BreakTransform_Location) == 0x000018, "Member 'CharaLegComponent_C_ProjectGroundLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_ProjectGroundLocation, CallFunc_BreakTransform_Rotation) == 0x000024, "Member 'CharaLegComponent_C_ProjectGroundLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_ProjectGroundLocation, CallFunc_BreakTransform_Scale) == 0x000030, "Member 'CharaLegComponent_C_ProjectGroundLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_ProjectGroundLocation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x00003C, "Member 'CharaLegComponent_C_ProjectGroundLocation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_ProjectGroundLocation, CallFunc_Dot_VectorVector_ReturnValue) == 0x000048, "Member 'CharaLegComponent_C_ProjectGroundLocation::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_ProjectGroundLocation, CallFunc_BreakVector_X) == 0x00004C, "Member 'CharaLegComponent_C_ProjectGroundLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_ProjectGroundLocation, CallFunc_BreakVector_Y) == 0x000050, "Member 'CharaLegComponent_C_ProjectGroundLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_ProjectGroundLocation, CallFunc_BreakVector_Z) == 0x000054, "Member 'CharaLegComponent_C_ProjectGroundLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_ProjectGroundLocation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000058, "Member 'CharaLegComponent_C_ProjectGroundLocation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_ProjectGroundLocation, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x00005C, "Member 'CharaLegComponent_C_ProjectGroundLocation::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_ProjectGroundLocation, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'CharaLegComponent_C_ProjectGroundLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_ProjectGroundLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00006C, "Member 'CharaLegComponent_C_ProjectGroundLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");

// Function CharaLegComponent.CharaLegComponent_C.GetFootingPoint
// 0x00B0 (0x00B0 - 0x0000)
struct CharaLegComponent_C_GetFootingPoint final
{
public:
	class USkinnedMeshComponent*                  Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Threshold;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Keep;                                              // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Point;                                             // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharacterScale;                                    // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMinElement_ReturnValue;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TraceGround_Hit;                          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TraceGround_Location;                     // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TraceGround_Normal;                       // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_TraceGround_Surface;                      // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaLegComponent_C_GetFootingPoint) == 0x000010, "Wrong alignment on CharaLegComponent_C_GetFootingPoint");
static_assert(sizeof(CharaLegComponent_C_GetFootingPoint) == 0x0000B0, "Wrong size on CharaLegComponent_C_GetFootingPoint");
static_assert(offsetof(CharaLegComponent_C_GetFootingPoint, Mesh) == 0x000000, "Member 'CharaLegComponent_C_GetFootingPoint::Mesh' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_GetFootingPoint, Threshold) == 0x000008, "Member 'CharaLegComponent_C_GetFootingPoint::Threshold' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_GetFootingPoint, Keep) == 0x00000C, "Member 'CharaLegComponent_C_GetFootingPoint::Keep' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_GetFootingPoint, Point) == 0x000010, "Member 'CharaLegComponent_C_GetFootingPoint::Point' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_GetFootingPoint, CharacterScale) == 0x00001C, "Member 'CharaLegComponent_C_GetFootingPoint::CharacterScale' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_GetFootingPoint, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'CharaLegComponent_C_GetFootingPoint::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_GetFootingPoint, CallFunc_BreakTransform_Location) == 0x000050, "Member 'CharaLegComponent_C_GetFootingPoint::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_GetFootingPoint, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'CharaLegComponent_C_GetFootingPoint::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_GetFootingPoint, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'CharaLegComponent_C_GetFootingPoint::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_GetFootingPoint, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000074, "Member 'CharaLegComponent_C_GetFootingPoint::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_GetFootingPoint, CallFunc_GetMinElement_ReturnValue) == 0x000078, "Member 'CharaLegComponent_C_GetFootingPoint::CallFunc_GetMinElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_GetFootingPoint, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x00007C, "Member 'CharaLegComponent_C_GetFootingPoint::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_GetFootingPoint, CallFunc_TraceGround_Hit) == 0x000088, "Member 'CharaLegComponent_C_GetFootingPoint::CallFunc_TraceGround_Hit' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_GetFootingPoint, CallFunc_TraceGround_Location) == 0x00008C, "Member 'CharaLegComponent_C_GetFootingPoint::CallFunc_TraceGround_Location' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_GetFootingPoint, CallFunc_TraceGround_Normal) == 0x000098, "Member 'CharaLegComponent_C_GetFootingPoint::CallFunc_TraceGround_Normal' has a wrong offset!");
static_assert(offsetof(CharaLegComponent_C_GetFootingPoint, CallFunc_TraceGround_Surface) == 0x0000A4, "Member 'CharaLegComponent_C_GetFootingPoint::CallFunc_TraceGround_Surface' has a wrong offset!");

}

