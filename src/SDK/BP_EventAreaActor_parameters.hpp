#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EventAreaActor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Project_structs.hpp"


namespace SDK::Params
{

// Function BP_EventAreaActor.BP_EventAreaActor_C.DeactivateBase
// 0x0020 (0x0020 - 0x0000)
struct BP_EventAreaActor_C_DeactivateBase final
{
public:
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventAreaActor_C_DeactivateBase) == 0x000008, "Wrong alignment on BP_EventAreaActor_C_DeactivateBase");
static_assert(sizeof(BP_EventAreaActor_C_DeactivateBase) == 0x000020, "Wrong size on BP_EventAreaActor_C_DeactivateBase");
static_assert(offsetof(BP_EventAreaActor_C_DeactivateBase, CallFunc_GetDisplayName_ReturnValue) == 0x000000, "Member 'BP_EventAreaActor_C_DeactivateBase::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_DeactivateBase, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'BP_EventAreaActor_C_DeactivateBase::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_EventAreaActor.BP_EventAreaActor_C.ActivateBase
// 0x0020 (0x0020 - 0x0000)
struct BP_EventAreaActor_C_ActivateBase final
{
public:
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventAreaActor_C_ActivateBase) == 0x000008, "Wrong alignment on BP_EventAreaActor_C_ActivateBase");
static_assert(sizeof(BP_EventAreaActor_C_ActivateBase) == 0x000020, "Wrong size on BP_EventAreaActor_C_ActivateBase");
static_assert(offsetof(BP_EventAreaActor_C_ActivateBase, CallFunc_GetDisplayName_ReturnValue) == 0x000000, "Member 'BP_EventAreaActor_C_ActivateBase::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_ActivateBase, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'BP_EventAreaActor_C_ActivateBase::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_EventAreaActor.BP_EventAreaActor_C.StartMapEvent
// 0x0098 (0x0098 - 0x0000)
struct BP_EventAreaActor_C_StartMapEvent final
{
public:
	bool                                          PlayerVisible;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoStopPrioBGM;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PlayerCameraEnable;                                // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoStopQuestBGM;                                    // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FA2[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FA3[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FA4[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameMode_C>       K2Node_DynamicCast_AsBPI_Game_Mode;                // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FA5[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetMapEventPlaying_Dummy;                 // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventAreaActor_C_StartMapEvent) == 0x000008, "Wrong alignment on BP_EventAreaActor_C_StartMapEvent");
static_assert(sizeof(BP_EventAreaActor_C_StartMapEvent) == 0x000098, "Wrong size on BP_EventAreaActor_C_StartMapEvent");
static_assert(offsetof(BP_EventAreaActor_C_StartMapEvent, PlayerVisible) == 0x000000, "Member 'BP_EventAreaActor_C_StartMapEvent::PlayerVisible' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_StartMapEvent, NoStopPrioBGM) == 0x000001, "Member 'BP_EventAreaActor_C_StartMapEvent::NoStopPrioBGM' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_StartMapEvent, PlayerCameraEnable) == 0x000002, "Member 'BP_EventAreaActor_C_StartMapEvent::PlayerCameraEnable' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_StartMapEvent, NoStopQuestBGM) == 0x000003, "Member 'BP_EventAreaActor_C_StartMapEvent::NoStopQuestBGM' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_StartMapEvent, Dummy) == 0x000004, "Member 'BP_EventAreaActor_C_StartMapEvent::Dummy' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_StartMapEvent, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_EventAreaActor_C_StartMapEvent::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_StartMapEvent, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EventAreaActor_C_StartMapEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_StartMapEvent, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'BP_EventAreaActor_C_StartMapEvent::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_StartMapEvent, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BP_EventAreaActor_C_StartMapEvent::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_StartMapEvent, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'BP_EventAreaActor_C_StartMapEvent::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_StartMapEvent, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'BP_EventAreaActor_C_StartMapEvent::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_StartMapEvent, CallFunc_GetGameMode_ReturnValue) == 0x000058, "Member 'BP_EventAreaActor_C_StartMapEvent::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_StartMapEvent, CallFunc_GetMapCommon_rerutn) == 0x000060, "Member 'BP_EventAreaActor_C_StartMapEvent::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_StartMapEvent, K2Node_DynamicCast_AsBPI_Game_Mode) == 0x000068, "Member 'BP_EventAreaActor_C_StartMapEvent::K2Node_DynamicCast_AsBPI_Game_Mode' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_StartMapEvent, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_EventAreaActor_C_StartMapEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_StartMapEvent, K2Node_DynamicCast_AsBPI_Map_Common) == 0x000080, "Member 'BP_EventAreaActor_C_StartMapEvent::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_StartMapEvent, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'BP_EventAreaActor_C_StartMapEvent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_StartMapEvent, CallFunc_SetMapEventPlaying_Dummy) == 0x000091, "Member 'BP_EventAreaActor_C_StartMapEvent::CallFunc_SetMapEventPlaying_Dummy' has a wrong offset!");

// Function BP_EventAreaActor.BP_EventAreaActor_C.EndMapEvent
// 0x0028 (0x0028 - 0x0000)
struct BP_EventAreaActor_C_EndMapEvent final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetEndMapEventParam_Dummy;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FA6[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventAreaActor_C_EndMapEvent) == 0x000008, "Wrong alignment on BP_EventAreaActor_C_EndMapEvent");
static_assert(sizeof(BP_EventAreaActor_C_EndMapEvent) == 0x000028, "Wrong size on BP_EventAreaActor_C_EndMapEvent");
static_assert(offsetof(BP_EventAreaActor_C_EndMapEvent, Dummy) == 0x000000, "Member 'BP_EventAreaActor_C_EndMapEvent::Dummy' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_EndMapEvent, CallFunc_SetEndMapEventParam_Dummy) == 0x000001, "Member 'BP_EventAreaActor_C_EndMapEvent::CallFunc_SetEndMapEventParam_Dummy' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_EndMapEvent, CallFunc_GetMapCommon_rerutn) == 0x000008, "Member 'BP_EventAreaActor_C_EndMapEvent::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_EndMapEvent, K2Node_DynamicCast_AsBPI_Map_Common) == 0x000010, "Member 'BP_EventAreaActor_C_EndMapEvent::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_EndMapEvent, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_EventAreaActor_C_EndMapEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EventAreaActor.BP_EventAreaActor_C.FadeOutMapEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_EventAreaActor_C_FadeOutMapEvent final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_FADE_STATE                               CallFunc_GetFadeState_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FadeOut_Black_ReturnValue;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventAreaActor_C_FadeOutMapEvent) == 0x000004, "Wrong alignment on BP_EventAreaActor_C_FadeOutMapEvent");
static_assert(sizeof(BP_EventAreaActor_C_FadeOutMapEvent) == 0x000008, "Wrong size on BP_EventAreaActor_C_FadeOutMapEvent");
static_assert(offsetof(BP_EventAreaActor_C_FadeOutMapEvent, Delay) == 0x000000, "Member 'BP_EventAreaActor_C_FadeOutMapEvent::Delay' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_FadeOutMapEvent, CallFunc_GetFadeState_ReturnValue) == 0x000004, "Member 'BP_EventAreaActor_C_FadeOutMapEvent::CallFunc_GetFadeState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_FadeOutMapEvent, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'BP_EventAreaActor_C_FadeOutMapEvent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_FadeOutMapEvent, CallFunc_FadeOut_Black_ReturnValue) == 0x000006, "Member 'BP_EventAreaActor_C_FadeOutMapEvent::CallFunc_FadeOut_Black_ReturnValue' has a wrong offset!");

// Function BP_EventAreaActor.BP_EventAreaActor_C.FadeInMapEvent
// 0x0010 (0x0010 - 0x0000)
struct BP_EventAreaActor_C_FadeInMapEvent final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LDelayTime;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FadeIn_BeforeColor_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_UI_FADE_STATE                               CallFunc_ScreenTransition_getFadeState_outType;    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_FADE_STATE                               CallFunc_GetFadeState_ReturnValue;                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventAreaActor_C_FadeInMapEvent) == 0x000004, "Wrong alignment on BP_EventAreaActor_C_FadeInMapEvent");
static_assert(sizeof(BP_EventAreaActor_C_FadeInMapEvent) == 0x000010, "Wrong size on BP_EventAreaActor_C_FadeInMapEvent");
static_assert(offsetof(BP_EventAreaActor_C_FadeInMapEvent, Delay) == 0x000000, "Member 'BP_EventAreaActor_C_FadeInMapEvent::Delay' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_FadeInMapEvent, LDelayTime) == 0x000004, "Member 'BP_EventAreaActor_C_FadeInMapEvent::LDelayTime' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_FadeInMapEvent, CallFunc_FadeIn_BeforeColor_ReturnValue) == 0x000008, "Member 'BP_EventAreaActor_C_FadeInMapEvent::CallFunc_FadeIn_BeforeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_FadeInMapEvent, CallFunc_ScreenTransition_getFadeState_outType) == 0x000009, "Member 'BP_EventAreaActor_C_FadeInMapEvent::CallFunc_ScreenTransition_getFadeState_outType' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_FadeInMapEvent, CallFunc_GetFadeState_ReturnValue) == 0x00000A, "Member 'BP_EventAreaActor_C_FadeInMapEvent::CallFunc_GetFadeState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_FadeInMapEvent, K2Node_SwitchEnum_CmpSuccess) == 0x00000B, "Member 'BP_EventAreaActor_C_FadeInMapEvent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_FadeInMapEvent, K2Node_SwitchEnum_CmpSuccess_1) == 0x00000C, "Member 'BP_EventAreaActor_C_FadeInMapEvent::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function BP_EventAreaActor.BP_EventAreaActor_C.Add3DIconToStaticPOI
// 0x0030 (0x0030 - 0x0000)
struct BP_EventAreaActor_C_Add3DIconToStaticPOI final
{
public:
	E_MINIMAP_POI_TYPE                            POIType;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FA7[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DataId;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FA8[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMapID_ReturnValue;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FA9[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMinimapManager*                        CallFunc_GetMinimapManager_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Add3DIcon_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventAreaActor_C_Add3DIconToStaticPOI) == 0x000008, "Wrong alignment on BP_EventAreaActor_C_Add3DIconToStaticPOI");
static_assert(sizeof(BP_EventAreaActor_C_Add3DIconToStaticPOI) == 0x000030, "Wrong size on BP_EventAreaActor_C_Add3DIconToStaticPOI");
static_assert(offsetof(BP_EventAreaActor_C_Add3DIconToStaticPOI, POIType) == 0x000000, "Member 'BP_EventAreaActor_C_Add3DIconToStaticPOI::POIType' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_Add3DIconToStaticPOI, DataId) == 0x000004, "Member 'BP_EventAreaActor_C_Add3DIconToStaticPOI::DataId' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_Add3DIconToStaticPOI, AreaId) == 0x000008, "Member 'BP_EventAreaActor_C_Add3DIconToStaticPOI::AreaId' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_Add3DIconToStaticPOI, Param_Owner) == 0x000010, "Member 'BP_EventAreaActor_C_Add3DIconToStaticPOI::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_Add3DIconToStaticPOI, CallFunc_GetMapID_ReturnValue) == 0x000018, "Member 'BP_EventAreaActor_C_Add3DIconToStaticPOI::CallFunc_GetMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_Add3DIconToStaticPOI, CallFunc_GetMinimapManager_ReturnValue) == 0x000020, "Member 'BP_EventAreaActor_C_Add3DIconToStaticPOI::CallFunc_GetMinimapManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_Add3DIconToStaticPOI, CallFunc_Add3DIcon_ReturnValue) == 0x000028, "Member 'BP_EventAreaActor_C_Add3DIconToStaticPOI::CallFunc_Add3DIcon_ReturnValue' has a wrong offset!");

// Function BP_EventAreaActor.BP_EventAreaActor_C.Delete3DIconFromStaticPOI
// 0x0010 (0x0010 - 0x0000)
struct BP_EventAreaActor_C_Delete3DIconFromStaticPOI final
{
public:
	class UMinimapManager*                        CallFunc_GetMinimapManager_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Delete3DIconByDataId_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventAreaActor_C_Delete3DIconFromStaticPOI) == 0x000008, "Wrong alignment on BP_EventAreaActor_C_Delete3DIconFromStaticPOI");
static_assert(sizeof(BP_EventAreaActor_C_Delete3DIconFromStaticPOI) == 0x000010, "Wrong size on BP_EventAreaActor_C_Delete3DIconFromStaticPOI");
static_assert(offsetof(BP_EventAreaActor_C_Delete3DIconFromStaticPOI, CallFunc_GetMinimapManager_ReturnValue) == 0x000000, "Member 'BP_EventAreaActor_C_Delete3DIconFromStaticPOI::CallFunc_GetMinimapManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_Delete3DIconFromStaticPOI, CallFunc_Delete3DIconByDataId_ReturnValue) == 0x000008, "Member 'BP_EventAreaActor_C_Delete3DIconFromStaticPOI::CallFunc_Delete3DIconByDataId_ReturnValue' has a wrong offset!");

// Function BP_EventAreaActor.BP_EventAreaActor_C.HandShakeStart
// 0x0030 (0x0030 - 0x0000)
struct BP_EventAreaActor_C_HandShakeStart final
{
public:
	class UClass*                                 ShakeClass;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShakeScale;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FAA[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomPlayerController*                K2Node_DynamicCast_AsCustom_Player_Controller;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FAB[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatineeCameraShake*                    CallFunc_EventCameraPlayShake_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventAreaActor_C_HandShakeStart) == 0x000008, "Wrong alignment on BP_EventAreaActor_C_HandShakeStart");
static_assert(sizeof(BP_EventAreaActor_C_HandShakeStart) == 0x000030, "Wrong size on BP_EventAreaActor_C_HandShakeStart");
static_assert(offsetof(BP_EventAreaActor_C_HandShakeStart, ShakeClass) == 0x000000, "Member 'BP_EventAreaActor_C_HandShakeStart::ShakeClass' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_HandShakeStart, ShakeScale) == 0x000008, "Member 'BP_EventAreaActor_C_HandShakeStart::ShakeScale' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_HandShakeStart, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_EventAreaActor_C_HandShakeStart::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_HandShakeStart, K2Node_DynamicCast_AsCustom_Player_Controller) == 0x000018, "Member 'BP_EventAreaActor_C_HandShakeStart::K2Node_DynamicCast_AsCustom_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_HandShakeStart, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_EventAreaActor_C_HandShakeStart::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_HandShakeStart, CallFunc_EventCameraPlayShake_ReturnValue) == 0x000028, "Member 'BP_EventAreaActor_C_HandShakeStart::CallFunc_EventCameraPlayShake_ReturnValue' has a wrong offset!");

// Function BP_EventAreaActor.BP_EventAreaActor_C.HandShakeStop
// 0x0020 (0x0020 - 0x0000)
struct BP_EventAreaActor_C_HandShakeStop final
{
public:
	bool                                          bImmediately;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FAC[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomPlayerController*                K2Node_DynamicCast_AsCustom_Player_Controller;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventAreaActor_C_HandShakeStop) == 0x000008, "Wrong alignment on BP_EventAreaActor_C_HandShakeStop");
static_assert(sizeof(BP_EventAreaActor_C_HandShakeStop) == 0x000020, "Wrong size on BP_EventAreaActor_C_HandShakeStop");
static_assert(offsetof(BP_EventAreaActor_C_HandShakeStop, bImmediately) == 0x000000, "Member 'BP_EventAreaActor_C_HandShakeStop::bImmediately' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_HandShakeStop, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_EventAreaActor_C_HandShakeStop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_HandShakeStop, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_EventAreaActor_C_HandShakeStop::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_HandShakeStop, K2Node_DynamicCast_AsCustom_Player_Controller) == 0x000010, "Member 'BP_EventAreaActor_C_HandShakeStop::K2Node_DynamicCast_AsCustom_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_HandShakeStop, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_EventAreaActor_C_HandShakeStop::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EventAreaActor.BP_EventAreaActor_C.HandShakeStartEx
// 0x0004 (0x0004 - 0x0000)
struct BP_EventAreaActor_C_HandShakeStartEx final
{
public:
	float                                         ShakeScale;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventAreaActor_C_HandShakeStartEx) == 0x000004, "Wrong alignment on BP_EventAreaActor_C_HandShakeStartEx");
static_assert(sizeof(BP_EventAreaActor_C_HandShakeStartEx) == 0x000004, "Wrong size on BP_EventAreaActor_C_HandShakeStartEx");
static_assert(offsetof(BP_EventAreaActor_C_HandShakeStartEx, ShakeScale) == 0x000000, "Member 'BP_EventAreaActor_C_HandShakeStartEx::ShakeScale' has a wrong offset!");

// Function BP_EventAreaActor.BP_EventAreaActor_C.SetEndMapEventParam
// 0x00A0 (0x00A0 - 0x0000)
struct BP_EventAreaActor_C_SetEndMapEventParam final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FAD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapUICtrl_MapUICtrl;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapUICtrl_C>      K2Node_DynamicCast_AsBPI_Map_UICtrl;               // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FAE[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FAF[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB0[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerBase_C*                          K2Node_DynamicCast_AsPlayer_Base;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FB1[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FB2[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameMode_C>       K2Node_DynamicCast_AsBPI_Game_Mode;                // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetMapEventPlaying_Dummy;                 // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventAreaActor_C_SetEndMapEventParam) == 0x000008, "Wrong alignment on BP_EventAreaActor_C_SetEndMapEventParam");
static_assert(sizeof(BP_EventAreaActor_C_SetEndMapEventParam) == 0x0000A0, "Wrong size on BP_EventAreaActor_C_SetEndMapEventParam");
static_assert(offsetof(BP_EventAreaActor_C_SetEndMapEventParam, Dummy) == 0x000000, "Member 'BP_EventAreaActor_C_SetEndMapEventParam::Dummy' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_SetEndMapEventParam, CallFunc_GetMapUICtrl_MapUICtrl) == 0x000008, "Member 'BP_EventAreaActor_C_SetEndMapEventParam::CallFunc_GetMapUICtrl_MapUICtrl' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_SetEndMapEventParam, K2Node_DynamicCast_AsBPI_Map_UICtrl) == 0x000010, "Member 'BP_EventAreaActor_C_SetEndMapEventParam::K2Node_DynamicCast_AsBPI_Map_UICtrl' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_SetEndMapEventParam, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_EventAreaActor_C_SetEndMapEventParam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_SetEndMapEventParam, CallFunc_GetPlayerPawn_ReturnValue) == 0x000028, "Member 'BP_EventAreaActor_C_SetEndMapEventParam::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_SetEndMapEventParam, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_EventAreaActor_C_SetEndMapEventParam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_SetEndMapEventParam, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000034, "Member 'BP_EventAreaActor_C_SetEndMapEventParam::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_SetEndMapEventParam, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x000040, "Member 'BP_EventAreaActor_C_SetEndMapEventParam::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_SetEndMapEventParam, K2Node_DynamicCast_AsPlayer_Base) == 0x000048, "Member 'BP_EventAreaActor_C_SetEndMapEventParam::K2Node_DynamicCast_AsPlayer_Base' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_SetEndMapEventParam, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_EventAreaActor_C_SetEndMapEventParam::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_SetEndMapEventParam, CallFunc_Conv_FloatToString_ReturnValue) == 0x000058, "Member 'BP_EventAreaActor_C_SetEndMapEventParam::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_SetEndMapEventParam, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'BP_EventAreaActor_C_SetEndMapEventParam::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_SetEndMapEventParam, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000078, "Member 'BP_EventAreaActor_C_SetEndMapEventParam::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_SetEndMapEventParam, CallFunc_GetGameMode_ReturnValue) == 0x000080, "Member 'BP_EventAreaActor_C_SetEndMapEventParam::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_SetEndMapEventParam, K2Node_DynamicCast_AsBPI_Game_Mode) == 0x000088, "Member 'BP_EventAreaActor_C_SetEndMapEventParam::K2Node_DynamicCast_AsBPI_Game_Mode' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_SetEndMapEventParam, K2Node_DynamicCast_bSuccess_2) == 0x000098, "Member 'BP_EventAreaActor_C_SetEndMapEventParam::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_SetEndMapEventParam, CallFunc_SetMapEventPlaying_Dummy) == 0x000099, "Member 'BP_EventAreaActor_C_SetEndMapEventParam::CallFunc_SetMapEventPlaying_Dummy' has a wrong offset!");

// Function BP_EventAreaActor.BP_EventAreaActor_C.AddTokyoLargeMapIconTalk
// 0x0038 (0x0038 - 0x0000)
struct BP_EventAreaActor_C_AddTokyoLargeMapIconTalk final
{
public:
	struct FVector                                ActorLocation;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InactiveFlag;                                      // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB3[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventAreaActor_C_AddTokyoLargeMapIconTalk) == 0x000008, "Wrong alignment on BP_EventAreaActor_C_AddTokyoLargeMapIconTalk");
static_assert(sizeof(BP_EventAreaActor_C_AddTokyoLargeMapIconTalk) == 0x000038, "Wrong size on BP_EventAreaActor_C_AddTokyoLargeMapIconTalk");
static_assert(offsetof(BP_EventAreaActor_C_AddTokyoLargeMapIconTalk, ActorLocation) == 0x000000, "Member 'BP_EventAreaActor_C_AddTokyoLargeMapIconTalk::ActorLocation' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_AddTokyoLargeMapIconTalk, InactiveFlag) == 0x00000C, "Member 'BP_EventAreaActor_C_AddTokyoLargeMapIconTalk::InactiveFlag' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_AddTokyoLargeMapIconTalk, CallFunc_GetMapCommon_rerutn) == 0x000018, "Member 'BP_EventAreaActor_C_AddTokyoLargeMapIconTalk::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_AddTokyoLargeMapIconTalk, K2Node_DynamicCast_AsBPI_Map_Common) == 0x000020, "Member 'BP_EventAreaActor_C_AddTokyoLargeMapIconTalk::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_AddTokyoLargeMapIconTalk, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_EventAreaActor_C_AddTokyoLargeMapIconTalk::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EventAreaActor.BP_EventAreaActor_C.DeleteTokyoLargeMapIcon
// 0x0020 (0x0020 - 0x0000)
struct BP_EventAreaActor_C_DeleteTokyoLargeMapIcon final
{
public:
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventAreaActor_C_DeleteTokyoLargeMapIcon) == 0x000008, "Wrong alignment on BP_EventAreaActor_C_DeleteTokyoLargeMapIcon");
static_assert(sizeof(BP_EventAreaActor_C_DeleteTokyoLargeMapIcon) == 0x000020, "Wrong size on BP_EventAreaActor_C_DeleteTokyoLargeMapIcon");
static_assert(offsetof(BP_EventAreaActor_C_DeleteTokyoLargeMapIcon, CallFunc_GetMapCommon_rerutn) == 0x000000, "Member 'BP_EventAreaActor_C_DeleteTokyoLargeMapIcon::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_DeleteTokyoLargeMapIcon, K2Node_DynamicCast_AsBPI_Map_Common) == 0x000008, "Member 'BP_EventAreaActor_C_DeleteTokyoLargeMapIcon::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_DeleteTokyoLargeMapIcon, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_EventAreaActor_C_DeleteTokyoLargeMapIcon::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EventAreaActor.BP_EventAreaActor_C.EndMapEventAfterBattle
// 0x0048 (0x0048 - 0x0000)
struct BP_EventAreaActor_C_EndMapEventAfterBattle final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FB4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FB5[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerBase_C*                          K2Node_DynamicCast_AsPlayer_Base;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FB6[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameMode_C>       K2Node_DynamicCast_AsBPI_Game_Mode;                // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetMapEventPlaying_Dummy;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventAreaActor_C_EndMapEventAfterBattle) == 0x000008, "Wrong alignment on BP_EventAreaActor_C_EndMapEventAfterBattle");
static_assert(sizeof(BP_EventAreaActor_C_EndMapEventAfterBattle) == 0x000048, "Wrong size on BP_EventAreaActor_C_EndMapEventAfterBattle");
static_assert(offsetof(BP_EventAreaActor_C_EndMapEventAfterBattle, Dummy) == 0x000000, "Member 'BP_EventAreaActor_C_EndMapEventAfterBattle::Dummy' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_EndMapEventAfterBattle, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_EventAreaActor_C_EndMapEventAfterBattle::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_EndMapEventAfterBattle, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EventAreaActor_C_EndMapEventAfterBattle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_EndMapEventAfterBattle, K2Node_DynamicCast_AsPlayer_Base) == 0x000018, "Member 'BP_EventAreaActor_C_EndMapEventAfterBattle::K2Node_DynamicCast_AsPlayer_Base' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_EndMapEventAfterBattle, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_EventAreaActor_C_EndMapEventAfterBattle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_EndMapEventAfterBattle, CallFunc_GetGameMode_ReturnValue) == 0x000028, "Member 'BP_EventAreaActor_C_EndMapEventAfterBattle::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_EndMapEventAfterBattle, K2Node_DynamicCast_AsBPI_Game_Mode) == 0x000030, "Member 'BP_EventAreaActor_C_EndMapEventAfterBattle::K2Node_DynamicCast_AsBPI_Game_Mode' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_EndMapEventAfterBattle, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_EventAreaActor_C_EndMapEventAfterBattle::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_EndMapEventAfterBattle, CallFunc_SetMapEventPlaying_Dummy) == 0x000041, "Member 'BP_EventAreaActor_C_EndMapEventAfterBattle::CallFunc_SetMapEventPlaying_Dummy' has a wrong offset!");

// Function BP_EventAreaActor.BP_EventAreaActor_C.AddTokyoLargeMapIconMission
// 0x0030 (0x0030 - 0x0000)
struct BP_EventAreaActor_C_AddTokyoLargeMapIconMission final
{
public:
	struct FVector                                ActorLocation;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MissionId;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventAreaActor_C_AddTokyoLargeMapIconMission) == 0x000008, "Wrong alignment on BP_EventAreaActor_C_AddTokyoLargeMapIconMission");
static_assert(sizeof(BP_EventAreaActor_C_AddTokyoLargeMapIconMission) == 0x000030, "Wrong size on BP_EventAreaActor_C_AddTokyoLargeMapIconMission");
static_assert(offsetof(BP_EventAreaActor_C_AddTokyoLargeMapIconMission, ActorLocation) == 0x000000, "Member 'BP_EventAreaActor_C_AddTokyoLargeMapIconMission::ActorLocation' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_AddTokyoLargeMapIconMission, MissionId) == 0x00000C, "Member 'BP_EventAreaActor_C_AddTokyoLargeMapIconMission::MissionId' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_AddTokyoLargeMapIconMission, CallFunc_GetMapCommon_rerutn) == 0x000010, "Member 'BP_EventAreaActor_C_AddTokyoLargeMapIconMission::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_AddTokyoLargeMapIconMission, K2Node_DynamicCast_AsBPI_Map_Common) == 0x000018, "Member 'BP_EventAreaActor_C_AddTokyoLargeMapIconMission::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_AddTokyoLargeMapIconMission, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_EventAreaActor_C_AddTokyoLargeMapIconMission::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EventAreaActor.BP_EventAreaActor_C.BPI_Map3DIconGetWorldLocation
// 0x00B0 (0x00B0 - 0x0000)
struct BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation final
{
public:
	struct FVector                                WorldLocation;                                     // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LoLocation;                                        // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> K2Node_DynamicCast_AsBPI_Chara_Base_Accessor;      // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FB7[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB8[0x8];                                     // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_BI_GetSocketTransform_RetVal;             // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FB9[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation) == 0x000010, "Wrong alignment on BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation");
static_assert(sizeof(BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation) == 0x0000B0, "Wrong size on BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation");
static_assert(offsetof(BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation, WorldLocation) == 0x000000, "Member 'BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation::WorldLocation' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation, LoLocation) == 0x00000C, "Member 'BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation::LoLocation' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation, K2Node_DynamicCast_AsBPI_Chara_Base_Accessor) == 0x000018, "Member 'BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation::K2Node_DynamicCast_AsBPI_Chara_Base_Accessor' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x00002C, "Member 'BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation, CallFunc_BI_GetSocketTransform_RetVal) == 0x000040, "Member 'BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation::CallFunc_BI_GetSocketTransform_RetVal' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation, CallFunc_BreakTransform_Location) == 0x000070, "Member 'BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation, CallFunc_BreakTransform_Rotation) == 0x00007C, "Member 'BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation, CallFunc_BreakTransform_Scale) == 0x000088, "Member 'BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000094, "Member 'BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000A4, "Member 'BP_EventAreaActor_C_BPI_Map3DIconGetWorldLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_EventAreaActor.BP_EventAreaActor_C.BPI_Map3DIconGetShouldBeRendered
// 0x0002 (0x0002 - 0x0000)
struct BP_EventAreaActor_C_BPI_Map3DIconGetShouldBeRendered final
{
public:
	bool                                          ShouldBeRendered;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Unknown;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventAreaActor_C_BPI_Map3DIconGetShouldBeRendered) == 0x000001, "Wrong alignment on BP_EventAreaActor_C_BPI_Map3DIconGetShouldBeRendered");
static_assert(sizeof(BP_EventAreaActor_C_BPI_Map3DIconGetShouldBeRendered) == 0x000002, "Wrong size on BP_EventAreaActor_C_BPI_Map3DIconGetShouldBeRendered");
static_assert(offsetof(BP_EventAreaActor_C_BPI_Map3DIconGetShouldBeRendered, ShouldBeRendered) == 0x000000, "Member 'BP_EventAreaActor_C_BPI_Map3DIconGetShouldBeRendered::ShouldBeRendered' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_BPI_Map3DIconGetShouldBeRendered, Unknown) == 0x000001, "Member 'BP_EventAreaActor_C_BPI_Map3DIconGetShouldBeRendered::Unknown' has a wrong offset!");

// Function BP_EventAreaActor.BP_EventAreaActor_C.BPI_GetDebugMemo
// 0x0040 (0x0040 - 0x0000)
struct BP_EventAreaActor_C_BPI_GetDebugMemo final
{
public:
	class FText                                   Memo;                                              // 0x0000(0x0018)(Parm, OutParm)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
};
static_assert(alignof(BP_EventAreaActor_C_BPI_GetDebugMemo) == 0x000008, "Wrong alignment on BP_EventAreaActor_C_BPI_GetDebugMemo");
static_assert(sizeof(BP_EventAreaActor_C_BPI_GetDebugMemo) == 0x000040, "Wrong size on BP_EventAreaActor_C_BPI_GetDebugMemo");
static_assert(offsetof(BP_EventAreaActor_C_BPI_GetDebugMemo, Memo) == 0x000000, "Member 'BP_EventAreaActor_C_BPI_GetDebugMemo::Memo' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_BPI_GetDebugMemo, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'BP_EventAreaActor_C_BPI_GetDebugMemo::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_BPI_GetDebugMemo, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'BP_EventAreaActor_C_BPI_GetDebugMemo::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_EventAreaActor.BP_EventAreaActor_C.BPI_GetHitBoxSize
// 0x000C (0x000C - 0x0000)
struct BP_EventAreaActor_C_BPI_GetHitBoxSize final
{
public:
	struct FVector                                Size;                                              // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventAreaActor_C_BPI_GetHitBoxSize) == 0x000004, "Wrong alignment on BP_EventAreaActor_C_BPI_GetHitBoxSize");
static_assert(sizeof(BP_EventAreaActor_C_BPI_GetHitBoxSize) == 0x00000C, "Wrong size on BP_EventAreaActor_C_BPI_GetHitBoxSize");
static_assert(offsetof(BP_EventAreaActor_C_BPI_GetHitBoxSize, Size) == 0x000000, "Member 'BP_EventAreaActor_C_BPI_GetHitBoxSize::Size' has a wrong offset!");

// Function BP_EventAreaActor.BP_EventAreaActor_C.BPI_GetMapEventId
// 0x0004 (0x0004 - 0x0000)
struct BP_EventAreaActor_C_BPI_GetMapEventId final
{
public:
	int32                                         MapEventID;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventAreaActor_C_BPI_GetMapEventId) == 0x000004, "Wrong alignment on BP_EventAreaActor_C_BPI_GetMapEventId");
static_assert(sizeof(BP_EventAreaActor_C_BPI_GetMapEventId) == 0x000004, "Wrong size on BP_EventAreaActor_C_BPI_GetMapEventId");
static_assert(offsetof(BP_EventAreaActor_C_BPI_GetMapEventId, MapEventID) == 0x000000, "Member 'BP_EventAreaActor_C_BPI_GetMapEventId::MapEventID' has a wrong offset!");

// Function BP_EventAreaActor.BP_EventAreaActor_C.BPI_CheckMissionEvent
// 0x0001 (0x0001 - 0x0000)
struct BP_EventAreaActor_C_BPI_CheckMissionEvent final
{
public:
	bool                                          MissionEvent;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventAreaActor_C_BPI_CheckMissionEvent) == 0x000001, "Wrong alignment on BP_EventAreaActor_C_BPI_CheckMissionEvent");
static_assert(sizeof(BP_EventAreaActor_C_BPI_CheckMissionEvent) == 0x000001, "Wrong size on BP_EventAreaActor_C_BPI_CheckMissionEvent");
static_assert(offsetof(BP_EventAreaActor_C_BPI_CheckMissionEvent, MissionEvent) == 0x000000, "Member 'BP_EventAreaActor_C_BPI_CheckMissionEvent::MissionEvent' has a wrong offset!");

// Function BP_EventAreaActor.BP_EventAreaActor_C.BPI_CheckMiman
// 0x0001 (0x0001 - 0x0000)
struct BP_EventAreaActor_C_BPI_CheckMiman final
{
public:
	bool                                          Miman;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventAreaActor_C_BPI_CheckMiman) == 0x000001, "Wrong alignment on BP_EventAreaActor_C_BPI_CheckMiman");
static_assert(sizeof(BP_EventAreaActor_C_BPI_CheckMiman) == 0x000001, "Wrong size on BP_EventAreaActor_C_BPI_CheckMiman");
static_assert(offsetof(BP_EventAreaActor_C_BPI_CheckMiman, Miman) == 0x000000, "Member 'BP_EventAreaActor_C_BPI_CheckMiman::Miman' has a wrong offset!");

// Function BP_EventAreaActor.BP_EventAreaActor_C.BPI_CheckNaviDevil
// 0x0001 (0x0001 - 0x0000)
struct BP_EventAreaActor_C_BPI_CheckNaviDevil final
{
public:
	bool                                          NaviDevil;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventAreaActor_C_BPI_CheckNaviDevil) == 0x000001, "Wrong alignment on BP_EventAreaActor_C_BPI_CheckNaviDevil");
static_assert(sizeof(BP_EventAreaActor_C_BPI_CheckNaviDevil) == 0x000001, "Wrong size on BP_EventAreaActor_C_BPI_CheckNaviDevil");
static_assert(offsetof(BP_EventAreaActor_C_BPI_CheckNaviDevil, NaviDevil) == 0x000000, "Member 'BP_EventAreaActor_C_BPI_CheckNaviDevil::NaviDevil' has a wrong offset!");

// Function BP_EventAreaActor.BP_EventAreaActor_C.Map3DIconGetWorldLocation
// 0x00B0 (0x00B0 - 0x0000)
struct BP_EventAreaActor_C_Map3DIconGetWorldLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LoLocation;                                        // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> K2Node_DynamicCast_AsBPI_Chara_Base_Accessor;      // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FBA[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FBB[0x8];                                     // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_BI_GetSocketTransform_RetVal;             // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FBC[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventAreaActor_C_Map3DIconGetWorldLocation) == 0x000010, "Wrong alignment on BP_EventAreaActor_C_Map3DIconGetWorldLocation");
static_assert(sizeof(BP_EventAreaActor_C_Map3DIconGetWorldLocation) == 0x0000B0, "Wrong size on BP_EventAreaActor_C_Map3DIconGetWorldLocation");
static_assert(offsetof(BP_EventAreaActor_C_Map3DIconGetWorldLocation, ReturnValue) == 0x000000, "Member 'BP_EventAreaActor_C_Map3DIconGetWorldLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_Map3DIconGetWorldLocation, LoLocation) == 0x00000C, "Member 'BP_EventAreaActor_C_Map3DIconGetWorldLocation::LoLocation' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_Map3DIconGetWorldLocation, K2Node_DynamicCast_AsBPI_Chara_Base_Accessor) == 0x000018, "Member 'BP_EventAreaActor_C_Map3DIconGetWorldLocation::K2Node_DynamicCast_AsBPI_Chara_Base_Accessor' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_Map3DIconGetWorldLocation, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_EventAreaActor_C_Map3DIconGetWorldLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_Map3DIconGetWorldLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x00002C, "Member 'BP_EventAreaActor_C_Map3DIconGetWorldLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_Map3DIconGetWorldLocation, CallFunc_BI_GetSocketTransform_RetVal) == 0x000040, "Member 'BP_EventAreaActor_C_Map3DIconGetWorldLocation::CallFunc_BI_GetSocketTransform_RetVal' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_Map3DIconGetWorldLocation, CallFunc_BreakTransform_Location) == 0x000070, "Member 'BP_EventAreaActor_C_Map3DIconGetWorldLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_Map3DIconGetWorldLocation, CallFunc_BreakTransform_Rotation) == 0x00007C, "Member 'BP_EventAreaActor_C_Map3DIconGetWorldLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_Map3DIconGetWorldLocation, CallFunc_BreakTransform_Scale) == 0x000088, "Member 'BP_EventAreaActor_C_Map3DIconGetWorldLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_Map3DIconGetWorldLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000094, "Member 'BP_EventAreaActor_C_Map3DIconGetWorldLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_Map3DIconGetWorldLocation, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'BP_EventAreaActor_C_Map3DIconGetWorldLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventAreaActor_C_Map3DIconGetWorldLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000A4, "Member 'BP_EventAreaActor_C_Map3DIconGetWorldLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

}

