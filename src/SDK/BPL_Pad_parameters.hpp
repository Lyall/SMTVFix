#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_Pad

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function BPL_Pad.BPL_Pad_C.IsActionPadCheck
// 0x0050 (0x0050 - 0x0000)
struct BPL_Pad_C_IsActionPadCheck final
{
public:
	E_ACTION_MAPPING_TYPE                         ActionMapping;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_INPUT_TYPE                                  InputType;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_StantingRepeat;                                  // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APadController*                         K2Node_DynamicCast_AsPad_Controller;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_IsActionPadCheckCore_key;                 // 0x0030(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsActionPadCheckCore_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_Pad_C_IsActionPadCheck) == 0x000008, "Wrong alignment on BPL_Pad_C_IsActionPadCheck");
static_assert(sizeof(BPL_Pad_C_IsActionPadCheck) == 0x000050, "Wrong size on BPL_Pad_C_IsActionPadCheck");
static_assert(offsetof(BPL_Pad_C_IsActionPadCheck, ActionMapping) == 0x000000, "Member 'BPL_Pad_C_IsActionPadCheck::ActionMapping' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsActionPadCheck, InputType) == 0x000001, "Member 'BPL_Pad_C_IsActionPadCheck::InputType' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsActionPadCheck, __WorldContext) == 0x000008, "Member 'BPL_Pad_C_IsActionPadCheck::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsActionPadCheck, Success) == 0x000010, "Member 'BPL_Pad_C_IsActionPadCheck::Success' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsActionPadCheck, L_StantingRepeat) == 0x000011, "Member 'BPL_Pad_C_IsActionPadCheck::L_StantingRepeat' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsActionPadCheck, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'BPL_Pad_C_IsActionPadCheck::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsActionPadCheck, K2Node_DynamicCast_AsPad_Controller) == 0x000020, "Member 'BPL_Pad_C_IsActionPadCheck::K2Node_DynamicCast_AsPad_Controller' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsActionPadCheck, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_Pad_C_IsActionPadCheck::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsActionPadCheck, CallFunc_IsActionPadCheckCore_key) == 0x000030, "Member 'BPL_Pad_C_IsActionPadCheck::CallFunc_IsActionPadCheckCore_key' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsActionPadCheck, CallFunc_IsActionPadCheckCore_ReturnValue) == 0x000048, "Member 'BPL_Pad_C_IsActionPadCheck::CallFunc_IsActionPadCheckCore_ReturnValue' has a wrong offset!");

// Function BPL_Pad.BPL_Pad_C.GetAxisPad
// 0x0030 (0x0030 - 0x0000)
struct BPL_Pad_C_GetAxisPad final
{
public:
	E_AXIS_MAPPING_TYPE                           AxisMapping;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APadController*                         K2Node_DynamicCast_AsPad_Controller;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAxisPadCore_value;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_Pad_C_GetAxisPad) == 0x000008, "Wrong alignment on BPL_Pad_C_GetAxisPad");
static_assert(sizeof(BPL_Pad_C_GetAxisPad) == 0x000030, "Wrong size on BPL_Pad_C_GetAxisPad");
static_assert(offsetof(BPL_Pad_C_GetAxisPad, AxisMapping) == 0x000000, "Member 'BPL_Pad_C_GetAxisPad::AxisMapping' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetAxisPad, __WorldContext) == 0x000008, "Member 'BPL_Pad_C_GetAxisPad::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetAxisPad, Value) == 0x000010, "Member 'BPL_Pad_C_GetAxisPad::Value' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetAxisPad, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'BPL_Pad_C_GetAxisPad::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetAxisPad, K2Node_DynamicCast_AsPad_Controller) == 0x000020, "Member 'BPL_Pad_C_GetAxisPad::K2Node_DynamicCast_AsPad_Controller' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetAxisPad, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_Pad_C_GetAxisPad::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetAxisPad, CallFunc_GetAxisPadCore_value) == 0x00002C, "Member 'BPL_Pad_C_GetAxisPad::CallFunc_GetAxisPadCore_value' has a wrong offset!");

// Function BPL_Pad.BPL_Pad_C.GetInputActionMappings
// 0x0048 (0x0048 - 0x0000)
struct BPL_Pad_C_GetInputActionMappings final
{
public:
	E_INPUT_TYPE                                  InputType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<E_ACTION_MAPPING_TYPE>                 ActionMappings;                                    // 0x0010(0x0010)(Parm, OutParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APadController*                         K2Node_DynamicCast_AsPad_Controller;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_ACTION_MAPPING_TYPE>                 CallFunc_GetInputActionMappingsCore_actionMappings; // 0x0038(0x0010)(ReferenceParm)
};
static_assert(alignof(BPL_Pad_C_GetInputActionMappings) == 0x000008, "Wrong alignment on BPL_Pad_C_GetInputActionMappings");
static_assert(sizeof(BPL_Pad_C_GetInputActionMappings) == 0x000048, "Wrong size on BPL_Pad_C_GetInputActionMappings");
static_assert(offsetof(BPL_Pad_C_GetInputActionMappings, InputType) == 0x000000, "Member 'BPL_Pad_C_GetInputActionMappings::InputType' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetInputActionMappings, __WorldContext) == 0x000008, "Member 'BPL_Pad_C_GetInputActionMappings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetInputActionMappings, ActionMappings) == 0x000010, "Member 'BPL_Pad_C_GetInputActionMappings::ActionMappings' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetInputActionMappings, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'BPL_Pad_C_GetInputActionMappings::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetInputActionMappings, K2Node_DynamicCast_AsPad_Controller) == 0x000028, "Member 'BPL_Pad_C_GetInputActionMappings::K2Node_DynamicCast_AsPad_Controller' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetInputActionMappings, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BPL_Pad_C_GetInputActionMappings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetInputActionMappings, CallFunc_GetInputActionMappingsCore_actionMappings) == 0x000038, "Member 'BPL_Pad_C_GetInputActionMappings::CallFunc_GetInputActionMappingsCore_actionMappings' has a wrong offset!");

// Function BPL_Pad.BPL_Pad_C.RepeatActionCheck_ForCrossKey
// 0x0050 (0x0050 - 0x0000)
struct BPL_Pad_C_RepeatActionCheck_ForCrossKey final
{
public:
	E_ACTION_MAPPING_TYPE                         ActionMapping;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APadController*                         K2Node_DynamicCast_AsPad_Controller;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_IsActionPadCheckCore_key;                 // 0x0030(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsActionPadCheckCore_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_Pad_C_RepeatActionCheck_ForCrossKey) == 0x000008, "Wrong alignment on BPL_Pad_C_RepeatActionCheck_ForCrossKey");
static_assert(sizeof(BPL_Pad_C_RepeatActionCheck_ForCrossKey) == 0x000050, "Wrong size on BPL_Pad_C_RepeatActionCheck_ForCrossKey");
static_assert(offsetof(BPL_Pad_C_RepeatActionCheck_ForCrossKey, ActionMapping) == 0x000000, "Member 'BPL_Pad_C_RepeatActionCheck_ForCrossKey::ActionMapping' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_RepeatActionCheck_ForCrossKey, __WorldContext) == 0x000008, "Member 'BPL_Pad_C_RepeatActionCheck_ForCrossKey::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_RepeatActionCheck_ForCrossKey, Success) == 0x000010, "Member 'BPL_Pad_C_RepeatActionCheck_ForCrossKey::Success' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_RepeatActionCheck_ForCrossKey, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'BPL_Pad_C_RepeatActionCheck_ForCrossKey::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_RepeatActionCheck_ForCrossKey, K2Node_DynamicCast_AsPad_Controller) == 0x000020, "Member 'BPL_Pad_C_RepeatActionCheck_ForCrossKey::K2Node_DynamicCast_AsPad_Controller' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_RepeatActionCheck_ForCrossKey, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_Pad_C_RepeatActionCheck_ForCrossKey::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_RepeatActionCheck_ForCrossKey, CallFunc_IsActionPadCheckCore_key) == 0x000030, "Member 'BPL_Pad_C_RepeatActionCheck_ForCrossKey::CallFunc_IsActionPadCheckCore_key' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_RepeatActionCheck_ForCrossKey, CallFunc_IsActionPadCheckCore_ReturnValue) == 0x000048, "Member 'BPL_Pad_C_RepeatActionCheck_ForCrossKey::CallFunc_IsActionPadCheckCore_ReturnValue' has a wrong offset!");

// Function BPL_Pad.BPL_Pad_C.GetMouseWheelAxis
// 0x0030 (0x0030 - 0x0000)
struct BPL_Pad_C_GetMouseWheelAxis final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Axis;                                              // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APadController*                         K2Node_DynamicCast_AsPad_Controller;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMouseWheelAxis_WheelAxis;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMouseWheelAxis_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_Pad_C_GetMouseWheelAxis) == 0x000008, "Wrong alignment on BPL_Pad_C_GetMouseWheelAxis");
static_assert(sizeof(BPL_Pad_C_GetMouseWheelAxis) == 0x000030, "Wrong size on BPL_Pad_C_GetMouseWheelAxis");
static_assert(offsetof(BPL_Pad_C_GetMouseWheelAxis, __WorldContext) == 0x000000, "Member 'BPL_Pad_C_GetMouseWheelAxis::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetMouseWheelAxis, Axis) == 0x000008, "Member 'BPL_Pad_C_GetMouseWheelAxis::Axis' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetMouseWheelAxis, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BPL_Pad_C_GetMouseWheelAxis::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetMouseWheelAxis, K2Node_DynamicCast_AsPad_Controller) == 0x000018, "Member 'BPL_Pad_C_GetMouseWheelAxis::K2Node_DynamicCast_AsPad_Controller' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetMouseWheelAxis, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPL_Pad_C_GetMouseWheelAxis::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetMouseWheelAxis, CallFunc_GetMouseWheelAxis_WheelAxis) == 0x000024, "Member 'BPL_Pad_C_GetMouseWheelAxis::CallFunc_GetMouseWheelAxis_WheelAxis' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetMouseWheelAxis, CallFunc_GetMouseWheelAxis_ReturnValue) == 0x000028, "Member 'BPL_Pad_C_GetMouseWheelAxis::CallFunc_GetMouseWheelAxis_ReturnValue' has a wrong offset!");

// Function BPL_Pad.BPL_Pad_C.GetMousePos
// 0x0038 (0x0038 - 0x0000)
struct BPL_Pad_C_GetMousePos final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         X;                                                 // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y;                                                 // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APadController*                         K2Node_DynamicCast_AsPad_Controller;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMousePos_x;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePos_y;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMousePos_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_Pad_C_GetMousePos) == 0x000008, "Wrong alignment on BPL_Pad_C_GetMousePos");
static_assert(sizeof(BPL_Pad_C_GetMousePos) == 0x000038, "Wrong size on BPL_Pad_C_GetMousePos");
static_assert(offsetof(BPL_Pad_C_GetMousePos, __WorldContext) == 0x000000, "Member 'BPL_Pad_C_GetMousePos::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetMousePos, Success) == 0x000008, "Member 'BPL_Pad_C_GetMousePos::Success' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetMousePos, X) == 0x00000C, "Member 'BPL_Pad_C_GetMousePos::X' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetMousePos, Y) == 0x000010, "Member 'BPL_Pad_C_GetMousePos::Y' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetMousePos, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'BPL_Pad_C_GetMousePos::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetMousePos, K2Node_DynamicCast_AsPad_Controller) == 0x000020, "Member 'BPL_Pad_C_GetMousePos::K2Node_DynamicCast_AsPad_Controller' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetMousePos, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_Pad_C_GetMousePos::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetMousePos, CallFunc_GetMousePos_x) == 0x00002C, "Member 'BPL_Pad_C_GetMousePos::CallFunc_GetMousePos_x' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetMousePos, CallFunc_GetMousePos_y) == 0x000030, "Member 'BPL_Pad_C_GetMousePos::CallFunc_GetMousePos_y' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_GetMousePos, CallFunc_GetMousePos_ReturnValue) == 0x000034, "Member 'BPL_Pad_C_GetMousePos::CallFunc_GetMousePos_ReturnValue' has a wrong offset!");

// Function BPL_Pad.BPL_Pad_C.IsHold_MouseLeftButton
// 0x0028 (0x0028 - 0x0000)
struct BPL_Pad_C_IsHold_MouseLeftButton final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hold;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APadController*                         K2Node_DynamicCast_AsPad_Controller;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHold_MouseAction_bHold;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHold_MouseAction_ReturnValue;           // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_Pad_C_IsHold_MouseLeftButton) == 0x000008, "Wrong alignment on BPL_Pad_C_IsHold_MouseLeftButton");
static_assert(sizeof(BPL_Pad_C_IsHold_MouseLeftButton) == 0x000028, "Wrong size on BPL_Pad_C_IsHold_MouseLeftButton");
static_assert(offsetof(BPL_Pad_C_IsHold_MouseLeftButton, __WorldContext) == 0x000000, "Member 'BPL_Pad_C_IsHold_MouseLeftButton::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsHold_MouseLeftButton, Hold) == 0x000008, "Member 'BPL_Pad_C_IsHold_MouseLeftButton::Hold' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsHold_MouseLeftButton, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BPL_Pad_C_IsHold_MouseLeftButton::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsHold_MouseLeftButton, K2Node_DynamicCast_AsPad_Controller) == 0x000018, "Member 'BPL_Pad_C_IsHold_MouseLeftButton::K2Node_DynamicCast_AsPad_Controller' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsHold_MouseLeftButton, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPL_Pad_C_IsHold_MouseLeftButton::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsHold_MouseLeftButton, CallFunc_IsHold_MouseAction_bHold) == 0x000021, "Member 'BPL_Pad_C_IsHold_MouseLeftButton::CallFunc_IsHold_MouseAction_bHold' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsHold_MouseLeftButton, CallFunc_IsHold_MouseAction_ReturnValue) == 0x000022, "Member 'BPL_Pad_C_IsHold_MouseLeftButton::CallFunc_IsHold_MouseAction_ReturnValue' has a wrong offset!");

// Function BPL_Pad.BPL_Pad_C.CheckGamePadUI
// 0x0028 (0x0028 - 0x0000)
struct BPL_Pad_C_CheckGamePadUI final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Gamepad;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APadController*                         K2Node_DynamicCast_AsPad_Controller;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckGamePadUI_ReturnValue;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_Pad_C_CheckGamePadUI) == 0x000008, "Wrong alignment on BPL_Pad_C_CheckGamePadUI");
static_assert(sizeof(BPL_Pad_C_CheckGamePadUI) == 0x000028, "Wrong size on BPL_Pad_C_CheckGamePadUI");
static_assert(offsetof(BPL_Pad_C_CheckGamePadUI, __WorldContext) == 0x000000, "Member 'BPL_Pad_C_CheckGamePadUI::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_CheckGamePadUI, Gamepad) == 0x000008, "Member 'BPL_Pad_C_CheckGamePadUI::Gamepad' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_CheckGamePadUI, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BPL_Pad_C_CheckGamePadUI::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_CheckGamePadUI, K2Node_DynamicCast_AsPad_Controller) == 0x000018, "Member 'BPL_Pad_C_CheckGamePadUI::K2Node_DynamicCast_AsPad_Controller' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_CheckGamePadUI, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPL_Pad_C_CheckGamePadUI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_CheckGamePadUI, CallFunc_CheckGamePadUI_ReturnValue) == 0x000021, "Member 'BPL_Pad_C_CheckGamePadUI::CallFunc_CheckGamePadUI_ReturnValue' has a wrong offset!");

// Function BPL_Pad.BPL_Pad_C.CheckGamePadEnable
// 0x0028 (0x0028 - 0x0000)
struct BPL_Pad_C_CheckGamePadEnable final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APadController*                         K2Node_DynamicCast_AsPad_Controller;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckGamePadEnable_ReturnValue;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_Pad_C_CheckGamePadEnable) == 0x000008, "Wrong alignment on BPL_Pad_C_CheckGamePadEnable");
static_assert(sizeof(BPL_Pad_C_CheckGamePadEnable) == 0x000028, "Wrong size on BPL_Pad_C_CheckGamePadEnable");
static_assert(offsetof(BPL_Pad_C_CheckGamePadEnable, __WorldContext) == 0x000000, "Member 'BPL_Pad_C_CheckGamePadEnable::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_CheckGamePadEnable, Enable) == 0x000008, "Member 'BPL_Pad_C_CheckGamePadEnable::Enable' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_CheckGamePadEnable, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BPL_Pad_C_CheckGamePadEnable::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_CheckGamePadEnable, K2Node_DynamicCast_AsPad_Controller) == 0x000018, "Member 'BPL_Pad_C_CheckGamePadEnable::K2Node_DynamicCast_AsPad_Controller' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_CheckGamePadEnable, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPL_Pad_C_CheckGamePadEnable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_CheckGamePadEnable, CallFunc_CheckGamePadEnable_ReturnValue) == 0x000021, "Member 'BPL_Pad_C_CheckGamePadEnable::CallFunc_CheckGamePadEnable_ReturnValue' has a wrong offset!");

// Function BPL_Pad.BPL_Pad_C.CheckMouseKeyboardEnable
// 0x0028 (0x0028 - 0x0000)
struct BPL_Pad_C_CheckMouseKeyboardEnable final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APadController*                         K2Node_DynamicCast_AsPad_Controller;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckMouseKeyboardEnable_ReturnValue;     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_Pad_C_CheckMouseKeyboardEnable) == 0x000008, "Wrong alignment on BPL_Pad_C_CheckMouseKeyboardEnable");
static_assert(sizeof(BPL_Pad_C_CheckMouseKeyboardEnable) == 0x000028, "Wrong size on BPL_Pad_C_CheckMouseKeyboardEnable");
static_assert(offsetof(BPL_Pad_C_CheckMouseKeyboardEnable, __WorldContext) == 0x000000, "Member 'BPL_Pad_C_CheckMouseKeyboardEnable::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_CheckMouseKeyboardEnable, Enable) == 0x000008, "Member 'BPL_Pad_C_CheckMouseKeyboardEnable::Enable' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_CheckMouseKeyboardEnable, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BPL_Pad_C_CheckMouseKeyboardEnable::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_CheckMouseKeyboardEnable, K2Node_DynamicCast_AsPad_Controller) == 0x000018, "Member 'BPL_Pad_C_CheckMouseKeyboardEnable::K2Node_DynamicCast_AsPad_Controller' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_CheckMouseKeyboardEnable, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPL_Pad_C_CheckMouseKeyboardEnable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_CheckMouseKeyboardEnable, CallFunc_CheckMouseKeyboardEnable_ReturnValue) == 0x000021, "Member 'BPL_Pad_C_CheckMouseKeyboardEnable::CallFunc_CheckMouseKeyboardEnable_ReturnValue' has a wrong offset!");

// Function BPL_Pad.BPL_Pad_C.CallManualActionMapping
// 0x0028 (0x0028 - 0x0000)
struct BPL_Pad_C_CallManualActionMapping final
{
public:
	E_ACTION_MAPPING_TYPE                         ActionMapping;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APadController*                         K2Node_DynamicCast_AsPad_Controller;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_Pad_C_CallManualActionMapping) == 0x000008, "Wrong alignment on BPL_Pad_C_CallManualActionMapping");
static_assert(sizeof(BPL_Pad_C_CallManualActionMapping) == 0x000028, "Wrong size on BPL_Pad_C_CallManualActionMapping");
static_assert(offsetof(BPL_Pad_C_CallManualActionMapping, ActionMapping) == 0x000000, "Member 'BPL_Pad_C_CallManualActionMapping::ActionMapping' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_CallManualActionMapping, __WorldContext) == 0x000008, "Member 'BPL_Pad_C_CallManualActionMapping::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_CallManualActionMapping, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BPL_Pad_C_CallManualActionMapping::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_CallManualActionMapping, K2Node_DynamicCast_AsPad_Controller) == 0x000018, "Member 'BPL_Pad_C_CallManualActionMapping::K2Node_DynamicCast_AsPad_Controller' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_CallManualActionMapping, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPL_Pad_C_CallManualActionMapping::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BPL_Pad.BPL_Pad_C.CallManualAxisMapping
// 0x0028 (0x0028 - 0x0000)
struct BPL_Pad_C_CallManualAxisMapping final
{
public:
	E_AXIS_MAPPING_TYPE                           AxisMapping;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Scale;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APadController*                         K2Node_DynamicCast_AsPad_Controller;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_Pad_C_CallManualAxisMapping) == 0x000008, "Wrong alignment on BPL_Pad_C_CallManualAxisMapping");
static_assert(sizeof(BPL_Pad_C_CallManualAxisMapping) == 0x000028, "Wrong size on BPL_Pad_C_CallManualAxisMapping");
static_assert(offsetof(BPL_Pad_C_CallManualAxisMapping, AxisMapping) == 0x000000, "Member 'BPL_Pad_C_CallManualAxisMapping::AxisMapping' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_CallManualAxisMapping, Scale) == 0x000004, "Member 'BPL_Pad_C_CallManualAxisMapping::Scale' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_CallManualAxisMapping, __WorldContext) == 0x000008, "Member 'BPL_Pad_C_CallManualAxisMapping::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_CallManualAxisMapping, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BPL_Pad_C_CallManualAxisMapping::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_CallManualAxisMapping, K2Node_DynamicCast_AsPad_Controller) == 0x000018, "Member 'BPL_Pad_C_CallManualAxisMapping::K2Node_DynamicCast_AsPad_Controller' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_CallManualAxisMapping, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPL_Pad_C_CallManualAxisMapping::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BPL_Pad.BPL_Pad_C.ConvertAxisMovingScale
// 0x0028 (0x0028 - 0x0000)
struct BPL_Pad_C_ConvertAxisMovingScale final
{
public:
	float                                         InAxisValue;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutAxisValue;                                      // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_Sensitivity;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStickSensitivityScale_ReturnValue;     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckGamePadEnable_Enable;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_Pad_C_ConvertAxisMovingScale) == 0x000008, "Wrong alignment on BPL_Pad_C_ConvertAxisMovingScale");
static_assert(sizeof(BPL_Pad_C_ConvertAxisMovingScale) == 0x000028, "Wrong size on BPL_Pad_C_ConvertAxisMovingScale");
static_assert(offsetof(BPL_Pad_C_ConvertAxisMovingScale, InAxisValue) == 0x000000, "Member 'BPL_Pad_C_ConvertAxisMovingScale::InAxisValue' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_ConvertAxisMovingScale, __WorldContext) == 0x000008, "Member 'BPL_Pad_C_ConvertAxisMovingScale::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_ConvertAxisMovingScale, OutAxisValue) == 0x000010, "Member 'BPL_Pad_C_ConvertAxisMovingScale::OutAxisValue' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_ConvertAxisMovingScale, L_Sensitivity) == 0x000014, "Member 'BPL_Pad_C_ConvertAxisMovingScale::L_Sensitivity' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_ConvertAxisMovingScale, CallFunc_GetStickSensitivityScale_ReturnValue) == 0x000018, "Member 'BPL_Pad_C_ConvertAxisMovingScale::CallFunc_GetStickSensitivityScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_ConvertAxisMovingScale, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00001C, "Member 'BPL_Pad_C_ConvertAxisMovingScale::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_ConvertAxisMovingScale, CallFunc_CheckGamePadEnable_Enable) == 0x000020, "Member 'BPL_Pad_C_ConvertAxisMovingScale::CallFunc_CheckGamePadEnable_Enable' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_ConvertAxisMovingScale, CallFunc_Less_FloatFloat_ReturnValue) == 0x000021, "Member 'BPL_Pad_C_ConvertAxisMovingScale::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BPL_Pad.BPL_Pad_C.IsMovedMouseCursor
// 0x0028 (0x0028 - 0x0000)
struct BPL_Pad_C_IsMovedMouseCursor final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Moved;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APadController*                         K2Node_DynamicCast_AsPad_Controller;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovedMouseCursor_bMoved;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovedMouseCursor_ReturnValue;           // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_Pad_C_IsMovedMouseCursor) == 0x000008, "Wrong alignment on BPL_Pad_C_IsMovedMouseCursor");
static_assert(sizeof(BPL_Pad_C_IsMovedMouseCursor) == 0x000028, "Wrong size on BPL_Pad_C_IsMovedMouseCursor");
static_assert(offsetof(BPL_Pad_C_IsMovedMouseCursor, __WorldContext) == 0x000000, "Member 'BPL_Pad_C_IsMovedMouseCursor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsMovedMouseCursor, Moved) == 0x000008, "Member 'BPL_Pad_C_IsMovedMouseCursor::Moved' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsMovedMouseCursor, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BPL_Pad_C_IsMovedMouseCursor::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsMovedMouseCursor, K2Node_DynamicCast_AsPad_Controller) == 0x000018, "Member 'BPL_Pad_C_IsMovedMouseCursor::K2Node_DynamicCast_AsPad_Controller' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsMovedMouseCursor, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPL_Pad_C_IsMovedMouseCursor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsMovedMouseCursor, CallFunc_IsMovedMouseCursor_bMoved) == 0x000021, "Member 'BPL_Pad_C_IsMovedMouseCursor::CallFunc_IsMovedMouseCursor_bMoved' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsMovedMouseCursor, CallFunc_IsMovedMouseCursor_ReturnValue) == 0x000022, "Member 'BPL_Pad_C_IsMovedMouseCursor::CallFunc_IsMovedMouseCursor_ReturnValue' has a wrong offset!");

// Function BPL_Pad.BPL_Pad_C.IsHold_MouseAnyButton
// 0x0028 (0x0028 - 0x0000)
struct BPL_Pad_C_IsHold_MouseAnyButton final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hold;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APadController*                         K2Node_DynamicCast_AsPad_Controller;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHold_MouseAnyButton_bHold;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHold_MouseAnyButton_ReturnValue;        // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_Pad_C_IsHold_MouseAnyButton) == 0x000008, "Wrong alignment on BPL_Pad_C_IsHold_MouseAnyButton");
static_assert(sizeof(BPL_Pad_C_IsHold_MouseAnyButton) == 0x000028, "Wrong size on BPL_Pad_C_IsHold_MouseAnyButton");
static_assert(offsetof(BPL_Pad_C_IsHold_MouseAnyButton, __WorldContext) == 0x000000, "Member 'BPL_Pad_C_IsHold_MouseAnyButton::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsHold_MouseAnyButton, Hold) == 0x000008, "Member 'BPL_Pad_C_IsHold_MouseAnyButton::Hold' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsHold_MouseAnyButton, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BPL_Pad_C_IsHold_MouseAnyButton::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsHold_MouseAnyButton, K2Node_DynamicCast_AsPad_Controller) == 0x000018, "Member 'BPL_Pad_C_IsHold_MouseAnyButton::K2Node_DynamicCast_AsPad_Controller' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsHold_MouseAnyButton, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPL_Pad_C_IsHold_MouseAnyButton::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsHold_MouseAnyButton, CallFunc_IsHold_MouseAnyButton_bHold) == 0x000021, "Member 'BPL_Pad_C_IsHold_MouseAnyButton::CallFunc_IsHold_MouseAnyButton_bHold' has a wrong offset!");
static_assert(offsetof(BPL_Pad_C_IsHold_MouseAnyButton, CallFunc_IsHold_MouseAnyButton_ReturnValue) == 0x000022, "Member 'BPL_Pad_C_IsHold_MouseAnyButton::CallFunc_IsHold_MouseAnyButton_ReturnValue' has a wrong offset!");

}

