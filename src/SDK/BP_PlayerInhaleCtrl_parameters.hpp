#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerInhaleCtrl

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerInhaleCtrl.BP_PlayerInhaleCtrl_C.ExecuteUbergraph_BP_PlayerInhaleCtrl
// 0x0070 (0x0070 - 0x0000)
struct BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C67[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C68[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerMovementComponent*               K2Node_DynamicCast_AsPlayer_Movement_Component;    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C69[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C6A[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue_1;       // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerMovementComponent*               K2Node_DynamicCast_AsPlayer_Movement_Component_1;  // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C6B[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetInhaleVector_Force;                    // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl) == 0x000008, "Wrong alignment on BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl");
static_assert(sizeof(BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl) == 0x000070, "Wrong size on BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl, EntryPoint) == 0x000000, "Member 'BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl, CallFunc_GetMovementComponent_ReturnValue) == 0x000018, "Member 'BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl, K2Node_DynamicCast_AsPlayer_Movement_Component) == 0x000028, "Member 'BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl::K2Node_DynamicCast_AsPlayer_Movement_Component' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000038, "Member 'BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl, CallFunc_GetMovementComponent_ReturnValue_1) == 0x000050, "Member 'BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl::CallFunc_GetMovementComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl, K2Node_DynamicCast_AsPlayer_Movement_Component_1) == 0x000058, "Member 'BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl::K2Node_DynamicCast_AsPlayer_Movement_Component_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl, CallFunc_GetInhaleVector_Force) == 0x000064, "Member 'BP_PlayerInhaleCtrl_C_ExecuteUbergraph_BP_PlayerInhaleCtrl::CallFunc_GetInhaleVector_Force' has a wrong offset!");

// Function BP_PlayerInhaleCtrl.BP_PlayerInhaleCtrl_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerInhaleCtrl_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInhaleCtrl_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_PlayerInhaleCtrl_C_ReceiveTick");
static_assert(sizeof(BP_PlayerInhaleCtrl_C_ReceiveTick) == 0x000004, "Wrong size on BP_PlayerInhaleCtrl_C_ReceiveTick");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_PlayerInhaleCtrl_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_PlayerInhaleCtrl.BP_PlayerInhaleCtrl_C.AddInhaleMesh
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerInhaleCtrl_C_AddInhaleMesh final
{
public:
	const class UMeshComponent*                   Mesh;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Socket;                                            // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0010(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C6C[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C6D[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInhaleCtrl_C_AddInhaleMesh) == 0x000008, "Wrong alignment on BP_PlayerInhaleCtrl_C_AddInhaleMesh");
static_assert(sizeof(BP_PlayerInhaleCtrl_C_AddInhaleMesh) == 0x000030, "Wrong size on BP_PlayerInhaleCtrl_C_AddInhaleMesh");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_AddInhaleMesh, Mesh) == 0x000000, "Member 'BP_PlayerInhaleCtrl_C_AddInhaleMesh::Mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_AddInhaleMesh, Socket) == 0x000008, "Member 'BP_PlayerInhaleCtrl_C_AddInhaleMesh::Socket' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_AddInhaleMesh, Temp_float_Variable) == 0x000010, "Member 'BP_PlayerInhaleCtrl_C_AddInhaleMesh::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_AddInhaleMesh, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_PlayerInhaleCtrl_C_AddInhaleMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_AddInhaleMesh, CallFunc_Array_Find_ReturnValue) == 0x000018, "Member 'BP_PlayerInhaleCtrl_C_AddInhaleMesh::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_AddInhaleMesh, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_PlayerInhaleCtrl_C_AddInhaleMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_AddInhaleMesh, CallFunc_Array_Add_ReturnValue) == 0x000020, "Member 'BP_PlayerInhaleCtrl_C_AddInhaleMesh::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_AddInhaleMesh, CallFunc_Array_Add_ReturnValue_1) == 0x000024, "Member 'BP_PlayerInhaleCtrl_C_AddInhaleMesh::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_AddInhaleMesh, CallFunc_Array_Add_ReturnValue_2) == 0x000028, "Member 'BP_PlayerInhaleCtrl_C_AddInhaleMesh::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerInhaleCtrl.BP_PlayerInhaleCtrl_C.RemoveInhaleMesh
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerInhaleCtrl_C_RemoveInhaleMesh final
{
public:
	class UObject*                                Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerInhaleCtrl_C_RemoveInhaleMesh) == 0x000008, "Wrong alignment on BP_PlayerInhaleCtrl_C_RemoveInhaleMesh");
static_assert(sizeof(BP_PlayerInhaleCtrl_C_RemoveInhaleMesh) == 0x000028, "Wrong size on BP_PlayerInhaleCtrl_C_RemoveInhaleMesh");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_RemoveInhaleMesh, Mesh) == 0x000000, "Member 'BP_PlayerInhaleCtrl_C_RemoveInhaleMesh::Mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_RemoveInhaleMesh, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_PlayerInhaleCtrl_C_RemoveInhaleMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_RemoveInhaleMesh, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_PlayerInhaleCtrl_C_RemoveInhaleMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_RemoveInhaleMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_PlayerInhaleCtrl_C_RemoveInhaleMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_RemoveInhaleMesh, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_PlayerInhaleCtrl_C_RemoveInhaleMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_RemoveInhaleMesh, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_PlayerInhaleCtrl_C_RemoveInhaleMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_RemoveInhaleMesh, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_PlayerInhaleCtrl_C_RemoveInhaleMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_RemoveInhaleMesh, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000021, "Member 'BP_PlayerInhaleCtrl_C_RemoveInhaleMesh::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_PlayerInhaleCtrl.BP_PlayerInhaleCtrl_C.SetInhaleForce
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerInhaleCtrl_C_SetInhaleForce final
{
public:
	const class UMeshComponent*                   Mesh;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_Force;                                       // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C6E[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInhaleCtrl_C_SetInhaleForce) == 0x000008, "Wrong alignment on BP_PlayerInhaleCtrl_C_SetInhaleForce");
static_assert(sizeof(BP_PlayerInhaleCtrl_C_SetInhaleForce) == 0x000018, "Wrong size on BP_PlayerInhaleCtrl_C_SetInhaleForce");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_SetInhaleForce, Mesh) == 0x000000, "Member 'BP_PlayerInhaleCtrl_C_SetInhaleForce::Mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_SetInhaleForce, Param_Force) == 0x000008, "Member 'BP_PlayerInhaleCtrl_C_SetInhaleForce::Param_Force' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_SetInhaleForce, L_index) == 0x00000C, "Member 'BP_PlayerInhaleCtrl_C_SetInhaleForce::L_index' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_SetInhaleForce, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerInhaleCtrl_C_SetInhaleForce::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_SetInhaleForce, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000011, "Member 'BP_PlayerInhaleCtrl_C_SetInhaleForce::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_SetInhaleForce, CallFunc_Array_Find_ReturnValue) == 0x000014, "Member 'BP_PlayerInhaleCtrl_C_SetInhaleForce::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function BP_PlayerInhaleCtrl.BP_PlayerInhaleCtrl_C.GetInhaleVector
// 0x00B0 (0x00B0 - 0x0000)
struct BP_PlayerInhaleCtrl_C_GetInhaleVector final
{
public:
	struct FVector                                Param_Force;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_Location;                                        // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_ForceVec;                                        // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomPawn*                            K2Node_DynamicCast_AsCustom_Pawn;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C6F[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C70[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C71[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C72[0x2];                                     // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInhaleCtrl_C_GetInhaleVector) == 0x000008, "Wrong alignment on BP_PlayerInhaleCtrl_C_GetInhaleVector");
static_assert(sizeof(BP_PlayerInhaleCtrl_C_GetInhaleVector) == 0x0000B0, "Wrong size on BP_PlayerInhaleCtrl_C_GetInhaleVector");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_GetInhaleVector, Param_Force) == 0x000000, "Member 'BP_PlayerInhaleCtrl_C_GetInhaleVector::Param_Force' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_GetInhaleVector, L_Location) == 0x00000C, "Member 'BP_PlayerInhaleCtrl_C_GetInhaleVector::L_Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_GetInhaleVector, L_ForceVec) == 0x000018, "Member 'BP_PlayerInhaleCtrl_C_GetInhaleVector::L_ForceVec' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_GetInhaleVector, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_PlayerInhaleCtrl_C_GetInhaleVector::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_GetInhaleVector, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_PlayerInhaleCtrl_C_GetInhaleVector::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_GetInhaleVector, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_PlayerInhaleCtrl_C_GetInhaleVector::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_GetInhaleVector, CallFunc_GetPlayerPawn_ReturnValue) == 0x000030, "Member 'BP_PlayerInhaleCtrl_C_GetInhaleVector::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_GetInhaleVector, K2Node_DynamicCast_AsCustom_Pawn) == 0x000038, "Member 'BP_PlayerInhaleCtrl_C_GetInhaleVector::K2Node_DynamicCast_AsCustom_Pawn' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_GetInhaleVector, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_PlayerInhaleCtrl_C_GetInhaleVector::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_GetInhaleVector, CallFunc_GetSocketLocation_ReturnValue) == 0x000044, "Member 'BP_PlayerInhaleCtrl_C_GetInhaleVector::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_GetInhaleVector, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000050, "Member 'BP_PlayerInhaleCtrl_C_GetInhaleVector::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_GetInhaleVector, CallFunc_Normal_ReturnValue) == 0x00005C, "Member 'BP_PlayerInhaleCtrl_C_GetInhaleVector::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_GetInhaleVector, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000068, "Member 'BP_PlayerInhaleCtrl_C_GetInhaleVector::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_GetInhaleVector, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00006C, "Member 'BP_PlayerInhaleCtrl_C_GetInhaleVector::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_GetInhaleVector, CallFunc_Add_VectorVector_ReturnValue) == 0x000078, "Member 'BP_PlayerInhaleCtrl_C_GetInhaleVector::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_GetInhaleVector, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_PlayerInhaleCtrl_C_GetInhaleVector::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_GetInhaleVector, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_PlayerInhaleCtrl_C_GetInhaleVector::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_GetInhaleVector, CallFunc_IsValid_ReturnValue) == 0x000094, "Member 'BP_PlayerInhaleCtrl_C_GetInhaleVector::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_GetInhaleVector, CallFunc_Less_IntInt_ReturnValue) == 0x000095, "Member 'BP_PlayerInhaleCtrl_C_GetInhaleVector::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_GetInhaleVector, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000098, "Member 'BP_PlayerInhaleCtrl_C_GetInhaleVector::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInhaleCtrl_C_GetInhaleVector, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000A4, "Member 'BP_PlayerInhaleCtrl_C_GetInhaleVector::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

}

