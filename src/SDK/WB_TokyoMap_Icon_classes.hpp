#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TokyoMap_Icon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Project_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_TokyoMap_Icon.WB_TokyoMap_Icon_C
// 0x0030 (0x0290 - 0x0260)
class UWB_TokyoMap_Icon_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Icon;                                              // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector                                ActorLocation;                                     // 0x0270(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         InactiveFlag;                                      // 0x027C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OwnerNPC;                                          // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MissionId;                                         // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TOKYO_ICON_TYPE                             IconType;                                          // 0x028C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_TokyoMap_Icon(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void SetTalkIcon();
	void SetTalkOffIcon();
	void UpdatePosition();
	void SetInactiveFlag(class FName InactiveFlagName);
	void Update();
	void GetPriority(int32* Param_Priority);
	void SetIconType(E_TOKYO_ICON_TYPE Param_IconType);
	void SetMissionId(int32 Param_MissionId);
	void UpdateIcon();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_TokyoMap_Icon_C">();
	}
	static class UWB_TokyoMap_Icon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_TokyoMap_Icon_C>();
	}
};
static_assert(alignof(UWB_TokyoMap_Icon_C) == 0x000008, "Wrong alignment on UWB_TokyoMap_Icon_C");
static_assert(sizeof(UWB_TokyoMap_Icon_C) == 0x000290, "Wrong size on UWB_TokyoMap_Icon_C");
static_assert(offsetof(UWB_TokyoMap_Icon_C, UberGraphFrame) == 0x000260, "Member 'UWB_TokyoMap_Icon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_TokyoMap_Icon_C, Icon) == 0x000268, "Member 'UWB_TokyoMap_Icon_C::Icon' has a wrong offset!");
static_assert(offsetof(UWB_TokyoMap_Icon_C, ActorLocation) == 0x000270, "Member 'UWB_TokyoMap_Icon_C::ActorLocation' has a wrong offset!");
static_assert(offsetof(UWB_TokyoMap_Icon_C, InactiveFlag) == 0x00027C, "Member 'UWB_TokyoMap_Icon_C::InactiveFlag' has a wrong offset!");
static_assert(offsetof(UWB_TokyoMap_Icon_C, OwnerNPC) == 0x000280, "Member 'UWB_TokyoMap_Icon_C::OwnerNPC' has a wrong offset!");
static_assert(offsetof(UWB_TokyoMap_Icon_C, MissionId) == 0x000288, "Member 'UWB_TokyoMap_Icon_C::MissionId' has a wrong offset!");
static_assert(offsetof(UWB_TokyoMap_Icon_C, IconType) == 0x00028C, "Member 'UWB_TokyoMap_Icon_C::IconType' has a wrong offset!");

}

