#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_UIManager

#include "Basic.hpp"

#include "E_TutorialWindow_WidgetState_structs.hpp"
#include "E_MoonAgeAnimationState_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_MakkaWindowAnimState_structs.hpp"
#include "Project_structs.hpp"
#include "E_ScreenTransitionFadeType_structs.hpp"


namespace SDK::Params
{

// Function BPL_UIManager.BPL_UIManager_C.CreateSSPPositionData
// 0x0048 (0x0048 - 0x0000)
struct BPL_UIManager_C_CreateSSPPositionData final
{
public:
	struct FVector2D                              InVec;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InSizeX;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InSizeY;                                           // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OutVec;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_UIManager_C_CreateSSPPositionData) == 0x000008, "Wrong alignment on BPL_UIManager_C_CreateSSPPositionData");
static_assert(sizeof(BPL_UIManager_C_CreateSSPPositionData) == 0x000048, "Wrong size on BPL_UIManager_C_CreateSSPPositionData");
static_assert(offsetof(BPL_UIManager_C_CreateSSPPositionData, InVec) == 0x000000, "Member 'BPL_UIManager_C_CreateSSPPositionData::InVec' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CreateSSPPositionData, InSizeX) == 0x000008, "Member 'BPL_UIManager_C_CreateSSPPositionData::InSizeX' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CreateSSPPositionData, InSizeY) == 0x00000C, "Member 'BPL_UIManager_C_CreateSSPPositionData::InSizeY' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CreateSSPPositionData, __WorldContext) == 0x000010, "Member 'BPL_UIManager_C_CreateSSPPositionData::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CreateSSPPositionData, OutVec) == 0x000018, "Member 'BPL_UIManager_C_CreateSSPPositionData::OutVec' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CreateSSPPositionData, CallFunc_BreakVector2D_X) == 0x000020, "Member 'BPL_UIManager_C_CreateSSPPositionData::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CreateSSPPositionData, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'BPL_UIManager_C_CreateSSPPositionData::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CreateSSPPositionData, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'BPL_UIManager_C_CreateSSPPositionData::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CreateSSPPositionData, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'BPL_UIManager_C_CreateSSPPositionData::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CreateSSPPositionData, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000030, "Member 'BPL_UIManager_C_CreateSSPPositionData::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CreateSSPPositionData, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000034, "Member 'BPL_UIManager_C_CreateSSPPositionData::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CreateSSPPositionData, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000038, "Member 'BPL_UIManager_C_CreateSSPPositionData::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CreateSSPPositionData, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'BPL_UIManager_C_CreateSSPPositionData::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CreateSSPPositionData, CallFunc_MakeVector2D_ReturnValue) == 0x000040, "Member 'BPL_UIManager_C_CreateSSPPositionData::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.GetSSPPositionDataByPartsName
// 0x0048 (0x0048 - 0x0000)
struct BPL_UIManager_C_GetSSPPositionDataByPartsName final
{
public:
	class FName                                   InPartsName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USsPlayerWidget*                        InSSPData;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InSizeX;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InSizeY;                                           // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OutVec;                                            // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPartTransform_OutPosition;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPartTransform_OutAngle;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPartTransform_OutScale;                // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPartTransform_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39BF[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_CreateSSPPositionData_OutVec;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_UIManager_C_GetSSPPositionDataByPartsName) == 0x000008, "Wrong alignment on BPL_UIManager_C_GetSSPPositionDataByPartsName");
static_assert(sizeof(BPL_UIManager_C_GetSSPPositionDataByPartsName) == 0x000048, "Wrong size on BPL_UIManager_C_GetSSPPositionDataByPartsName");
static_assert(offsetof(BPL_UIManager_C_GetSSPPositionDataByPartsName, InPartsName) == 0x000000, "Member 'BPL_UIManager_C_GetSSPPositionDataByPartsName::InPartsName' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_GetSSPPositionDataByPartsName, InSSPData) == 0x000008, "Member 'BPL_UIManager_C_GetSSPPositionDataByPartsName::InSSPData' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_GetSSPPositionDataByPartsName, InSizeX) == 0x000010, "Member 'BPL_UIManager_C_GetSSPPositionDataByPartsName::InSizeX' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_GetSSPPositionDataByPartsName, InSizeY) == 0x000014, "Member 'BPL_UIManager_C_GetSSPPositionDataByPartsName::InSizeY' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_GetSSPPositionDataByPartsName, __WorldContext) == 0x000018, "Member 'BPL_UIManager_C_GetSSPPositionDataByPartsName::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_GetSSPPositionDataByPartsName, OutVec) == 0x000020, "Member 'BPL_UIManager_C_GetSSPPositionDataByPartsName::OutVec' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_GetSSPPositionDataByPartsName, CallFunc_GetPartTransform_OutPosition) == 0x000028, "Member 'BPL_UIManager_C_GetSSPPositionDataByPartsName::CallFunc_GetPartTransform_OutPosition' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_GetSSPPositionDataByPartsName, CallFunc_GetPartTransform_OutAngle) == 0x000030, "Member 'BPL_UIManager_C_GetSSPPositionDataByPartsName::CallFunc_GetPartTransform_OutAngle' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_GetSSPPositionDataByPartsName, CallFunc_GetPartTransform_OutScale) == 0x000034, "Member 'BPL_UIManager_C_GetSSPPositionDataByPartsName::CallFunc_GetPartTransform_OutScale' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_GetSSPPositionDataByPartsName, CallFunc_GetPartTransform_ReturnValue) == 0x00003C, "Member 'BPL_UIManager_C_GetSSPPositionDataByPartsName::CallFunc_GetPartTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_GetSSPPositionDataByPartsName, CallFunc_CreateSSPPositionData_OutVec) == 0x000040, "Member 'BPL_UIManager_C_GetSSPPositionDataByPartsName::CallFunc_CreateSSPPositionData_OutVec' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MoonAge_open
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MoonAge_open final
{
public:
	bool                                          InAnimation;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39C0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39C1[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39C2[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_MoonAgeCtrl_outActor;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MoonAgeCtrl_C>    K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl;            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MoonAge_open) == 0x000008, "Wrong alignment on BPL_UIManager_C_MoonAge_open");
static_assert(sizeof(BPL_UIManager_C_MoonAge_open) == 0x000070, "Wrong size on BPL_UIManager_C_MoonAge_open");
static_assert(offsetof(BPL_UIManager_C_MoonAge_open, InAnimation) == 0x000000, "Member 'BPL_UIManager_C_MoonAge_open::InAnimation' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_open, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_MoonAge_open::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_open, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MoonAge_open::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_open, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MoonAge_open::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_open, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MoonAge_open::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_open, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MoonAge_open::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_open, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MoonAge_open::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_open, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MoonAge_open::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_open, CallFunc_BPI_MoonAgeCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_MoonAge_open::CallFunc_BPI_MoonAgeCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_open, K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_MoonAge_open::K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_open, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MoonAge_open::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MoonAge_close
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MoonAge_close final
{
public:
	bool                                          InAnimation;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39C3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39C4[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39C5[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_MoonAgeCtrl_outActor;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MoonAgeCtrl_C>    K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl;            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MoonAge_close) == 0x000008, "Wrong alignment on BPL_UIManager_C_MoonAge_close");
static_assert(sizeof(BPL_UIManager_C_MoonAge_close) == 0x000070, "Wrong size on BPL_UIManager_C_MoonAge_close");
static_assert(offsetof(BPL_UIManager_C_MoonAge_close, InAnimation) == 0x000000, "Member 'BPL_UIManager_C_MoonAge_close::InAnimation' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_close, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_MoonAge_close::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_close, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MoonAge_close::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_close, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MoonAge_close::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_close, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MoonAge_close::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_close, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MoonAge_close::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_close, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MoonAge_close::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_close, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MoonAge_close::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_close, CallFunc_BPI_MoonAgeCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_MoonAge_close::CallFunc_BPI_MoonAgeCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_close, K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_MoonAge_close::K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_close, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MoonAge_close::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MoonAge_changeMoonAge
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MoonAge_changeMoonAge final
{
public:
	E_MOON_AGE                                    InTyoe;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39C7[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39C8[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_MoonAgeCtrl_outActor;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MoonAgeCtrl_C>    K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl;            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MoonAge_changeMoonAge) == 0x000008, "Wrong alignment on BPL_UIManager_C_MoonAge_changeMoonAge");
static_assert(sizeof(BPL_UIManager_C_MoonAge_changeMoonAge) == 0x000070, "Wrong size on BPL_UIManager_C_MoonAge_changeMoonAge");
static_assert(offsetof(BPL_UIManager_C_MoonAge_changeMoonAge, InTyoe) == 0x000000, "Member 'BPL_UIManager_C_MoonAge_changeMoonAge::InTyoe' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_changeMoonAge, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_MoonAge_changeMoonAge::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_changeMoonAge, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MoonAge_changeMoonAge::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_changeMoonAge, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MoonAge_changeMoonAge::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_changeMoonAge, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MoonAge_changeMoonAge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_changeMoonAge, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MoonAge_changeMoonAge::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_changeMoonAge, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MoonAge_changeMoonAge::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_changeMoonAge, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MoonAge_changeMoonAge::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_changeMoonAge, CallFunc_BPI_MoonAgeCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_MoonAge_changeMoonAge::CallFunc_BPI_MoonAgeCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_changeMoonAge, K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_MoonAge_changeMoonAge::K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_changeMoonAge, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MoonAge_changeMoonAge::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MoonAge_addMoonAge
// 0x0068 (0x0068 - 0x0000)
struct BPL_UIManager_C_MoonAge_addMoonAge final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39C9[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39CA[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_MoonAgeCtrl_outActor;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MoonAgeCtrl_C>    K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl;            // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MoonAge_addMoonAge) == 0x000008, "Wrong alignment on BPL_UIManager_C_MoonAge_addMoonAge");
static_assert(sizeof(BPL_UIManager_C_MoonAge_addMoonAge) == 0x000068, "Wrong size on BPL_UIManager_C_MoonAge_addMoonAge");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addMoonAge, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_MoonAge_addMoonAge::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addMoonAge, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'BPL_UIManager_C_MoonAge_addMoonAge::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addMoonAge, K2Node_DynamicCast_AsBPI_UIManager) == 0x000010, "Member 'BPL_UIManager_C_MoonAge_addMoonAge::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addMoonAge, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPL_UIManager_C_MoonAge_addMoonAge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addMoonAge, CallFunc_BPI_GetUIManager_UIManager) == 0x000028, "Member 'BPL_UIManager_C_MoonAge_addMoonAge::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addMoonAge, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000030, "Member 'BPL_UIManager_C_MoonAge_addMoonAge::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addMoonAge, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BPL_UIManager_C_MoonAge_addMoonAge::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addMoonAge, CallFunc_BPI_MoonAgeCtrl_outActor) == 0x000048, "Member 'BPL_UIManager_C_MoonAge_addMoonAge::CallFunc_BPI_MoonAgeCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addMoonAge, K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl) == 0x000050, "Member 'BPL_UIManager_C_MoonAge_addMoonAge::K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addMoonAge, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'BPL_UIManager_C_MoonAge_addMoonAge::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MoonAge_resetMoonAge
// 0x0068 (0x0068 - 0x0000)
struct BPL_UIManager_C_MoonAge_resetMoonAge final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39CB[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39CC[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_MoonAgeCtrl_outActor;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MoonAgeCtrl_C>    K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl;            // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MoonAge_resetMoonAge) == 0x000008, "Wrong alignment on BPL_UIManager_C_MoonAge_resetMoonAge");
static_assert(sizeof(BPL_UIManager_C_MoonAge_resetMoonAge) == 0x000068, "Wrong size on BPL_UIManager_C_MoonAge_resetMoonAge");
static_assert(offsetof(BPL_UIManager_C_MoonAge_resetMoonAge, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_MoonAge_resetMoonAge::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_resetMoonAge, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'BPL_UIManager_C_MoonAge_resetMoonAge::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_resetMoonAge, K2Node_DynamicCast_AsBPI_UIManager) == 0x000010, "Member 'BPL_UIManager_C_MoonAge_resetMoonAge::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_resetMoonAge, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPL_UIManager_C_MoonAge_resetMoonAge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_resetMoonAge, CallFunc_BPI_GetUIManager_UIManager) == 0x000028, "Member 'BPL_UIManager_C_MoonAge_resetMoonAge::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_resetMoonAge, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000030, "Member 'BPL_UIManager_C_MoonAge_resetMoonAge::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_resetMoonAge, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BPL_UIManager_C_MoonAge_resetMoonAge::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_resetMoonAge, CallFunc_BPI_MoonAgeCtrl_outActor) == 0x000048, "Member 'BPL_UIManager_C_MoonAge_resetMoonAge::CallFunc_BPI_MoonAgeCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_resetMoonAge, K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl) == 0x000050, "Member 'BPL_UIManager_C_MoonAge_resetMoonAge::K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_resetMoonAge, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'BPL_UIManager_C_MoonAge_resetMoonAge::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MoonAge_addPlayerMoveCount
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MoonAge_addPlayerMoveCount final
{
public:
	float                                         InDeltaSeconds;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39CD[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39CE[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39CF[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_MoonAgeCtrl_outActor;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MoonAgeCtrl_C>    K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl;            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MoonAge_addPlayerMoveCount) == 0x000008, "Wrong alignment on BPL_UIManager_C_MoonAge_addPlayerMoveCount");
static_assert(sizeof(BPL_UIManager_C_MoonAge_addPlayerMoveCount) == 0x000070, "Wrong size on BPL_UIManager_C_MoonAge_addPlayerMoveCount");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addPlayerMoveCount, InDeltaSeconds) == 0x000000, "Member 'BPL_UIManager_C_MoonAge_addPlayerMoveCount::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addPlayerMoveCount, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_MoonAge_addPlayerMoveCount::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addPlayerMoveCount, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MoonAge_addPlayerMoveCount::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addPlayerMoveCount, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MoonAge_addPlayerMoveCount::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addPlayerMoveCount, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MoonAge_addPlayerMoveCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addPlayerMoveCount, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MoonAge_addPlayerMoveCount::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addPlayerMoveCount, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MoonAge_addPlayerMoveCount::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addPlayerMoveCount, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MoonAge_addPlayerMoveCount::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addPlayerMoveCount, CallFunc_BPI_MoonAgeCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_MoonAge_addPlayerMoveCount::CallFunc_BPI_MoonAgeCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addPlayerMoveCount, K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_MoonAge_addPlayerMoveCount::K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addPlayerMoveCount, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MoonAge_addPlayerMoveCount::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MoonAge_addTokyoLargeMapPlayerMoveCount
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount final
{
public:
	float                                         InDeltaSeconds;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D1[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D2[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_MoonAgeCtrl_outActor;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MoonAgeCtrl_C>    K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl;            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount) == 0x000008, "Wrong alignment on BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount");
static_assert(sizeof(BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount) == 0x000070, "Wrong size on BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount, InDeltaSeconds) == 0x000000, "Member 'BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount::InDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount, CallFunc_BPI_MoonAgeCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount::CallFunc_BPI_MoonAgeCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount, K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount::K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MoonAge_addTokyoLargeMapPlayerMoveCount::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.CategoryWindow_open
// 0x0078 (0x0078 - 0x0000)
struct BPL_UIManager_C_CategoryWindow_open final
{
public:
	E_WIDGET_PRIO                                 WidgetPrio;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CATEGORY_PATTERN                            CategoryPattern;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CATEGORY_FRAMEIN_TYPE                       FrameInPattern;                                    // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D3[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DefaultCursorIdx;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSkipAnim;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D4[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D5[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D6[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_CategoryWindowCtrl_outActor;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CategoryWindowCtrl_C> K2Node_DynamicCast_AsBPI_Category_Window_Ctrl;     // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OpenCategoryWindow_ReturnVal;             // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_CategoryWindow_open) == 0x000008, "Wrong alignment on BPL_UIManager_C_CategoryWindow_open");
static_assert(sizeof(BPL_UIManager_C_CategoryWindow_open) == 0x000078, "Wrong size on BPL_UIManager_C_CategoryWindow_open");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_open, WidgetPrio) == 0x000000, "Member 'BPL_UIManager_C_CategoryWindow_open::WidgetPrio' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_open, CategoryPattern) == 0x000001, "Member 'BPL_UIManager_C_CategoryWindow_open::CategoryPattern' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_open, FrameInPattern) == 0x000002, "Member 'BPL_UIManager_C_CategoryWindow_open::FrameInPattern' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_open, DefaultCursorIdx) == 0x000004, "Member 'BPL_UIManager_C_CategoryWindow_open::DefaultCursorIdx' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_open, IsSkipAnim) == 0x000008, "Member 'BPL_UIManager_C_CategoryWindow_open::IsSkipAnim' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_open, __WorldContext) == 0x000010, "Member 'BPL_UIManager_C_CategoryWindow_open::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_open, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'BPL_UIManager_C_CategoryWindow_open::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_open, K2Node_DynamicCast_AsBPI_UIManager) == 0x000020, "Member 'BPL_UIManager_C_CategoryWindow_open::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_open, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BPL_UIManager_C_CategoryWindow_open::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_open, CallFunc_BPI_GetUIManager_UIManager) == 0x000038, "Member 'BPL_UIManager_C_CategoryWindow_open::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_open, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000040, "Member 'BPL_UIManager_C_CategoryWindow_open::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_open, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BPL_UIManager_C_CategoryWindow_open::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_open, CallFunc_BPI_CategoryWindowCtrl_outActor) == 0x000058, "Member 'BPL_UIManager_C_CategoryWindow_open::CallFunc_BPI_CategoryWindowCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_open, K2Node_DynamicCast_AsBPI_Category_Window_Ctrl) == 0x000060, "Member 'BPL_UIManager_C_CategoryWindow_open::K2Node_DynamicCast_AsBPI_Category_Window_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_open, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BPL_UIManager_C_CategoryWindow_open::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_open, CallFunc_OpenCategoryWindow_ReturnVal) == 0x000071, "Member 'BPL_UIManager_C_CategoryWindow_open::CallFunc_OpenCategoryWindow_ReturnVal' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.CategoryWindow_close
// 0x0078 (0x0078 - 0x0000)
struct BPL_UIManager_C_CategoryWindow_close final
{
public:
	bool                                          IsSkipAnim;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CommonUI_EventCtrl_C*               CallFunc_GetCommonUI_EventCtrl_outActor;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D8[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D9[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_CategoryWindowCtrl_outActor;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CategoryWindowCtrl_C> K2Node_DynamicCast_AsBPI_Category_Window_Ctrl;     // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CloseCategoryWindow_ReturnVal;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_CategoryWindow_close) == 0x000008, "Wrong alignment on BPL_UIManager_C_CategoryWindow_close");
static_assert(sizeof(BPL_UIManager_C_CategoryWindow_close) == 0x000078, "Wrong size on BPL_UIManager_C_CategoryWindow_close");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_close, IsSkipAnim) == 0x000000, "Member 'BPL_UIManager_C_CategoryWindow_close::IsSkipAnim' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_close, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_CategoryWindow_close::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_close, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_CategoryWindow_close::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_close, CallFunc_GetCommonUI_EventCtrl_outActor) == 0x000018, "Member 'BPL_UIManager_C_CategoryWindow_close::CallFunc_GetCommonUI_EventCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_close, K2Node_DynamicCast_AsBPI_UIManager) == 0x000020, "Member 'BPL_UIManager_C_CategoryWindow_close::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_close, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BPL_UIManager_C_CategoryWindow_close::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_close, CallFunc_BPI_GetUIManager_UIManager) == 0x000038, "Member 'BPL_UIManager_C_CategoryWindow_close::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_close, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000040, "Member 'BPL_UIManager_C_CategoryWindow_close::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_close, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BPL_UIManager_C_CategoryWindow_close::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_close, CallFunc_BPI_CategoryWindowCtrl_outActor) == 0x000058, "Member 'BPL_UIManager_C_CategoryWindow_close::CallFunc_BPI_CategoryWindowCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_close, K2Node_DynamicCast_AsBPI_Category_Window_Ctrl) == 0x000060, "Member 'BPL_UIManager_C_CategoryWindow_close::K2Node_DynamicCast_AsBPI_Category_Window_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_close, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BPL_UIManager_C_CategoryWindow_close::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_close, CallFunc_CloseCategoryWindow_ReturnVal) == 0x000071, "Member 'BPL_UIManager_C_CategoryWindow_close::CallFunc_CloseCategoryWindow_ReturnVal' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.CategoryWindow_getState
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_CategoryWindow_getState final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CATEGORY_UI_STATE                           State;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39DA[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39DB[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39DC[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_CategoryWindowCtrl_outActor;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CategoryWindowCtrl_C> K2Node_DynamicCast_AsBPI_Category_Window_Ctrl;     // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CATEGORY_UI_STATE                           CallFunc_GetCategoryWindowState_State;             // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_UIManager_C_CategoryWindow_getState) == 0x000008, "Wrong alignment on BPL_UIManager_C_CategoryWindow_getState");
static_assert(sizeof(BPL_UIManager_C_CategoryWindow_getState) == 0x000070, "Wrong size on BPL_UIManager_C_CategoryWindow_getState");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getState, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_CategoryWindow_getState::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getState, State) == 0x000008, "Member 'BPL_UIManager_C_CategoryWindow_getState::State' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getState, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_CategoryWindow_getState::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getState, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_CategoryWindow_getState::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getState, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_CategoryWindow_getState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getState, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_CategoryWindow_getState::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getState, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_CategoryWindow_getState::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getState, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_CategoryWindow_getState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getState, CallFunc_BPI_CategoryWindowCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_CategoryWindow_getState::CallFunc_BPI_CategoryWindowCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getState, K2Node_DynamicCast_AsBPI_Category_Window_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_CategoryWindow_getState::K2Node_DynamicCast_AsBPI_Category_Window_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getState, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_CategoryWindow_getState::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getState, CallFunc_GetCategoryWindowState_State) == 0x000069, "Member 'BPL_UIManager_C_CategoryWindow_getState::CallFunc_GetCategoryWindowState_State' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.CategoryWindow_moveCursor
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_CategoryWindow_moveCursor final
{
public:
	E_CATEGORY_CURSOR_MOVE_DIRECTION              MoveDirection;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39DD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39DE[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39DF[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_CategoryWindowCtrl_outActor;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CategoryWindowCtrl_C> K2Node_DynamicCast_AsBPI_Category_Window_Ctrl;     // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MoveCategoryCursor_ReturnVal;             // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_CategoryWindow_moveCursor) == 0x000008, "Wrong alignment on BPL_UIManager_C_CategoryWindow_moveCursor");
static_assert(sizeof(BPL_UIManager_C_CategoryWindow_moveCursor) == 0x000070, "Wrong size on BPL_UIManager_C_CategoryWindow_moveCursor");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_moveCursor, MoveDirection) == 0x000000, "Member 'BPL_UIManager_C_CategoryWindow_moveCursor::MoveDirection' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_moveCursor, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_CategoryWindow_moveCursor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_moveCursor, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_CategoryWindow_moveCursor::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_moveCursor, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_CategoryWindow_moveCursor::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_moveCursor, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_CategoryWindow_moveCursor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_moveCursor, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_CategoryWindow_moveCursor::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_moveCursor, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_CategoryWindow_moveCursor::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_moveCursor, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_CategoryWindow_moveCursor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_moveCursor, CallFunc_BPI_CategoryWindowCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_CategoryWindow_moveCursor::CallFunc_BPI_CategoryWindowCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_moveCursor, K2Node_DynamicCast_AsBPI_Category_Window_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_CategoryWindow_moveCursor::K2Node_DynamicCast_AsBPI_Category_Window_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_moveCursor, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_CategoryWindow_moveCursor::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_moveCursor, CallFunc_MoveCategoryCursor_ReturnVal) == 0x000069, "Member 'BPL_UIManager_C_CategoryWindow_moveCursor::CallFunc_MoveCategoryCursor_ReturnVal' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.CategoryWindow_setPosition
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_CategoryWindow_setPosition final
{
public:
	struct FVector2D                              Position;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39E0[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39E1[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_CategoryWindowCtrl_outActor;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CategoryWindowCtrl_C> K2Node_DynamicCast_AsBPI_Category_Window_Ctrl;     // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPosition_ReturnVal;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_CategoryWindow_setPosition) == 0x000008, "Wrong alignment on BPL_UIManager_C_CategoryWindow_setPosition");
static_assert(sizeof(BPL_UIManager_C_CategoryWindow_setPosition) == 0x000070, "Wrong size on BPL_UIManager_C_CategoryWindow_setPosition");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setPosition, Position) == 0x000000, "Member 'BPL_UIManager_C_CategoryWindow_setPosition::Position' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setPosition, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_CategoryWindow_setPosition::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setPosition, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_CategoryWindow_setPosition::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setPosition, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_CategoryWindow_setPosition::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setPosition, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_CategoryWindow_setPosition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setPosition, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_CategoryWindow_setPosition::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setPosition, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_CategoryWindow_setPosition::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setPosition, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_CategoryWindow_setPosition::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setPosition, CallFunc_BPI_CategoryWindowCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_CategoryWindow_setPosition::CallFunc_BPI_CategoryWindowCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setPosition, K2Node_DynamicCast_AsBPI_Category_Window_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_CategoryWindow_setPosition::K2Node_DynamicCast_AsBPI_Category_Window_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setPosition, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_CategoryWindow_setPosition::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setPosition, CallFunc_SetPosition_ReturnVal) == 0x000069, "Member 'BPL_UIManager_C_CategoryWindow_setPosition::CallFunc_SetPosition_ReturnVal' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.CategoryWindow_setCursorIndex
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_CategoryWindow_setCursorIndex final
{
public:
	int32                                         CursorIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39E3[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39E4[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_CategoryWindowCtrl_outActor;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CategoryWindowCtrl_C> K2Node_DynamicCast_AsBPI_Category_Window_Ctrl;     // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCursorIndex_ReturnVal;                 // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_CategoryWindow_setCursorIndex) == 0x000008, "Wrong alignment on BPL_UIManager_C_CategoryWindow_setCursorIndex");
static_assert(sizeof(BPL_UIManager_C_CategoryWindow_setCursorIndex) == 0x000070, "Wrong size on BPL_UIManager_C_CategoryWindow_setCursorIndex");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setCursorIndex, CursorIndex) == 0x000000, "Member 'BPL_UIManager_C_CategoryWindow_setCursorIndex::CursorIndex' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setCursorIndex, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_CategoryWindow_setCursorIndex::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setCursorIndex, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_CategoryWindow_setCursorIndex::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setCursorIndex, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_CategoryWindow_setCursorIndex::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setCursorIndex, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_CategoryWindow_setCursorIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setCursorIndex, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_CategoryWindow_setCursorIndex::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setCursorIndex, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_CategoryWindow_setCursorIndex::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setCursorIndex, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_CategoryWindow_setCursorIndex::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setCursorIndex, CallFunc_BPI_CategoryWindowCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_CategoryWindow_setCursorIndex::CallFunc_BPI_CategoryWindowCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setCursorIndex, K2Node_DynamicCast_AsBPI_Category_Window_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_CategoryWindow_setCursorIndex::K2Node_DynamicCast_AsBPI_Category_Window_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setCursorIndex, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_CategoryWindow_setCursorIndex::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setCursorIndex, CallFunc_SetCursorIndex_ReturnVal) == 0x000069, "Member 'BPL_UIManager_C_CategoryWindow_setCursorIndex::CallFunc_SetCursorIndex_ReturnVal' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.CategoryWindow_getCursorIndex
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_CategoryWindow_getCursorIndex final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CursorIndex;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E5[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39E6[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39E7[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_CategoryWindowCtrl_outActor;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CategoryWindowCtrl_C> K2Node_DynamicCast_AsBPI_Category_Window_Ctrl;     // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39E8[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCursorIndex_CursorIndex;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_UIManager_C_CategoryWindow_getCursorIndex) == 0x000008, "Wrong alignment on BPL_UIManager_C_CategoryWindow_getCursorIndex");
static_assert(sizeof(BPL_UIManager_C_CategoryWindow_getCursorIndex) == 0x000070, "Wrong size on BPL_UIManager_C_CategoryWindow_getCursorIndex");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getCursorIndex, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_CategoryWindow_getCursorIndex::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getCursorIndex, CursorIndex) == 0x000008, "Member 'BPL_UIManager_C_CategoryWindow_getCursorIndex::CursorIndex' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getCursorIndex, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_CategoryWindow_getCursorIndex::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getCursorIndex, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_CategoryWindow_getCursorIndex::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getCursorIndex, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_CategoryWindow_getCursorIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getCursorIndex, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_CategoryWindow_getCursorIndex::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getCursorIndex, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_CategoryWindow_getCursorIndex::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getCursorIndex, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_CategoryWindow_getCursorIndex::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getCursorIndex, CallFunc_BPI_CategoryWindowCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_CategoryWindow_getCursorIndex::CallFunc_BPI_CategoryWindowCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getCursorIndex, K2Node_DynamicCast_AsBPI_Category_Window_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_CategoryWindow_getCursorIndex::K2Node_DynamicCast_AsBPI_Category_Window_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getCursorIndex, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_CategoryWindow_getCursorIndex::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getCursorIndex, CallFunc_GetCursorIndex_CursorIndex) == 0x00006C, "Member 'BPL_UIManager_C_CategoryWindow_getCursorIndex::CallFunc_GetCursorIndex_CursorIndex' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.ScreenTransition_fadeIn
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_ScreenTransition_fadeIn final
{
public:
	E_ScreenTransitionFadeType                    InType;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39EA[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39EB[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_ScreeTransitionCtrl_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ScreenTransition_C> K2Node_DynamicCast_AsBPI_Screen_Transition;        // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_ScreenTransition_fadeIn) == 0x000008, "Wrong alignment on BPL_UIManager_C_ScreenTransition_fadeIn");
static_assert(sizeof(BPL_UIManager_C_ScreenTransition_fadeIn) == 0x000070, "Wrong size on BPL_UIManager_C_ScreenTransition_fadeIn");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_fadeIn, InType) == 0x000000, "Member 'BPL_UIManager_C_ScreenTransition_fadeIn::InType' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_fadeIn, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_ScreenTransition_fadeIn::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_fadeIn, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_ScreenTransition_fadeIn::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_fadeIn, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_ScreenTransition_fadeIn::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_fadeIn, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_ScreenTransition_fadeIn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_fadeIn, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_ScreenTransition_fadeIn::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_fadeIn, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_ScreenTransition_fadeIn::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_fadeIn, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_ScreenTransition_fadeIn::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_fadeIn, CallFunc_BPI_ScreeTransitionCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_ScreenTransition_fadeIn::CallFunc_BPI_ScreeTransitionCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_fadeIn, K2Node_DynamicCast_AsBPI_Screen_Transition) == 0x000058, "Member 'BPL_UIManager_C_ScreenTransition_fadeIn::K2Node_DynamicCast_AsBPI_Screen_Transition' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_fadeIn, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_ScreenTransition_fadeIn::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.ScreenTransition_fadeOut
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_ScreenTransition_fadeOut final
{
public:
	E_ScreenTransitionFadeType                    InType;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39EC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39ED[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39EE[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_ScreeTransitionCtrl_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ScreenTransition_C> K2Node_DynamicCast_AsBPI_Screen_Transition;        // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_ScreenTransition_fadeOut) == 0x000008, "Wrong alignment on BPL_UIManager_C_ScreenTransition_fadeOut");
static_assert(sizeof(BPL_UIManager_C_ScreenTransition_fadeOut) == 0x000070, "Wrong size on BPL_UIManager_C_ScreenTransition_fadeOut");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_fadeOut, InType) == 0x000000, "Member 'BPL_UIManager_C_ScreenTransition_fadeOut::InType' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_fadeOut, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_ScreenTransition_fadeOut::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_fadeOut, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_ScreenTransition_fadeOut::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_fadeOut, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_ScreenTransition_fadeOut::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_fadeOut, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_ScreenTransition_fadeOut::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_fadeOut, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_ScreenTransition_fadeOut::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_fadeOut, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_ScreenTransition_fadeOut::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_fadeOut, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_ScreenTransition_fadeOut::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_fadeOut, CallFunc_BPI_ScreeTransitionCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_ScreenTransition_fadeOut::CallFunc_BPI_ScreeTransitionCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_fadeOut, K2Node_DynamicCast_AsBPI_Screen_Transition) == 0x000058, "Member 'BPL_UIManager_C_ScreenTransition_fadeOut::K2Node_DynamicCast_AsBPI_Screen_Transition' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_fadeOut, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_ScreenTransition_fadeOut::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.LocationWindow_open
// 0x00C8 (0x00C8 - 0x0000)
struct BPL_UIManager_C_LocationWindow_open final
{
public:
	E_LOCATION_WINDOW_TYPE                        InType;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayAnim;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39EF[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapUICtrl_MapUICtrl;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapUICtrl_C>      K2Node_DynamicCast_AsBPI_Map_UICtrl;               // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F0[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F1[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_BPI_GetCurAreaName_AreaName;              // 0x0050(0x0018)()
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F2[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_LocationWindowCtrl_OutActor;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F3[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_LocationWinCtrl_C> K2Node_DynamicCast_AsBPI_Location_Win_Ctrl;        // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F4[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_LocationWinCtrl_C> K2Node_DynamicCast_AsBPI_Location_Win_Ctrl_1;      // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_LocationWindow_open) == 0x000008, "Wrong alignment on BPL_UIManager_C_LocationWindow_open");
static_assert(sizeof(BPL_UIManager_C_LocationWindow_open) == 0x0000C8, "Wrong size on BPL_UIManager_C_LocationWindow_open");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_open, InType) == 0x000000, "Member 'BPL_UIManager_C_LocationWindow_open::InType' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_open, PlayAnim) == 0x000001, "Member 'BPL_UIManager_C_LocationWindow_open::PlayAnim' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_open, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_LocationWindow_open::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_open, CallFunc_GetMapUICtrl_MapUICtrl) == 0x000010, "Member 'BPL_UIManager_C_LocationWindow_open::CallFunc_GetMapUICtrl_MapUICtrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_open, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'BPL_UIManager_C_LocationWindow_open::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_open, K2Node_DynamicCast_AsBPI_Map_UICtrl) == 0x000020, "Member 'BPL_UIManager_C_LocationWindow_open::K2Node_DynamicCast_AsBPI_Map_UICtrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_open, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BPL_UIManager_C_LocationWindow_open::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_open, K2Node_DynamicCast_AsBPI_UIManager) == 0x000038, "Member 'BPL_UIManager_C_LocationWindow_open::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_open, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_LocationWindow_open::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_open, CallFunc_BPI_GetCurAreaName_AreaName) == 0x000050, "Member 'BPL_UIManager_C_LocationWindow_open::CallFunc_BPI_GetCurAreaName_AreaName' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_open, CallFunc_BPI_GetUIManager_UIManager) == 0x000068, "Member 'BPL_UIManager_C_LocationWindow_open::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_open, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000070, "Member 'BPL_UIManager_C_LocationWindow_open::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_open, K2Node_DynamicCast_bSuccess_2) == 0x000080, "Member 'BPL_UIManager_C_LocationWindow_open::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_open, CallFunc_BPI_LocationWindowCtrl_OutActor) == 0x000088, "Member 'BPL_UIManager_C_LocationWindow_open::CallFunc_BPI_LocationWindowCtrl_OutActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_open, K2Node_SwitchEnum_CmpSuccess) == 0x000090, "Member 'BPL_UIManager_C_LocationWindow_open::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_open, K2Node_DynamicCast_AsBPI_Location_Win_Ctrl) == 0x000098, "Member 'BPL_UIManager_C_LocationWindow_open::K2Node_DynamicCast_AsBPI_Location_Win_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_open, K2Node_DynamicCast_bSuccess_3) == 0x0000A8, "Member 'BPL_UIManager_C_LocationWindow_open::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_open, K2Node_DynamicCast_AsBPI_Location_Win_Ctrl_1) == 0x0000B0, "Member 'BPL_UIManager_C_LocationWindow_open::K2Node_DynamicCast_AsBPI_Location_Win_Ctrl_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_open, K2Node_DynamicCast_bSuccess_4) == 0x0000C0, "Member 'BPL_UIManager_C_LocationWindow_open::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.LocationWindow_close
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_LocationWindow_close final
{
public:
	bool                                          PlayAnim;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F6[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F7[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_LocationWindowCtrl_OutActor;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_LocationWinCtrl_C> K2Node_DynamicCast_AsBPI_Location_Win_Ctrl;        // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_LocationWindow_close) == 0x000008, "Wrong alignment on BPL_UIManager_C_LocationWindow_close");
static_assert(sizeof(BPL_UIManager_C_LocationWindow_close) == 0x000070, "Wrong size on BPL_UIManager_C_LocationWindow_close");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_close, PlayAnim) == 0x000000, "Member 'BPL_UIManager_C_LocationWindow_close::PlayAnim' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_close, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_LocationWindow_close::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_close, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_LocationWindow_close::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_close, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_LocationWindow_close::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_close, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_LocationWindow_close::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_close, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_LocationWindow_close::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_close, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_LocationWindow_close::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_close, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_LocationWindow_close::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_close, CallFunc_BPI_LocationWindowCtrl_OutActor) == 0x000050, "Member 'BPL_UIManager_C_LocationWindow_close::CallFunc_BPI_LocationWindowCtrl_OutActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_close, K2Node_DynamicCast_AsBPI_Location_Win_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_LocationWindow_close::K2Node_DynamicCast_AsBPI_Location_Win_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_close, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_LocationWindow_close::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.LocationWindow_setFacilityName
// 0x0080 (0x0080 - 0x0000)
struct BPL_UIManager_C_LocationWindow_setFacilityName final
{
public:
	class FText                                   InName;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F8[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F9[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_LocationWindowCtrl_OutActor;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_LocationWinCtrl_C> K2Node_DynamicCast_AsBPI_Location_Win_Ctrl;        // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_LocationWindow_setFacilityName) == 0x000008, "Wrong alignment on BPL_UIManager_C_LocationWindow_setFacilityName");
static_assert(sizeof(BPL_UIManager_C_LocationWindow_setFacilityName) == 0x000080, "Wrong size on BPL_UIManager_C_LocationWindow_setFacilityName");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setFacilityName, InName) == 0x000000, "Member 'BPL_UIManager_C_LocationWindow_setFacilityName::InName' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setFacilityName, __WorldContext) == 0x000018, "Member 'BPL_UIManager_C_LocationWindow_setFacilityName::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setFacilityName, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'BPL_UIManager_C_LocationWindow_setFacilityName::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setFacilityName, K2Node_DynamicCast_AsBPI_UIManager) == 0x000028, "Member 'BPL_UIManager_C_LocationWindow_setFacilityName::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setFacilityName, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BPL_UIManager_C_LocationWindow_setFacilityName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setFacilityName, CallFunc_BPI_GetUIManager_UIManager) == 0x000040, "Member 'BPL_UIManager_C_LocationWindow_setFacilityName::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setFacilityName, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000048, "Member 'BPL_UIManager_C_LocationWindow_setFacilityName::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setFacilityName, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BPL_UIManager_C_LocationWindow_setFacilityName::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setFacilityName, CallFunc_BPI_LocationWindowCtrl_OutActor) == 0x000060, "Member 'BPL_UIManager_C_LocationWindow_setFacilityName::CallFunc_BPI_LocationWindowCtrl_OutActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setFacilityName, K2Node_DynamicCast_AsBPI_Location_Win_Ctrl) == 0x000068, "Member 'BPL_UIManager_C_LocationWindow_setFacilityName::K2Node_DynamicCast_AsBPI_Location_Win_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setFacilityName, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'BPL_UIManager_C_LocationWindow_setFacilityName::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.ScreenTransition_isFadeFinish
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_ScreenTransition_isFadeFinish final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OutValue;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39FA[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39FB[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39FC[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_ScreeTransitionCtrl_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ScreenTransition_C> K2Node_DynamicCast_AsBPI_Screen_Transition;        // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isFadeFinish_outValue;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_ScreenTransition_isFadeFinish) == 0x000008, "Wrong alignment on BPL_UIManager_C_ScreenTransition_isFadeFinish");
static_assert(sizeof(BPL_UIManager_C_ScreenTransition_isFadeFinish) == 0x000070, "Wrong size on BPL_UIManager_C_ScreenTransition_isFadeFinish");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_isFadeFinish, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_ScreenTransition_isFadeFinish::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_isFadeFinish, OutValue) == 0x000008, "Member 'BPL_UIManager_C_ScreenTransition_isFadeFinish::OutValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_isFadeFinish, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_ScreenTransition_isFadeFinish::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_isFadeFinish, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_ScreenTransition_isFadeFinish::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_isFadeFinish, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_ScreenTransition_isFadeFinish::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_isFadeFinish, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_ScreenTransition_isFadeFinish::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_isFadeFinish, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_ScreenTransition_isFadeFinish::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_isFadeFinish, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_ScreenTransition_isFadeFinish::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_isFadeFinish, CallFunc_BPI_ScreeTransitionCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_ScreenTransition_isFadeFinish::CallFunc_BPI_ScreeTransitionCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_isFadeFinish, K2Node_DynamicCast_AsBPI_Screen_Transition) == 0x000058, "Member 'BPL_UIManager_C_ScreenTransition_isFadeFinish::K2Node_DynamicCast_AsBPI_Screen_Transition' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_isFadeFinish, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_ScreenTransition_isFadeFinish::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_isFadeFinish, CallFunc_isFadeFinish_outValue) == 0x000069, "Member 'BPL_UIManager_C_ScreenTransition_isFadeFinish::CallFunc_isFadeFinish_outValue' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.LocationWindow_setTokyoLargeMapName
// 0x0080 (0x0080 - 0x0000)
struct BPL_UIManager_C_LocationWindow_setTokyoLargeMapName final
{
public:
	class FText                                   InName;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39FD[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39FE[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_LocationWindowCtrl_OutActor;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_LocationWinCtrl_C> K2Node_DynamicCast_AsBPI_Location_Win_Ctrl;        // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_LocationWindow_setTokyoLargeMapName) == 0x000008, "Wrong alignment on BPL_UIManager_C_LocationWindow_setTokyoLargeMapName");
static_assert(sizeof(BPL_UIManager_C_LocationWindow_setTokyoLargeMapName) == 0x000080, "Wrong size on BPL_UIManager_C_LocationWindow_setTokyoLargeMapName");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setTokyoLargeMapName, InName) == 0x000000, "Member 'BPL_UIManager_C_LocationWindow_setTokyoLargeMapName::InName' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setTokyoLargeMapName, __WorldContext) == 0x000018, "Member 'BPL_UIManager_C_LocationWindow_setTokyoLargeMapName::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setTokyoLargeMapName, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'BPL_UIManager_C_LocationWindow_setTokyoLargeMapName::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setTokyoLargeMapName, K2Node_DynamicCast_AsBPI_UIManager) == 0x000028, "Member 'BPL_UIManager_C_LocationWindow_setTokyoLargeMapName::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setTokyoLargeMapName, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BPL_UIManager_C_LocationWindow_setTokyoLargeMapName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setTokyoLargeMapName, CallFunc_BPI_GetUIManager_UIManager) == 0x000040, "Member 'BPL_UIManager_C_LocationWindow_setTokyoLargeMapName::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setTokyoLargeMapName, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000048, "Member 'BPL_UIManager_C_LocationWindow_setTokyoLargeMapName::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setTokyoLargeMapName, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BPL_UIManager_C_LocationWindow_setTokyoLargeMapName::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setTokyoLargeMapName, CallFunc_BPI_LocationWindowCtrl_OutActor) == 0x000060, "Member 'BPL_UIManager_C_LocationWindow_setTokyoLargeMapName::CallFunc_BPI_LocationWindowCtrl_OutActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setTokyoLargeMapName, K2Node_DynamicCast_AsBPI_Location_Win_Ctrl) == 0x000068, "Member 'BPL_UIManager_C_LocationWindow_setTokyoLargeMapName::K2Node_DynamicCast_AsBPI_Location_Win_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setTokyoLargeMapName, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'BPL_UIManager_C_LocationWindow_setTokyoLargeMapName::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.ScreenTransition_getFinishByFrame
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_ScreenTransition_getFinishByFrame final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutValue;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39FF[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A00[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A01[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_ScreeTransitionCtrl_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ScreenTransition_C> K2Node_DynamicCast_AsBPI_Screen_Transition;        // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A02[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_getFinishByFrame_outValue;                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_UIManager_C_ScreenTransition_getFinishByFrame) == 0x000008, "Wrong alignment on BPL_UIManager_C_ScreenTransition_getFinishByFrame");
static_assert(sizeof(BPL_UIManager_C_ScreenTransition_getFinishByFrame) == 0x000070, "Wrong size on BPL_UIManager_C_ScreenTransition_getFinishByFrame");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_getFinishByFrame, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_ScreenTransition_getFinishByFrame::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_getFinishByFrame, OutValue) == 0x000008, "Member 'BPL_UIManager_C_ScreenTransition_getFinishByFrame::OutValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_getFinishByFrame, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_ScreenTransition_getFinishByFrame::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_getFinishByFrame, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_ScreenTransition_getFinishByFrame::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_getFinishByFrame, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_ScreenTransition_getFinishByFrame::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_getFinishByFrame, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_ScreenTransition_getFinishByFrame::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_getFinishByFrame, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_ScreenTransition_getFinishByFrame::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_getFinishByFrame, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_ScreenTransition_getFinishByFrame::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_getFinishByFrame, CallFunc_BPI_ScreeTransitionCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_ScreenTransition_getFinishByFrame::CallFunc_BPI_ScreeTransitionCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_getFinishByFrame, K2Node_DynamicCast_AsBPI_Screen_Transition) == 0x000058, "Member 'BPL_UIManager_C_ScreenTransition_getFinishByFrame::K2Node_DynamicCast_AsBPI_Screen_Transition' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_getFinishByFrame, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_ScreenTransition_getFinishByFrame::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_getFinishByFrame, CallFunc_getFinishByFrame_outValue) == 0x00006C, "Member 'BPL_UIManager_C_ScreenTransition_getFinishByFrame::CallFunc_getFinishByFrame_outValue' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MiitsuWindow_OpenWindow
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MiitsuWindow_OpenWindow final
{
public:
	bool                                          NotPlayAnim;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsUnderMakkaWin;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          WithOpenTotalWindow;                               // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A03[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A04[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A05[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMiitsuWindowCtrl_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MiitsuWindowCtrl_C> K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl;       // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OpenMiitsuPointWindow_ReturnVal;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MiitsuWindow_OpenWindow) == 0x000008, "Wrong alignment on BPL_UIManager_C_MiitsuWindow_OpenWindow");
static_assert(sizeof(BPL_UIManager_C_MiitsuWindow_OpenWindow) == 0x000070, "Wrong size on BPL_UIManager_C_MiitsuWindow_OpenWindow");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenWindow, NotPlayAnim) == 0x000000, "Member 'BPL_UIManager_C_MiitsuWindow_OpenWindow::NotPlayAnim' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenWindow, IsUnderMakkaWin) == 0x000001, "Member 'BPL_UIManager_C_MiitsuWindow_OpenWindow::IsUnderMakkaWin' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenWindow, WithOpenTotalWindow) == 0x000002, "Member 'BPL_UIManager_C_MiitsuWindow_OpenWindow::WithOpenTotalWindow' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenWindow, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_MiitsuWindow_OpenWindow::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenWindow, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MiitsuWindow_OpenWindow::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenWindow, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MiitsuWindow_OpenWindow::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenWindow, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MiitsuWindow_OpenWindow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenWindow, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MiitsuWindow_OpenWindow::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenWindow, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MiitsuWindow_OpenWindow::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenWindow, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MiitsuWindow_OpenWindow::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenWindow, CallFunc_BPI_GetMiitsuWindowCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_MiitsuWindow_OpenWindow::CallFunc_BPI_GetMiitsuWindowCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenWindow, K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_MiitsuWindow_OpenWindow::K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenWindow, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MiitsuWindow_OpenWindow::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenWindow, CallFunc_OpenMiitsuPointWindow_ReturnVal) == 0x000069, "Member 'BPL_UIManager_C_MiitsuWindow_OpenWindow::CallFunc_OpenMiitsuPointWindow_ReturnVal' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MiitsuWindow_OpenTotalWindow
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MiitsuWindow_OpenTotalWindow final
{
public:
	bool                                          NotPlayAnim;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsUnderMakkaWin;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A06[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A07[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A08[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMiitsuWindowCtrl_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MiitsuWindowCtrl_C> K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl;       // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OpenMiitsuTotalWindow_ReturnVal;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MiitsuWindow_OpenTotalWindow) == 0x000008, "Wrong alignment on BPL_UIManager_C_MiitsuWindow_OpenTotalWindow");
static_assert(sizeof(BPL_UIManager_C_MiitsuWindow_OpenTotalWindow) == 0x000070, "Wrong size on BPL_UIManager_C_MiitsuWindow_OpenTotalWindow");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenTotalWindow, NotPlayAnim) == 0x000000, "Member 'BPL_UIManager_C_MiitsuWindow_OpenTotalWindow::NotPlayAnim' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenTotalWindow, IsUnderMakkaWin) == 0x000001, "Member 'BPL_UIManager_C_MiitsuWindow_OpenTotalWindow::IsUnderMakkaWin' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenTotalWindow, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_MiitsuWindow_OpenTotalWindow::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenTotalWindow, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MiitsuWindow_OpenTotalWindow::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenTotalWindow, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MiitsuWindow_OpenTotalWindow::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenTotalWindow, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MiitsuWindow_OpenTotalWindow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenTotalWindow, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MiitsuWindow_OpenTotalWindow::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenTotalWindow, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MiitsuWindow_OpenTotalWindow::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenTotalWindow, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MiitsuWindow_OpenTotalWindow::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenTotalWindow, CallFunc_BPI_GetMiitsuWindowCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_MiitsuWindow_OpenTotalWindow::CallFunc_BPI_GetMiitsuWindowCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenTotalWindow, K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_MiitsuWindow_OpenTotalWindow::K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenTotalWindow, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MiitsuWindow_OpenTotalWindow::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_OpenTotalWindow, CallFunc_OpenMiitsuTotalWindow_ReturnVal) == 0x000069, "Member 'BPL_UIManager_C_MiitsuWindow_OpenTotalWindow::CallFunc_OpenMiitsuTotalWindow_ReturnVal' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MiitsuWindow_CloseWindow
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MiitsuWindow_CloseWindow final
{
public:
	bool                                          NotPlayAnim;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A09[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A0A[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A0B[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMiitsuWindowCtrl_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MiitsuWindowCtrl_C> K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl;       // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CloseMiitsuPointWindow_ReturnVal;         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MiitsuWindow_CloseWindow) == 0x000008, "Wrong alignment on BPL_UIManager_C_MiitsuWindow_CloseWindow");
static_assert(sizeof(BPL_UIManager_C_MiitsuWindow_CloseWindow) == 0x000070, "Wrong size on BPL_UIManager_C_MiitsuWindow_CloseWindow");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_CloseWindow, NotPlayAnim) == 0x000000, "Member 'BPL_UIManager_C_MiitsuWindow_CloseWindow::NotPlayAnim' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_CloseWindow, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_MiitsuWindow_CloseWindow::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_CloseWindow, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MiitsuWindow_CloseWindow::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_CloseWindow, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MiitsuWindow_CloseWindow::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_CloseWindow, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MiitsuWindow_CloseWindow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_CloseWindow, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MiitsuWindow_CloseWindow::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_CloseWindow, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MiitsuWindow_CloseWindow::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_CloseWindow, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MiitsuWindow_CloseWindow::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_CloseWindow, CallFunc_BPI_GetMiitsuWindowCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_MiitsuWindow_CloseWindow::CallFunc_BPI_GetMiitsuWindowCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_CloseWindow, K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_MiitsuWindow_CloseWindow::K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_CloseWindow, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MiitsuWindow_CloseWindow::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_CloseWindow, CallFunc_CloseMiitsuPointWindow_ReturnVal) == 0x000069, "Member 'BPL_UIManager_C_MiitsuWindow_CloseWindow::CallFunc_CloseMiitsuPointWindow_ReturnVal' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MiitsuWindow_CloseTotalWinidow
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow final
{
public:
	bool                                          NotPlayAnim;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A0C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A0D[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A0E[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMiitsuWindowCtrl_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MiitsuWindowCtrl_C> K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl;       // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CloseMiitsuTotalWinidow_ReturnVal;        // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow) == 0x000008, "Wrong alignment on BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow");
static_assert(sizeof(BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow) == 0x000070, "Wrong size on BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow, NotPlayAnim) == 0x000000, "Member 'BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow::NotPlayAnim' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow, CallFunc_BPI_GetMiitsuWindowCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow::CallFunc_BPI_GetMiitsuWindowCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow, K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow::K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow, CallFunc_CloseMiitsuTotalWinidow_ReturnVal) == 0x000069, "Member 'BPL_UIManager_C_MiitsuWindow_CloseTotalWinidow::CallFunc_CloseMiitsuTotalWinidow_ReturnVal' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MiitsuWindow_SetPoint
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MiitsuWindow_SetPoint final
{
public:
	int32                                         NewNum;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayAnim;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PlaySE;                                            // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A0F[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A10[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A11[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMiitsuWindowCtrl_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MiitsuWindowCtrl_C> K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl;       // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetMiitsuPoint_ReturnVal;                 // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MiitsuWindow_SetPoint) == 0x000008, "Wrong alignment on BPL_UIManager_C_MiitsuWindow_SetPoint");
static_assert(sizeof(BPL_UIManager_C_MiitsuWindow_SetPoint) == 0x000070, "Wrong size on BPL_UIManager_C_MiitsuWindow_SetPoint");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetPoint, NewNum) == 0x000000, "Member 'BPL_UIManager_C_MiitsuWindow_SetPoint::NewNum' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetPoint, PlayAnim) == 0x000004, "Member 'BPL_UIManager_C_MiitsuWindow_SetPoint::PlayAnim' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetPoint, PlaySE) == 0x000005, "Member 'BPL_UIManager_C_MiitsuWindow_SetPoint::PlaySE' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetPoint, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_MiitsuWindow_SetPoint::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetPoint, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MiitsuWindow_SetPoint::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetPoint, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MiitsuWindow_SetPoint::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetPoint, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MiitsuWindow_SetPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetPoint, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MiitsuWindow_SetPoint::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetPoint, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MiitsuWindow_SetPoint::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetPoint, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MiitsuWindow_SetPoint::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetPoint, CallFunc_BPI_GetMiitsuWindowCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_MiitsuWindow_SetPoint::CallFunc_BPI_GetMiitsuWindowCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetPoint, K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_MiitsuWindow_SetPoint::K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetPoint, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MiitsuWindow_SetPoint::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetPoint, CallFunc_SetMiitsuPoint_ReturnVal) == 0x000069, "Member 'BPL_UIManager_C_MiitsuWindow_SetPoint::CallFunc_SetMiitsuPoint_ReturnVal' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MiitsuWindow_SetTotal
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MiitsuWindow_SetTotal final
{
public:
	int32                                         NewNum;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayAnim;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A12[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A13[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A14[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMiitsuWindowCtrl_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MiitsuWindowCtrl_C> K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl;       // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetMiitsuTotal_ReturnVal;                 // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MiitsuWindow_SetTotal) == 0x000008, "Wrong alignment on BPL_UIManager_C_MiitsuWindow_SetTotal");
static_assert(sizeof(BPL_UIManager_C_MiitsuWindow_SetTotal) == 0x000070, "Wrong size on BPL_UIManager_C_MiitsuWindow_SetTotal");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetTotal, NewNum) == 0x000000, "Member 'BPL_UIManager_C_MiitsuWindow_SetTotal::NewNum' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetTotal, PlayAnim) == 0x000004, "Member 'BPL_UIManager_C_MiitsuWindow_SetTotal::PlayAnim' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetTotal, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_MiitsuWindow_SetTotal::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetTotal, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MiitsuWindow_SetTotal::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetTotal, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MiitsuWindow_SetTotal::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetTotal, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MiitsuWindow_SetTotal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetTotal, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MiitsuWindow_SetTotal::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetTotal, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MiitsuWindow_SetTotal::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetTotal, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MiitsuWindow_SetTotal::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetTotal, CallFunc_BPI_GetMiitsuWindowCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_MiitsuWindow_SetTotal::CallFunc_BPI_GetMiitsuWindowCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetTotal, K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_MiitsuWindow_SetTotal::K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetTotal, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MiitsuWindow_SetTotal::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SetTotal, CallFunc_SetMiitsuTotal_ReturnVal) == 0x000069, "Member 'BPL_UIManager_C_MiitsuWindow_SetTotal::CallFunc_SetMiitsuTotal_ReturnVal' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MiitsuWindow_AddPoint
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MiitsuWindow_AddPoint final
{
public:
	int32                                         AddNum;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayAnim;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PlaySE;                                            // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A15[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A16[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A17[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMiitsuWindowCtrl_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MiitsuWindowCtrl_C> K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl;       // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddMiitsuPoint_ReturnVal;                 // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MiitsuWindow_AddPoint) == 0x000008, "Wrong alignment on BPL_UIManager_C_MiitsuWindow_AddPoint");
static_assert(sizeof(BPL_UIManager_C_MiitsuWindow_AddPoint) == 0x000070, "Wrong size on BPL_UIManager_C_MiitsuWindow_AddPoint");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddPoint, AddNum) == 0x000000, "Member 'BPL_UIManager_C_MiitsuWindow_AddPoint::AddNum' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddPoint, PlayAnim) == 0x000004, "Member 'BPL_UIManager_C_MiitsuWindow_AddPoint::PlayAnim' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddPoint, PlaySE) == 0x000005, "Member 'BPL_UIManager_C_MiitsuWindow_AddPoint::PlaySE' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddPoint, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_MiitsuWindow_AddPoint::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddPoint, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MiitsuWindow_AddPoint::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddPoint, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MiitsuWindow_AddPoint::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddPoint, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MiitsuWindow_AddPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddPoint, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MiitsuWindow_AddPoint::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddPoint, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MiitsuWindow_AddPoint::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddPoint, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MiitsuWindow_AddPoint::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddPoint, CallFunc_BPI_GetMiitsuWindowCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_MiitsuWindow_AddPoint::CallFunc_BPI_GetMiitsuWindowCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddPoint, K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_MiitsuWindow_AddPoint::K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddPoint, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MiitsuWindow_AddPoint::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddPoint, CallFunc_AddMiitsuPoint_ReturnVal) == 0x000069, "Member 'BPL_UIManager_C_MiitsuWindow_AddPoint::CallFunc_AddMiitsuPoint_ReturnVal' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MiitsuWindow_AddTotal
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MiitsuWindow_AddTotal final
{
public:
	int32                                         AddNum;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayAnim;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A18[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A19[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1A[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMiitsuWindowCtrl_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MiitsuWindowCtrl_C> K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl;       // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddMIitsuTotal_ReturnVal;                 // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MiitsuWindow_AddTotal) == 0x000008, "Wrong alignment on BPL_UIManager_C_MiitsuWindow_AddTotal");
static_assert(sizeof(BPL_UIManager_C_MiitsuWindow_AddTotal) == 0x000070, "Wrong size on BPL_UIManager_C_MiitsuWindow_AddTotal");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddTotal, AddNum) == 0x000000, "Member 'BPL_UIManager_C_MiitsuWindow_AddTotal::AddNum' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddTotal, PlayAnim) == 0x000004, "Member 'BPL_UIManager_C_MiitsuWindow_AddTotal::PlayAnim' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddTotal, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_MiitsuWindow_AddTotal::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddTotal, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MiitsuWindow_AddTotal::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddTotal, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MiitsuWindow_AddTotal::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddTotal, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MiitsuWindow_AddTotal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddTotal, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MiitsuWindow_AddTotal::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddTotal, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MiitsuWindow_AddTotal::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddTotal, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MiitsuWindow_AddTotal::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddTotal, CallFunc_BPI_GetMiitsuWindowCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_MiitsuWindow_AddTotal::CallFunc_BPI_GetMiitsuWindowCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddTotal, K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_MiitsuWindow_AddTotal::K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddTotal, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MiitsuWindow_AddTotal::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_AddTotal, CallFunc_AddMIitsuTotal_ReturnVal) == 0x000069, "Member 'BPL_UIManager_C_MiitsuWindow_AddTotal::CallFunc_AddMIitsuTotal_ReturnVal' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MiitsuWindow_SkipPointAnim
// 0x0068 (0x0068 - 0x0000)
struct BPL_UIManager_C_MiitsuWindow_SkipPointAnim final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1B[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1C[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMiitsuWindowCtrl_outActor;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MiitsuWindowCtrl_C> K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl;       // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SkipMiitsuPointAnim_ReturnVal;            // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MiitsuWindow_SkipPointAnim) == 0x000008, "Wrong alignment on BPL_UIManager_C_MiitsuWindow_SkipPointAnim");
static_assert(sizeof(BPL_UIManager_C_MiitsuWindow_SkipPointAnim) == 0x000068, "Wrong size on BPL_UIManager_C_MiitsuWindow_SkipPointAnim");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SkipPointAnim, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_MiitsuWindow_SkipPointAnim::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SkipPointAnim, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'BPL_UIManager_C_MiitsuWindow_SkipPointAnim::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SkipPointAnim, K2Node_DynamicCast_AsBPI_UIManager) == 0x000010, "Member 'BPL_UIManager_C_MiitsuWindow_SkipPointAnim::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SkipPointAnim, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPL_UIManager_C_MiitsuWindow_SkipPointAnim::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SkipPointAnim, CallFunc_BPI_GetUIManager_UIManager) == 0x000028, "Member 'BPL_UIManager_C_MiitsuWindow_SkipPointAnim::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SkipPointAnim, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000030, "Member 'BPL_UIManager_C_MiitsuWindow_SkipPointAnim::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SkipPointAnim, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BPL_UIManager_C_MiitsuWindow_SkipPointAnim::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SkipPointAnim, CallFunc_BPI_GetMiitsuWindowCtrl_outActor) == 0x000048, "Member 'BPL_UIManager_C_MiitsuWindow_SkipPointAnim::CallFunc_BPI_GetMiitsuWindowCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SkipPointAnim, K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl) == 0x000050, "Member 'BPL_UIManager_C_MiitsuWindow_SkipPointAnim::K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SkipPointAnim, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'BPL_UIManager_C_MiitsuWindow_SkipPointAnim::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_SkipPointAnim, CallFunc_SkipMiitsuPointAnim_ReturnVal) == 0x000061, "Member 'BPL_UIManager_C_MiitsuWindow_SkipPointAnim::CallFunc_SkipMiitsuPointAnim_ReturnVal' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MiitsuWindow_IsPlayingPointAnim
// 0x0088 (0x0088 - 0x0000)
struct BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlaying;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1D[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1E[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1F[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMiitsuWindowCtrl_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MiitsuWindowCtrl_C> K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl;       // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A20[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MiitsuWindowCtrl_C> K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl_1;     // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingMiitsuTotalAnim_IsPlaying;       // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingMiisuPointAnim_IsPlaying;        // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim) == 0x000008, "Wrong alignment on BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim");
static_assert(sizeof(BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim) == 0x000088, "Wrong size on BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim, IsPlaying) == 0x000008, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim::IsPlaying' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim, CallFunc_BPI_GetMiitsuWindowCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim::CallFunc_BPI_GetMiitsuWindowCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim, K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim::K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim, K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl_1) == 0x000070, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim::K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim, K2Node_DynamicCast_bSuccess_3) == 0x000080, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim, CallFunc_IsPlayingMiitsuTotalAnim_IsPlaying) == 0x000081, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim::CallFunc_IsPlayingMiitsuTotalAnim_IsPlaying' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim, CallFunc_IsPlayingMiisuPointAnim_IsPlaying) == 0x000082, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim::CallFunc_IsPlayingMiisuPointAnim_IsPlaying' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim, CallFunc_BooleanOR_ReturnValue) == 0x000083, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingPointAnim::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MiitsuWindow_IsShow
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MiitsuWindow_IsShow final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShow;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A21[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A22[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A23[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMiitsuWindowCtrl_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MiitsuWindowCtrl_C> K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl;       // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShowMiitsuWindow_IsShow;                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MiitsuWindow_IsShow) == 0x000008, "Wrong alignment on BPL_UIManager_C_MiitsuWindow_IsShow");
static_assert(sizeof(BPL_UIManager_C_MiitsuWindow_IsShow) == 0x000070, "Wrong size on BPL_UIManager_C_MiitsuWindow_IsShow");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsShow, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_MiitsuWindow_IsShow::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsShow, IsShow) == 0x000008, "Member 'BPL_UIManager_C_MiitsuWindow_IsShow::IsShow' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsShow, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MiitsuWindow_IsShow::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsShow, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MiitsuWindow_IsShow::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsShow, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MiitsuWindow_IsShow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsShow, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MiitsuWindow_IsShow::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsShow, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MiitsuWindow_IsShow::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsShow, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MiitsuWindow_IsShow::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsShow, CallFunc_BPI_GetMiitsuWindowCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_MiitsuWindow_IsShow::CallFunc_BPI_GetMiitsuWindowCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsShow, K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_MiitsuWindow_IsShow::K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsShow, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MiitsuWindow_IsShow::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsShow, CallFunc_IsShowMiitsuWindow_IsShow) == 0x000069, "Member 'BPL_UIManager_C_MiitsuWindow_IsShow::CallFunc_IsShowMiitsuWindow_IsShow' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.ScreenTransition_getFadeState
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_ScreenTransition_getFadeState final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_FADE_STATE                               OutType;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A24[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A25[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A26[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_ScreeTransitionCtrl_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ScreenTransition_C> K2Node_DynamicCast_AsBPI_Screen_Transition;        // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_UI_FADE_STATE                               CallFunc_getFadeState_outType;                     // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_UIManager_C_ScreenTransition_getFadeState) == 0x000008, "Wrong alignment on BPL_UIManager_C_ScreenTransition_getFadeState");
static_assert(sizeof(BPL_UIManager_C_ScreenTransition_getFadeState) == 0x000070, "Wrong size on BPL_UIManager_C_ScreenTransition_getFadeState");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_getFadeState, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_ScreenTransition_getFadeState::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_getFadeState, OutType) == 0x000008, "Member 'BPL_UIManager_C_ScreenTransition_getFadeState::OutType' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_getFadeState, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_ScreenTransition_getFadeState::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_getFadeState, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_ScreenTransition_getFadeState::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_getFadeState, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_ScreenTransition_getFadeState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_getFadeState, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_ScreenTransition_getFadeState::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_getFadeState, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_ScreenTransition_getFadeState::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_getFadeState, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_ScreenTransition_getFadeState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_getFadeState, CallFunc_BPI_ScreeTransitionCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_ScreenTransition_getFadeState::CallFunc_BPI_ScreeTransitionCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_getFadeState, K2Node_DynamicCast_AsBPI_Screen_Transition) == 0x000058, "Member 'BPL_UIManager_C_ScreenTransition_getFadeState::K2Node_DynamicCast_AsBPI_Screen_Transition' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_getFadeState, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_ScreenTransition_getFadeState::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_getFadeState, CallFunc_getFadeState_outType) == 0x000069, "Member 'BPL_UIManager_C_ScreenTransition_getFadeState::CallFunc_getFadeState_outType' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.ScreenTransition_screenCover
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_ScreenTransition_screenCover final
{
public:
	E_ScreenTransitionFadeType                    InType;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A27[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A28[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A29[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_ScreeTransitionCtrl_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ScreenTransition_C> K2Node_DynamicCast_AsBPI_Screen_Transition;        // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_ScreenTransition_screenCover) == 0x000008, "Wrong alignment on BPL_UIManager_C_ScreenTransition_screenCover");
static_assert(sizeof(BPL_UIManager_C_ScreenTransition_screenCover) == 0x000070, "Wrong size on BPL_UIManager_C_ScreenTransition_screenCover");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_screenCover, InType) == 0x000000, "Member 'BPL_UIManager_C_ScreenTransition_screenCover::InType' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_screenCover, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_ScreenTransition_screenCover::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_screenCover, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_ScreenTransition_screenCover::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_screenCover, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_ScreenTransition_screenCover::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_screenCover, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_ScreenTransition_screenCover::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_screenCover, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_ScreenTransition_screenCover::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_screenCover, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_ScreenTransition_screenCover::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_screenCover, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_ScreenTransition_screenCover::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_screenCover, CallFunc_BPI_ScreeTransitionCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_ScreenTransition_screenCover::CallFunc_BPI_ScreeTransitionCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_screenCover, K2Node_DynamicCast_AsBPI_Screen_Transition) == 0x000058, "Member 'BPL_UIManager_C_ScreenTransition_screenCover::K2Node_DynamicCast_AsBPI_Screen_Transition' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_screenCover, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_ScreenTransition_screenCover::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.ScreenTransition_screenClear
// 0x0068 (0x0068 - 0x0000)
struct BPL_UIManager_C_ScreenTransition_screenClear final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A2A[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A2B[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_ScreeTransitionCtrl_outActor;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ScreenTransition_C> K2Node_DynamicCast_AsBPI_Screen_Transition;        // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_ScreenTransition_screenClear) == 0x000008, "Wrong alignment on BPL_UIManager_C_ScreenTransition_screenClear");
static_assert(sizeof(BPL_UIManager_C_ScreenTransition_screenClear) == 0x000068, "Wrong size on BPL_UIManager_C_ScreenTransition_screenClear");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_screenClear, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_ScreenTransition_screenClear::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_screenClear, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'BPL_UIManager_C_ScreenTransition_screenClear::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_screenClear, K2Node_DynamicCast_AsBPI_UIManager) == 0x000010, "Member 'BPL_UIManager_C_ScreenTransition_screenClear::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_screenClear, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPL_UIManager_C_ScreenTransition_screenClear::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_screenClear, CallFunc_BPI_GetUIManager_UIManager) == 0x000028, "Member 'BPL_UIManager_C_ScreenTransition_screenClear::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_screenClear, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000030, "Member 'BPL_UIManager_C_ScreenTransition_screenClear::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_screenClear, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BPL_UIManager_C_ScreenTransition_screenClear::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_screenClear, CallFunc_BPI_ScreeTransitionCtrl_outActor) == 0x000048, "Member 'BPL_UIManager_C_ScreenTransition_screenClear::CallFunc_BPI_ScreeTransitionCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_screenClear, K2Node_DynamicCast_AsBPI_Screen_Transition) == 0x000050, "Member 'BPL_UIManager_C_ScreenTransition_screenClear::K2Node_DynamicCast_AsBPI_Screen_Transition' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_ScreenTransition_screenClear, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'BPL_UIManager_C_ScreenTransition_screenClear::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.LocationWindow_setNormalColor
// 0x0068 (0x0068 - 0x0000)
struct BPL_UIManager_C_LocationWindow_setNormalColor final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A2C[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A2D[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_LocationWindowCtrl_OutActor;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_LocationWinCtrl_C> K2Node_DynamicCast_AsBPI_Location_Win_Ctrl;        // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_LocationWindow_setNormalColor) == 0x000008, "Wrong alignment on BPL_UIManager_C_LocationWindow_setNormalColor");
static_assert(sizeof(BPL_UIManager_C_LocationWindow_setNormalColor) == 0x000068, "Wrong size on BPL_UIManager_C_LocationWindow_setNormalColor");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setNormalColor, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_LocationWindow_setNormalColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setNormalColor, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'BPL_UIManager_C_LocationWindow_setNormalColor::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setNormalColor, K2Node_DynamicCast_AsBPI_UIManager) == 0x000010, "Member 'BPL_UIManager_C_LocationWindow_setNormalColor::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setNormalColor, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPL_UIManager_C_LocationWindow_setNormalColor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setNormalColor, CallFunc_BPI_GetUIManager_UIManager) == 0x000028, "Member 'BPL_UIManager_C_LocationWindow_setNormalColor::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setNormalColor, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000030, "Member 'BPL_UIManager_C_LocationWindow_setNormalColor::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setNormalColor, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BPL_UIManager_C_LocationWindow_setNormalColor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setNormalColor, CallFunc_BPI_LocationWindowCtrl_OutActor) == 0x000048, "Member 'BPL_UIManager_C_LocationWindow_setNormalColor::CallFunc_BPI_LocationWindowCtrl_OutActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setNormalColor, K2Node_DynamicCast_AsBPI_Location_Win_Ctrl) == 0x000050, "Member 'BPL_UIManager_C_LocationWindow_setNormalColor::K2Node_DynamicCast_AsBPI_Location_Win_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setNormalColor, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'BPL_UIManager_C_LocationWindow_setNormalColor::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.LocationWindow_setOtherColor
// 0x0068 (0x0068 - 0x0000)
struct BPL_UIManager_C_LocationWindow_setOtherColor final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A2E[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A2F[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_LocationWindowCtrl_OutActor;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_LocationWinCtrl_C> K2Node_DynamicCast_AsBPI_Location_Win_Ctrl;        // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_LocationWindow_setOtherColor) == 0x000008, "Wrong alignment on BPL_UIManager_C_LocationWindow_setOtherColor");
static_assert(sizeof(BPL_UIManager_C_LocationWindow_setOtherColor) == 0x000068, "Wrong size on BPL_UIManager_C_LocationWindow_setOtherColor");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setOtherColor, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_LocationWindow_setOtherColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setOtherColor, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'BPL_UIManager_C_LocationWindow_setOtherColor::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setOtherColor, K2Node_DynamicCast_AsBPI_UIManager) == 0x000010, "Member 'BPL_UIManager_C_LocationWindow_setOtherColor::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setOtherColor, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPL_UIManager_C_LocationWindow_setOtherColor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setOtherColor, CallFunc_BPI_GetUIManager_UIManager) == 0x000028, "Member 'BPL_UIManager_C_LocationWindow_setOtherColor::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setOtherColor, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000030, "Member 'BPL_UIManager_C_LocationWindow_setOtherColor::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setOtherColor, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BPL_UIManager_C_LocationWindow_setOtherColor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setOtherColor, CallFunc_BPI_LocationWindowCtrl_OutActor) == 0x000048, "Member 'BPL_UIManager_C_LocationWindow_setOtherColor::CallFunc_BPI_LocationWindowCtrl_OutActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setOtherColor, K2Node_DynamicCast_AsBPI_Location_Win_Ctrl) == 0x000050, "Member 'BPL_UIManager_C_LocationWindow_setOtherColor::K2Node_DynamicCast_AsBPI_Location_Win_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setOtherColor, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'BPL_UIManager_C_LocationWindow_setOtherColor::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.LocationWindow_setMapName
// 0x0080 (0x0080 - 0x0000)
struct BPL_UIManager_C_LocationWindow_setMapName final
{
public:
	class FText                                   InName;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A30[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A31[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_LocationWindowCtrl_OutActor;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_LocationWinCtrl_C> K2Node_DynamicCast_AsBPI_Location_Win_Ctrl;        // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_LocationWindow_setMapName) == 0x000008, "Wrong alignment on BPL_UIManager_C_LocationWindow_setMapName");
static_assert(sizeof(BPL_UIManager_C_LocationWindow_setMapName) == 0x000080, "Wrong size on BPL_UIManager_C_LocationWindow_setMapName");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setMapName, InName) == 0x000000, "Member 'BPL_UIManager_C_LocationWindow_setMapName::InName' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setMapName, __WorldContext) == 0x000018, "Member 'BPL_UIManager_C_LocationWindow_setMapName::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setMapName, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'BPL_UIManager_C_LocationWindow_setMapName::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setMapName, K2Node_DynamicCast_AsBPI_UIManager) == 0x000028, "Member 'BPL_UIManager_C_LocationWindow_setMapName::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setMapName, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BPL_UIManager_C_LocationWindow_setMapName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setMapName, CallFunc_BPI_GetUIManager_UIManager) == 0x000040, "Member 'BPL_UIManager_C_LocationWindow_setMapName::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setMapName, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000048, "Member 'BPL_UIManager_C_LocationWindow_setMapName::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setMapName, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BPL_UIManager_C_LocationWindow_setMapName::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setMapName, CallFunc_BPI_LocationWindowCtrl_OutActor) == 0x000060, "Member 'BPL_UIManager_C_LocationWindow_setMapName::CallFunc_BPI_LocationWindowCtrl_OutActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setMapName, K2Node_DynamicCast_AsBPI_Location_Win_Ctrl) == 0x000068, "Member 'BPL_UIManager_C_LocationWindow_setMapName::K2Node_DynamicCast_AsBPI_Location_Win_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setMapName, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'BPL_UIManager_C_LocationWindow_setMapName::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.LocationWindow_setAutomapName
// 0x0080 (0x0080 - 0x0000)
struct BPL_UIManager_C_LocationWindow_setAutomapName final
{
public:
	class FText                                   InName;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A32[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A33[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_LocationWindowCtrl_OutActor;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_LocationWinCtrl_C> K2Node_DynamicCast_AsBPI_Location_Win_Ctrl;        // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_LocationWindow_setAutomapName) == 0x000008, "Wrong alignment on BPL_UIManager_C_LocationWindow_setAutomapName");
static_assert(sizeof(BPL_UIManager_C_LocationWindow_setAutomapName) == 0x000080, "Wrong size on BPL_UIManager_C_LocationWindow_setAutomapName");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setAutomapName, InName) == 0x000000, "Member 'BPL_UIManager_C_LocationWindow_setAutomapName::InName' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setAutomapName, __WorldContext) == 0x000018, "Member 'BPL_UIManager_C_LocationWindow_setAutomapName::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setAutomapName, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'BPL_UIManager_C_LocationWindow_setAutomapName::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setAutomapName, K2Node_DynamicCast_AsBPI_UIManager) == 0x000028, "Member 'BPL_UIManager_C_LocationWindow_setAutomapName::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setAutomapName, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BPL_UIManager_C_LocationWindow_setAutomapName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setAutomapName, CallFunc_BPI_GetUIManager_UIManager) == 0x000040, "Member 'BPL_UIManager_C_LocationWindow_setAutomapName::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setAutomapName, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000048, "Member 'BPL_UIManager_C_LocationWindow_setAutomapName::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setAutomapName, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BPL_UIManager_C_LocationWindow_setAutomapName::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setAutomapName, CallFunc_BPI_LocationWindowCtrl_OutActor) == 0x000060, "Member 'BPL_UIManager_C_LocationWindow_setAutomapName::CallFunc_BPI_LocationWindowCtrl_OutActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setAutomapName, K2Node_DynamicCast_AsBPI_Location_Win_Ctrl) == 0x000068, "Member 'BPL_UIManager_C_LocationWindow_setAutomapName::K2Node_DynamicCast_AsBPI_Location_Win_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_setAutomapName, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'BPL_UIManager_C_LocationWindow_setAutomapName::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.LocationWindow_getState
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_LocationWindow_getState final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_LOCATION_WINDOW_STATE                       State;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A34[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A35[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A36[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_LocationWindowCtrl_OutActor;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_LocationWinCtrl_C> K2Node_DynamicCast_AsBPI_Location_Win_Ctrl;        // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_LOCATION_WINDOW_STATE                       CallFunc_BPI_getState_State;                       // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_UIManager_C_LocationWindow_getState) == 0x000008, "Wrong alignment on BPL_UIManager_C_LocationWindow_getState");
static_assert(sizeof(BPL_UIManager_C_LocationWindow_getState) == 0x000070, "Wrong size on BPL_UIManager_C_LocationWindow_getState");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_getState, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_LocationWindow_getState::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_getState, State) == 0x000008, "Member 'BPL_UIManager_C_LocationWindow_getState::State' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_getState, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_LocationWindow_getState::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_getState, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_LocationWindow_getState::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_getState, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_LocationWindow_getState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_getState, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_LocationWindow_getState::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_getState, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_LocationWindow_getState::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_getState, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_LocationWindow_getState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_getState, CallFunc_BPI_LocationWindowCtrl_OutActor) == 0x000050, "Member 'BPL_UIManager_C_LocationWindow_getState::CallFunc_BPI_LocationWindowCtrl_OutActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_getState, K2Node_DynamicCast_AsBPI_Location_Win_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_LocationWindow_getState::K2Node_DynamicCast_AsBPI_Location_Win_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_getState, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_LocationWindow_getState::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_LocationWindow_getState, CallFunc_BPI_getState_State) == 0x000069, "Member 'BPL_UIManager_C_LocationWindow_getState::CallFunc_BPI_getState_State' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MiitsuWindow_IsPlayingFrameIn
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlaying;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A37[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A38[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A39[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMiitsuWindowCtrl_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MiitsuWindowCtrl_C> K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl;       // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingFrameIn_IsPlaying;               // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn) == 0x000008, "Wrong alignment on BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn");
static_assert(sizeof(BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn) == 0x000070, "Wrong size on BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn, IsPlaying) == 0x000008, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn::IsPlaying' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn, CallFunc_BPI_GetMiitsuWindowCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn::CallFunc_BPI_GetMiitsuWindowCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn, K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn::K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn, CallFunc_IsPlayingFrameIn_IsPlaying) == 0x000069, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingFrameIn::CallFunc_IsPlayingFrameIn_IsPlaying' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MiitsuWindow_IsPlayingFramOut
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlaying;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A3A[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A3B[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A3C[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMiitsuWindowCtrl_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MiitsuWindowCtrl_C> K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl;       // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingFrameOut_IsPlaying;              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut) == 0x000008, "Wrong alignment on BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut");
static_assert(sizeof(BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut) == 0x000070, "Wrong size on BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut, IsPlaying) == 0x000008, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut::IsPlaying' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut, CallFunc_BPI_GetMiitsuWindowCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut::CallFunc_BPI_GetMiitsuWindowCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut, K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut::K2Node_DynamicCast_AsBPI_Miitsu_Window_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut, CallFunc_IsPlayingFrameOut_IsPlaying) == 0x000069, "Member 'BPL_UIManager_C_MiitsuWindow_IsPlayingFramOut::CallFunc_IsPlayingFrameOut_IsPlaying' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.CategoryWindow_setNewIconVisibility
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_CategoryWindow_setNewIconVisibility final
{
public:
	int32                                         CursorIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsVisible;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A3D[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A3E[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A3F[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_CategoryWindowCtrl_outActor;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CategoryWindowCtrl_C> K2Node_DynamicCast_AsBPI_Category_Window_Ctrl;     // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetNewIconVisibility_ReturnVal;           // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_CategoryWindow_setNewIconVisibility) == 0x000008, "Wrong alignment on BPL_UIManager_C_CategoryWindow_setNewIconVisibility");
static_assert(sizeof(BPL_UIManager_C_CategoryWindow_setNewIconVisibility) == 0x000070, "Wrong size on BPL_UIManager_C_CategoryWindow_setNewIconVisibility");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setNewIconVisibility, CursorIndex) == 0x000000, "Member 'BPL_UIManager_C_CategoryWindow_setNewIconVisibility::CursorIndex' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setNewIconVisibility, IsVisible) == 0x000004, "Member 'BPL_UIManager_C_CategoryWindow_setNewIconVisibility::IsVisible' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setNewIconVisibility, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_CategoryWindow_setNewIconVisibility::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setNewIconVisibility, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_CategoryWindow_setNewIconVisibility::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setNewIconVisibility, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_CategoryWindow_setNewIconVisibility::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setNewIconVisibility, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_CategoryWindow_setNewIconVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setNewIconVisibility, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_CategoryWindow_setNewIconVisibility::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setNewIconVisibility, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_CategoryWindow_setNewIconVisibility::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setNewIconVisibility, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_CategoryWindow_setNewIconVisibility::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setNewIconVisibility, CallFunc_BPI_CategoryWindowCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_CategoryWindow_setNewIconVisibility::CallFunc_BPI_CategoryWindowCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setNewIconVisibility, K2Node_DynamicCast_AsBPI_Category_Window_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_CategoryWindow_setNewIconVisibility::K2Node_DynamicCast_AsBPI_Category_Window_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setNewIconVisibility, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_CategoryWindow_setNewIconVisibility::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_setNewIconVisibility, CallFunc_SetNewIconVisibility_ReturnVal) == 0x000069, "Member 'BPL_UIManager_C_CategoryWindow_setNewIconVisibility::CallFunc_SetNewIconVisibility_ReturnVal' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.CategoryWindow_alignNewIconAnim
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_CategoryWindow_alignNewIconAnim final
{
public:
	float                                         AnimFrame;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A40[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A41[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A42[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_CategoryWindowCtrl_outActor;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CategoryWindowCtrl_C> K2Node_DynamicCast_AsBPI_Category_Window_Ctrl;     // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AlignNewIconAnim_ReturnVal;               // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_CategoryWindow_alignNewIconAnim) == 0x000008, "Wrong alignment on BPL_UIManager_C_CategoryWindow_alignNewIconAnim");
static_assert(sizeof(BPL_UIManager_C_CategoryWindow_alignNewIconAnim) == 0x000070, "Wrong size on BPL_UIManager_C_CategoryWindow_alignNewIconAnim");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_alignNewIconAnim, AnimFrame) == 0x000000, "Member 'BPL_UIManager_C_CategoryWindow_alignNewIconAnim::AnimFrame' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_alignNewIconAnim, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_CategoryWindow_alignNewIconAnim::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_alignNewIconAnim, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_CategoryWindow_alignNewIconAnim::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_alignNewIconAnim, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_CategoryWindow_alignNewIconAnim::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_alignNewIconAnim, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_CategoryWindow_alignNewIconAnim::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_alignNewIconAnim, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_CategoryWindow_alignNewIconAnim::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_alignNewIconAnim, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_CategoryWindow_alignNewIconAnim::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_alignNewIconAnim, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_CategoryWindow_alignNewIconAnim::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_alignNewIconAnim, CallFunc_BPI_CategoryWindowCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_CategoryWindow_alignNewIconAnim::CallFunc_BPI_CategoryWindowCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_alignNewIconAnim, K2Node_DynamicCast_AsBPI_Category_Window_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_CategoryWindow_alignNewIconAnim::K2Node_DynamicCast_AsBPI_Category_Window_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_alignNewIconAnim, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_CategoryWindow_alignNewIconAnim::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_alignNewIconAnim, CallFunc_AlignNewIconAnim_ReturnVal) == 0x000069, "Member 'BPL_UIManager_C_CategoryWindow_alignNewIconAnim::CallFunc_AlignNewIconAnim_ReturnVal' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.CategoryWindow_getNewIconAnimFrame
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Frame;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A43[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A44[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A45[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_CategoryWindowCtrl_outActor;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CategoryWindowCtrl_C> K2Node_DynamicCast_AsBPI_Category_Window_Ctrl;     // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A46[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetNewIconAnimFrame_Frame;                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame) == 0x000008, "Wrong alignment on BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame");
static_assert(sizeof(BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame) == 0x000070, "Wrong size on BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame, Frame) == 0x000008, "Member 'BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame::Frame' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame, CallFunc_BPI_CategoryWindowCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame::CallFunc_BPI_CategoryWindowCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame, K2Node_DynamicCast_AsBPI_Category_Window_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame::K2Node_DynamicCast_AsBPI_Category_Window_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame, CallFunc_GetNewIconAnimFrame_Frame) == 0x00006C, "Member 'BPL_UIManager_C_CategoryWindow_getNewIconAnimFrame::CallFunc_GetNewIconAnimFrame_Frame' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MakkaWindow2_OpenMoney
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MakkaWindow2_OpenMoney final
{
public:
	bool                                          IsSkipAnimation;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsSetPartyMakka;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          WithOpenTotalWindow;                               // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A47[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A48[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A49[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMakkaWindowCtrl2_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MakkaWindowCtrl2_C> K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2;      // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_OpenMoneyWindow2_NotUse;              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MakkaWindow2_OpenMoney) == 0x000008, "Wrong alignment on BPL_UIManager_C_MakkaWindow2_OpenMoney");
static_assert(sizeof(BPL_UIManager_C_MakkaWindow2_OpenMoney) == 0x000070, "Wrong size on BPL_UIManager_C_MakkaWindow2_OpenMoney");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenMoney, IsSkipAnimation) == 0x000000, "Member 'BPL_UIManager_C_MakkaWindow2_OpenMoney::IsSkipAnimation' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenMoney, IsSetPartyMakka) == 0x000001, "Member 'BPL_UIManager_C_MakkaWindow2_OpenMoney::IsSetPartyMakka' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenMoney, WithOpenTotalWindow) == 0x000002, "Member 'BPL_UIManager_C_MakkaWindow2_OpenMoney::WithOpenTotalWindow' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenMoney, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_MakkaWindow2_OpenMoney::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenMoney, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MakkaWindow2_OpenMoney::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenMoney, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MakkaWindow2_OpenMoney::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenMoney, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MakkaWindow2_OpenMoney::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenMoney, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MakkaWindow2_OpenMoney::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenMoney, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MakkaWindow2_OpenMoney::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenMoney, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MakkaWindow2_OpenMoney::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenMoney, CallFunc_BPI_GetMakkaWindowCtrl2_outActor) == 0x000050, "Member 'BPL_UIManager_C_MakkaWindow2_OpenMoney::CallFunc_BPI_GetMakkaWindowCtrl2_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenMoney, K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2) == 0x000058, "Member 'BPL_UIManager_C_MakkaWindow2_OpenMoney::K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenMoney, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MakkaWindow2_OpenMoney::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenMoney, CallFunc_BPI_OpenMoneyWindow2_NotUse) == 0x000069, "Member 'BPL_UIManager_C_MakkaWindow2_OpenMoney::CallFunc_BPI_OpenMoneyWindow2_NotUse' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MakkaWindow2_OpenTotal
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MakkaWindow2_OpenTotal final
{
public:
	bool                                          IsSkipAnimation;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A4A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A4B[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A4C[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMakkaWindowCtrl2_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MakkaWindowCtrl2_C> K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2;      // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_OpenTotalWIndow2_NotUse;              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MakkaWindow2_OpenTotal) == 0x000008, "Wrong alignment on BPL_UIManager_C_MakkaWindow2_OpenTotal");
static_assert(sizeof(BPL_UIManager_C_MakkaWindow2_OpenTotal) == 0x000070, "Wrong size on BPL_UIManager_C_MakkaWindow2_OpenTotal");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenTotal, IsSkipAnimation) == 0x000000, "Member 'BPL_UIManager_C_MakkaWindow2_OpenTotal::IsSkipAnimation' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenTotal, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_MakkaWindow2_OpenTotal::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenTotal, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MakkaWindow2_OpenTotal::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenTotal, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MakkaWindow2_OpenTotal::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenTotal, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MakkaWindow2_OpenTotal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenTotal, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MakkaWindow2_OpenTotal::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenTotal, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MakkaWindow2_OpenTotal::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenTotal, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MakkaWindow2_OpenTotal::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenTotal, CallFunc_BPI_GetMakkaWindowCtrl2_outActor) == 0x000050, "Member 'BPL_UIManager_C_MakkaWindow2_OpenTotal::CallFunc_BPI_GetMakkaWindowCtrl2_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenTotal, K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2) == 0x000058, "Member 'BPL_UIManager_C_MakkaWindow2_OpenTotal::K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenTotal, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MakkaWindow2_OpenTotal::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenTotal, CallFunc_BPI_OpenTotalWIndow2_NotUse) == 0x000069, "Member 'BPL_UIManager_C_MakkaWindow2_OpenTotal::CallFunc_BPI_OpenTotalWIndow2_NotUse' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MakkaWindow2_OpenCost
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MakkaWindow2_OpenCost final
{
public:
	bool                                          IsSkipAnimation;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A4D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A4E[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A4F[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMakkaWindowCtrl2_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MakkaWindowCtrl2_C> K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2;      // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_OpenCostWIndow2_NotUse;               // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MakkaWindow2_OpenCost) == 0x000008, "Wrong alignment on BPL_UIManager_C_MakkaWindow2_OpenCost");
static_assert(sizeof(BPL_UIManager_C_MakkaWindow2_OpenCost) == 0x000070, "Wrong size on BPL_UIManager_C_MakkaWindow2_OpenCost");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenCost, IsSkipAnimation) == 0x000000, "Member 'BPL_UIManager_C_MakkaWindow2_OpenCost::IsSkipAnimation' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenCost, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_MakkaWindow2_OpenCost::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenCost, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MakkaWindow2_OpenCost::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenCost, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MakkaWindow2_OpenCost::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenCost, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MakkaWindow2_OpenCost::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenCost, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MakkaWindow2_OpenCost::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenCost, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MakkaWindow2_OpenCost::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenCost, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MakkaWindow2_OpenCost::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenCost, CallFunc_BPI_GetMakkaWindowCtrl2_outActor) == 0x000050, "Member 'BPL_UIManager_C_MakkaWindow2_OpenCost::CallFunc_BPI_GetMakkaWindowCtrl2_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenCost, K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2) == 0x000058, "Member 'BPL_UIManager_C_MakkaWindow2_OpenCost::K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenCost, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MakkaWindow2_OpenCost::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_OpenCost, CallFunc_BPI_OpenCostWIndow2_NotUse) == 0x000069, "Member 'BPL_UIManager_C_MakkaWindow2_OpenCost::CallFunc_BPI_OpenCostWIndow2_NotUse' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MakkaWindow2_CloseMoney
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MakkaWindow2_CloseMoney final
{
public:
	bool                                          IsSkipAnimation;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A50[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A51[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A52[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMakkaWindowCtrl2_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MakkaWindowCtrl2_C> K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2;      // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CloseMoneyWindow2_NotUse;             // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MakkaWindow2_CloseMoney) == 0x000008, "Wrong alignment on BPL_UIManager_C_MakkaWindow2_CloseMoney");
static_assert(sizeof(BPL_UIManager_C_MakkaWindow2_CloseMoney) == 0x000070, "Wrong size on BPL_UIManager_C_MakkaWindow2_CloseMoney");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseMoney, IsSkipAnimation) == 0x000000, "Member 'BPL_UIManager_C_MakkaWindow2_CloseMoney::IsSkipAnimation' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseMoney, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_MakkaWindow2_CloseMoney::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseMoney, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MakkaWindow2_CloseMoney::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseMoney, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MakkaWindow2_CloseMoney::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseMoney, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MakkaWindow2_CloseMoney::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseMoney, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MakkaWindow2_CloseMoney::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseMoney, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MakkaWindow2_CloseMoney::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseMoney, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MakkaWindow2_CloseMoney::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseMoney, CallFunc_BPI_GetMakkaWindowCtrl2_outActor) == 0x000050, "Member 'BPL_UIManager_C_MakkaWindow2_CloseMoney::CallFunc_BPI_GetMakkaWindowCtrl2_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseMoney, K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2) == 0x000058, "Member 'BPL_UIManager_C_MakkaWindow2_CloseMoney::K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseMoney, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MakkaWindow2_CloseMoney::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseMoney, CallFunc_BPI_CloseMoneyWindow2_NotUse) == 0x000069, "Member 'BPL_UIManager_C_MakkaWindow2_CloseMoney::CallFunc_BPI_CloseMoneyWindow2_NotUse' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MakkaWindow2_CloseTotal
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MakkaWindow2_CloseTotal final
{
public:
	bool                                          IsSkipAnimation;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A53[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A54[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A55[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMakkaWindowCtrl2_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MakkaWindowCtrl2_C> K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2;      // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CloseTotalWindow2_NotUse;             // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MakkaWindow2_CloseTotal) == 0x000008, "Wrong alignment on BPL_UIManager_C_MakkaWindow2_CloseTotal");
static_assert(sizeof(BPL_UIManager_C_MakkaWindow2_CloseTotal) == 0x000070, "Wrong size on BPL_UIManager_C_MakkaWindow2_CloseTotal");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseTotal, IsSkipAnimation) == 0x000000, "Member 'BPL_UIManager_C_MakkaWindow2_CloseTotal::IsSkipAnimation' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseTotal, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_MakkaWindow2_CloseTotal::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseTotal, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MakkaWindow2_CloseTotal::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseTotal, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MakkaWindow2_CloseTotal::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseTotal, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MakkaWindow2_CloseTotal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseTotal, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MakkaWindow2_CloseTotal::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseTotal, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MakkaWindow2_CloseTotal::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseTotal, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MakkaWindow2_CloseTotal::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseTotal, CallFunc_BPI_GetMakkaWindowCtrl2_outActor) == 0x000050, "Member 'BPL_UIManager_C_MakkaWindow2_CloseTotal::CallFunc_BPI_GetMakkaWindowCtrl2_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseTotal, K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2) == 0x000058, "Member 'BPL_UIManager_C_MakkaWindow2_CloseTotal::K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseTotal, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MakkaWindow2_CloseTotal::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseTotal, CallFunc_BPI_CloseTotalWindow2_NotUse) == 0x000069, "Member 'BPL_UIManager_C_MakkaWindow2_CloseTotal::CallFunc_BPI_CloseTotalWindow2_NotUse' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MakkaWindow2_CloseCost
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MakkaWindow2_CloseCost final
{
public:
	bool                                          IsSkipAnimation;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A56[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A57[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A58[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMakkaWindowCtrl2_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MakkaWindowCtrl2_C> K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2;      // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CloseCostWindow2_NotUse;              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MakkaWindow2_CloseCost) == 0x000008, "Wrong alignment on BPL_UIManager_C_MakkaWindow2_CloseCost");
static_assert(sizeof(BPL_UIManager_C_MakkaWindow2_CloseCost) == 0x000070, "Wrong size on BPL_UIManager_C_MakkaWindow2_CloseCost");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseCost, IsSkipAnimation) == 0x000000, "Member 'BPL_UIManager_C_MakkaWindow2_CloseCost::IsSkipAnimation' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseCost, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_MakkaWindow2_CloseCost::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseCost, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MakkaWindow2_CloseCost::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseCost, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MakkaWindow2_CloseCost::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseCost, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MakkaWindow2_CloseCost::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseCost, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MakkaWindow2_CloseCost::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseCost, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MakkaWindow2_CloseCost::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseCost, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MakkaWindow2_CloseCost::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseCost, CallFunc_BPI_GetMakkaWindowCtrl2_outActor) == 0x000050, "Member 'BPL_UIManager_C_MakkaWindow2_CloseCost::CallFunc_BPI_GetMakkaWindowCtrl2_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseCost, K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2) == 0x000058, "Member 'BPL_UIManager_C_MakkaWindow2_CloseCost::K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseCost, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MakkaWindow2_CloseCost::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_CloseCost, CallFunc_BPI_CloseCostWindow2_NotUse) == 0x000069, "Member 'BPL_UIManager_C_MakkaWindow2_CloseCost::CallFunc_BPI_CloseCostWindow2_NotUse' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MakkaWindow2_SetMoney
// 0x0078 (0x0078 - 0x0000)
struct BPL_UIManager_C_MakkaWindow2_SetMoney final
{
public:
	int32                                         InNumber;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayAnimation;                                   // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A59[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InDelayBeforeAnim;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlaySE;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsReflectGameData;                                 // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A5A[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A5B[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A5C[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMakkaWindowCtrl2_outActor;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MakkaWindowCtrl2_C> K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2;      // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_SetMoney_NotUse;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MakkaWindow2_SetMoney) == 0x000008, "Wrong alignment on BPL_UIManager_C_MakkaWindow2_SetMoney");
static_assert(sizeof(BPL_UIManager_C_MakkaWindow2_SetMoney) == 0x000078, "Wrong size on BPL_UIManager_C_MakkaWindow2_SetMoney");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetMoney, InNumber) == 0x000000, "Member 'BPL_UIManager_C_MakkaWindow2_SetMoney::InNumber' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetMoney, IsPlayAnimation) == 0x000004, "Member 'BPL_UIManager_C_MakkaWindow2_SetMoney::IsPlayAnimation' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetMoney, InDelayBeforeAnim) == 0x000008, "Member 'BPL_UIManager_C_MakkaWindow2_SetMoney::InDelayBeforeAnim' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetMoney, IsPlaySE) == 0x00000C, "Member 'BPL_UIManager_C_MakkaWindow2_SetMoney::IsPlaySE' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetMoney, IsReflectGameData) == 0x00000D, "Member 'BPL_UIManager_C_MakkaWindow2_SetMoney::IsReflectGameData' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetMoney, __WorldContext) == 0x000010, "Member 'BPL_UIManager_C_MakkaWindow2_SetMoney::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetMoney, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'BPL_UIManager_C_MakkaWindow2_SetMoney::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetMoney, K2Node_DynamicCast_AsBPI_UIManager) == 0x000020, "Member 'BPL_UIManager_C_MakkaWindow2_SetMoney::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetMoney, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BPL_UIManager_C_MakkaWindow2_SetMoney::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetMoney, CallFunc_BPI_GetUIManager_UIManager) == 0x000038, "Member 'BPL_UIManager_C_MakkaWindow2_SetMoney::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetMoney, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000040, "Member 'BPL_UIManager_C_MakkaWindow2_SetMoney::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetMoney, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BPL_UIManager_C_MakkaWindow2_SetMoney::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetMoney, CallFunc_BPI_GetMakkaWindowCtrl2_outActor) == 0x000058, "Member 'BPL_UIManager_C_MakkaWindow2_SetMoney::CallFunc_BPI_GetMakkaWindowCtrl2_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetMoney, K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2) == 0x000060, "Member 'BPL_UIManager_C_MakkaWindow2_SetMoney::K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetMoney, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BPL_UIManager_C_MakkaWindow2_SetMoney::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetMoney, CallFunc_BPI_SetMoney_NotUse) == 0x000071, "Member 'BPL_UIManager_C_MakkaWindow2_SetMoney::CallFunc_BPI_SetMoney_NotUse' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MakkaWindow2_SetTotal
// 0x0078 (0x0078 - 0x0000)
struct BPL_UIManager_C_MakkaWindow2_SetTotal final
{
public:
	int32                                         InNumber;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayAnimation;                                   // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A5D[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InDelayBeforeAnim;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A5E[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A5F[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A60[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMakkaWindowCtrl2_outActor;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MakkaWindowCtrl2_C> K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2;      // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_SetTotal_NotUse;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MakkaWindow2_SetTotal) == 0x000008, "Wrong alignment on BPL_UIManager_C_MakkaWindow2_SetTotal");
static_assert(sizeof(BPL_UIManager_C_MakkaWindow2_SetTotal) == 0x000078, "Wrong size on BPL_UIManager_C_MakkaWindow2_SetTotal");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetTotal, InNumber) == 0x000000, "Member 'BPL_UIManager_C_MakkaWindow2_SetTotal::InNumber' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetTotal, IsPlayAnimation) == 0x000004, "Member 'BPL_UIManager_C_MakkaWindow2_SetTotal::IsPlayAnimation' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetTotal, InDelayBeforeAnim) == 0x000008, "Member 'BPL_UIManager_C_MakkaWindow2_SetTotal::InDelayBeforeAnim' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetTotal, __WorldContext) == 0x000010, "Member 'BPL_UIManager_C_MakkaWindow2_SetTotal::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetTotal, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'BPL_UIManager_C_MakkaWindow2_SetTotal::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetTotal, K2Node_DynamicCast_AsBPI_UIManager) == 0x000020, "Member 'BPL_UIManager_C_MakkaWindow2_SetTotal::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetTotal, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BPL_UIManager_C_MakkaWindow2_SetTotal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetTotal, CallFunc_BPI_GetUIManager_UIManager) == 0x000038, "Member 'BPL_UIManager_C_MakkaWindow2_SetTotal::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetTotal, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000040, "Member 'BPL_UIManager_C_MakkaWindow2_SetTotal::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetTotal, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BPL_UIManager_C_MakkaWindow2_SetTotal::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetTotal, CallFunc_BPI_GetMakkaWindowCtrl2_outActor) == 0x000058, "Member 'BPL_UIManager_C_MakkaWindow2_SetTotal::CallFunc_BPI_GetMakkaWindowCtrl2_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetTotal, K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2) == 0x000060, "Member 'BPL_UIManager_C_MakkaWindow2_SetTotal::K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetTotal, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BPL_UIManager_C_MakkaWindow2_SetTotal::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetTotal, CallFunc_BPI_SetTotal_NotUse) == 0x000071, "Member 'BPL_UIManager_C_MakkaWindow2_SetTotal::CallFunc_BPI_SetTotal_NotUse' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MakkaWindow2_SetCost
// 0x0078 (0x0078 - 0x0000)
struct BPL_UIManager_C_MakkaWindow2_SetCost final
{
public:
	int32                                         InNumber;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayAnimation;                                   // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A61[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InDelayBeforeAnim;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A62[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A63[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A64[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMakkaWindowCtrl2_outActor;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MakkaWindowCtrl2_C> K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2;      // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_SetCost_NotUse;                       // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MakkaWindow2_SetCost) == 0x000008, "Wrong alignment on BPL_UIManager_C_MakkaWindow2_SetCost");
static_assert(sizeof(BPL_UIManager_C_MakkaWindow2_SetCost) == 0x000078, "Wrong size on BPL_UIManager_C_MakkaWindow2_SetCost");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCost, InNumber) == 0x000000, "Member 'BPL_UIManager_C_MakkaWindow2_SetCost::InNumber' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCost, IsPlayAnimation) == 0x000004, "Member 'BPL_UIManager_C_MakkaWindow2_SetCost::IsPlayAnimation' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCost, InDelayBeforeAnim) == 0x000008, "Member 'BPL_UIManager_C_MakkaWindow2_SetCost::InDelayBeforeAnim' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCost, __WorldContext) == 0x000010, "Member 'BPL_UIManager_C_MakkaWindow2_SetCost::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCost, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'BPL_UIManager_C_MakkaWindow2_SetCost::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCost, K2Node_DynamicCast_AsBPI_UIManager) == 0x000020, "Member 'BPL_UIManager_C_MakkaWindow2_SetCost::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCost, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BPL_UIManager_C_MakkaWindow2_SetCost::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCost, CallFunc_BPI_GetUIManager_UIManager) == 0x000038, "Member 'BPL_UIManager_C_MakkaWindow2_SetCost::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCost, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000040, "Member 'BPL_UIManager_C_MakkaWindow2_SetCost::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCost, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BPL_UIManager_C_MakkaWindow2_SetCost::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCost, CallFunc_BPI_GetMakkaWindowCtrl2_outActor) == 0x000058, "Member 'BPL_UIManager_C_MakkaWindow2_SetCost::CallFunc_BPI_GetMakkaWindowCtrl2_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCost, K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2) == 0x000060, "Member 'BPL_UIManager_C_MakkaWindow2_SetCost::K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCost, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BPL_UIManager_C_MakkaWindow2_SetCost::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCost, CallFunc_BPI_SetCost_NotUse) == 0x000071, "Member 'BPL_UIManager_C_MakkaWindow2_SetCost::CallFunc_BPI_SetCost_NotUse' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MakkaWindow2_AddMoney
// 0x0078 (0x0078 - 0x0000)
struct BPL_UIManager_C_MakkaWindow2_AddMoney final
{
public:
	int32                                         InNumber;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayAnimation;                                   // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A65[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InDelayBeforeAnim;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlaySE;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsReflectGameData;                                 // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A66[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A67[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A68[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMakkaWindowCtrl2_outActor;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MakkaWindowCtrl2_C> K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2;      // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_AddMoney_NotUse;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MakkaWindow2_AddMoney) == 0x000008, "Wrong alignment on BPL_UIManager_C_MakkaWindow2_AddMoney");
static_assert(sizeof(BPL_UIManager_C_MakkaWindow2_AddMoney) == 0x000078, "Wrong size on BPL_UIManager_C_MakkaWindow2_AddMoney");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddMoney, InNumber) == 0x000000, "Member 'BPL_UIManager_C_MakkaWindow2_AddMoney::InNumber' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddMoney, IsPlayAnimation) == 0x000004, "Member 'BPL_UIManager_C_MakkaWindow2_AddMoney::IsPlayAnimation' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddMoney, InDelayBeforeAnim) == 0x000008, "Member 'BPL_UIManager_C_MakkaWindow2_AddMoney::InDelayBeforeAnim' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddMoney, IsPlaySE) == 0x00000C, "Member 'BPL_UIManager_C_MakkaWindow2_AddMoney::IsPlaySE' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddMoney, IsReflectGameData) == 0x00000D, "Member 'BPL_UIManager_C_MakkaWindow2_AddMoney::IsReflectGameData' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddMoney, __WorldContext) == 0x000010, "Member 'BPL_UIManager_C_MakkaWindow2_AddMoney::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddMoney, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'BPL_UIManager_C_MakkaWindow2_AddMoney::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddMoney, K2Node_DynamicCast_AsBPI_UIManager) == 0x000020, "Member 'BPL_UIManager_C_MakkaWindow2_AddMoney::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddMoney, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BPL_UIManager_C_MakkaWindow2_AddMoney::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddMoney, CallFunc_BPI_GetUIManager_UIManager) == 0x000038, "Member 'BPL_UIManager_C_MakkaWindow2_AddMoney::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddMoney, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000040, "Member 'BPL_UIManager_C_MakkaWindow2_AddMoney::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddMoney, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BPL_UIManager_C_MakkaWindow2_AddMoney::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddMoney, CallFunc_BPI_GetMakkaWindowCtrl2_outActor) == 0x000058, "Member 'BPL_UIManager_C_MakkaWindow2_AddMoney::CallFunc_BPI_GetMakkaWindowCtrl2_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddMoney, K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2) == 0x000060, "Member 'BPL_UIManager_C_MakkaWindow2_AddMoney::K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddMoney, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BPL_UIManager_C_MakkaWindow2_AddMoney::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddMoney, CallFunc_BPI_AddMoney_NotUse) == 0x000071, "Member 'BPL_UIManager_C_MakkaWindow2_AddMoney::CallFunc_BPI_AddMoney_NotUse' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MakkaWindow2_AddTotal
// 0x0078 (0x0078 - 0x0000)
struct BPL_UIManager_C_MakkaWindow2_AddTotal final
{
public:
	int32                                         InNumber;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayAnimation;                                   // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A69[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InDelayBeforeAnim;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A6A[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A6B[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A6C[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMakkaWindowCtrl2_outActor;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MakkaWindowCtrl2_C> K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2;      // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_AddTotal_NotUse;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MakkaWindow2_AddTotal) == 0x000008, "Wrong alignment on BPL_UIManager_C_MakkaWindow2_AddTotal");
static_assert(sizeof(BPL_UIManager_C_MakkaWindow2_AddTotal) == 0x000078, "Wrong size on BPL_UIManager_C_MakkaWindow2_AddTotal");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddTotal, InNumber) == 0x000000, "Member 'BPL_UIManager_C_MakkaWindow2_AddTotal::InNumber' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddTotal, IsPlayAnimation) == 0x000004, "Member 'BPL_UIManager_C_MakkaWindow2_AddTotal::IsPlayAnimation' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddTotal, InDelayBeforeAnim) == 0x000008, "Member 'BPL_UIManager_C_MakkaWindow2_AddTotal::InDelayBeforeAnim' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddTotal, __WorldContext) == 0x000010, "Member 'BPL_UIManager_C_MakkaWindow2_AddTotal::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddTotal, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'BPL_UIManager_C_MakkaWindow2_AddTotal::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddTotal, K2Node_DynamicCast_AsBPI_UIManager) == 0x000020, "Member 'BPL_UIManager_C_MakkaWindow2_AddTotal::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddTotal, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BPL_UIManager_C_MakkaWindow2_AddTotal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddTotal, CallFunc_BPI_GetUIManager_UIManager) == 0x000038, "Member 'BPL_UIManager_C_MakkaWindow2_AddTotal::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddTotal, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000040, "Member 'BPL_UIManager_C_MakkaWindow2_AddTotal::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddTotal, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BPL_UIManager_C_MakkaWindow2_AddTotal::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddTotal, CallFunc_BPI_GetMakkaWindowCtrl2_outActor) == 0x000058, "Member 'BPL_UIManager_C_MakkaWindow2_AddTotal::CallFunc_BPI_GetMakkaWindowCtrl2_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddTotal, K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2) == 0x000060, "Member 'BPL_UIManager_C_MakkaWindow2_AddTotal::K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddTotal, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BPL_UIManager_C_MakkaWindow2_AddTotal::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddTotal, CallFunc_BPI_AddTotal_NotUse) == 0x000071, "Member 'BPL_UIManager_C_MakkaWindow2_AddTotal::CallFunc_BPI_AddTotal_NotUse' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MakkaWindow2_AddCost
// 0x0078 (0x0078 - 0x0000)
struct BPL_UIManager_C_MakkaWindow2_AddCost final
{
public:
	int32                                         InNumber;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayAnimation;                                   // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A6D[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InDelayBeforeAnim;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A6E[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A6F[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A70[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMakkaWindowCtrl2_outActor;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MakkaWindowCtrl2_C> K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2;      // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_AddCost_NotUse;                       // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MakkaWindow2_AddCost) == 0x000008, "Wrong alignment on BPL_UIManager_C_MakkaWindow2_AddCost");
static_assert(sizeof(BPL_UIManager_C_MakkaWindow2_AddCost) == 0x000078, "Wrong size on BPL_UIManager_C_MakkaWindow2_AddCost");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddCost, InNumber) == 0x000000, "Member 'BPL_UIManager_C_MakkaWindow2_AddCost::InNumber' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddCost, IsPlayAnimation) == 0x000004, "Member 'BPL_UIManager_C_MakkaWindow2_AddCost::IsPlayAnimation' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddCost, InDelayBeforeAnim) == 0x000008, "Member 'BPL_UIManager_C_MakkaWindow2_AddCost::InDelayBeforeAnim' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddCost, __WorldContext) == 0x000010, "Member 'BPL_UIManager_C_MakkaWindow2_AddCost::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddCost, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'BPL_UIManager_C_MakkaWindow2_AddCost::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddCost, K2Node_DynamicCast_AsBPI_UIManager) == 0x000020, "Member 'BPL_UIManager_C_MakkaWindow2_AddCost::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddCost, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BPL_UIManager_C_MakkaWindow2_AddCost::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddCost, CallFunc_BPI_GetUIManager_UIManager) == 0x000038, "Member 'BPL_UIManager_C_MakkaWindow2_AddCost::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddCost, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000040, "Member 'BPL_UIManager_C_MakkaWindow2_AddCost::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddCost, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BPL_UIManager_C_MakkaWindow2_AddCost::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddCost, CallFunc_BPI_GetMakkaWindowCtrl2_outActor) == 0x000058, "Member 'BPL_UIManager_C_MakkaWindow2_AddCost::CallFunc_BPI_GetMakkaWindowCtrl2_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddCost, K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2) == 0x000060, "Member 'BPL_UIManager_C_MakkaWindow2_AddCost::K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddCost, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BPL_UIManager_C_MakkaWindow2_AddCost::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_AddCost, CallFunc_BPI_AddCost_NotUse) == 0x000071, "Member 'BPL_UIManager_C_MakkaWindow2_AddCost::CallFunc_BPI_AddCost_NotUse' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MakkaWindow2_GetAnimState_Money
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MakkaWindow2_GetAnimState_Money final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MakkaWindowAnimState                        AnimState;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A71[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A72[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A73[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMakkaWindowCtrl2_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MakkaWindowCtrl2_C> K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2;      // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_MakkaWindowAnimState                        CallFunc_BPI_GetAnimState_Money_AnimState;         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Money) == 0x000008, "Wrong alignment on BPL_UIManager_C_MakkaWindow2_GetAnimState_Money");
static_assert(sizeof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Money) == 0x000070, "Wrong size on BPL_UIManager_C_MakkaWindow2_GetAnimState_Money");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Money, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Money::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Money, AnimState) == 0x000008, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Money::AnimState' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Money, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Money::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Money, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Money::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Money, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Money::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Money, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Money::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Money, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Money::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Money, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Money::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Money, CallFunc_BPI_GetMakkaWindowCtrl2_outActor) == 0x000050, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Money::CallFunc_BPI_GetMakkaWindowCtrl2_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Money, K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2) == 0x000058, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Money::K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Money, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Money::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Money, CallFunc_BPI_GetAnimState_Money_AnimState) == 0x000069, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Money::CallFunc_BPI_GetAnimState_Money_AnimState' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MakkaWindow2_GetAnimState_Total
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MakkaWindow2_GetAnimState_Total final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MakkaWindowAnimState                        AnimState;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A74[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A75[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A76[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMakkaWindowCtrl2_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MakkaWindowCtrl2_C> K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2;      // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_MakkaWindowAnimState                        CallFunc_BPI_GetAnimState_Total_AnimState;         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Total) == 0x000008, "Wrong alignment on BPL_UIManager_C_MakkaWindow2_GetAnimState_Total");
static_assert(sizeof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Total) == 0x000070, "Wrong size on BPL_UIManager_C_MakkaWindow2_GetAnimState_Total");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Total, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Total::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Total, AnimState) == 0x000008, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Total::AnimState' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Total, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Total::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Total, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Total::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Total, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Total::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Total, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Total::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Total, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Total::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Total, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Total::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Total, CallFunc_BPI_GetMakkaWindowCtrl2_outActor) == 0x000050, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Total::CallFunc_BPI_GetMakkaWindowCtrl2_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Total, K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2) == 0x000058, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Total::K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Total, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Total::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Total, CallFunc_BPI_GetAnimState_Total_AnimState) == 0x000069, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Total::CallFunc_BPI_GetAnimState_Total_AnimState' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MakkaWindow2_GetAnimState_Cost
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MakkaWindowAnimState                        AnimState;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A77[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A78[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A79[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMakkaWindowCtrl2_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MakkaWindowCtrl2_C> K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2;      // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_MakkaWindowAnimState                        CallFunc_BPI_GetAnimState_Cost_AnimState;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost) == 0x000008, "Wrong alignment on BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost");
static_assert(sizeof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost) == 0x000070, "Wrong size on BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost, AnimState) == 0x000008, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost::AnimState' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost, CallFunc_BPI_GetMakkaWindowCtrl2_outActor) == 0x000050, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost::CallFunc_BPI_GetMakkaWindowCtrl2_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost, K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2) == 0x000058, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost::K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost, CallFunc_BPI_GetAnimState_Cost_AnimState) == 0x000069, "Member 'BPL_UIManager_C_MakkaWindow2_GetAnimState_Cost::CallFunc_BPI_GetAnimState_Cost_AnimState' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MakkaWindow2_SkipDigitAnim
// 0x0098 (0x0098 - 0x0000)
struct BPL_UIManager_C_MakkaWindow2_SkipDigitAnim final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A7A[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A7B[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMakkaWindowCtrl2_outActor;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MakkaWindowCtrl2_C> K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2;      // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A7C[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MakkaWindowCtrl2_C> K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2_1;    // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_SkipNumberAnim_Total_NotUse;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_SkipNumberAnim_Money_NotUse;          // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A7D[0x5];                                     // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MakkaWindowCtrl2_C> K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2_2;    // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_SkipNumberAnim_Cost_NotUse;           // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MakkaWindow2_SkipDigitAnim) == 0x000008, "Wrong alignment on BPL_UIManager_C_MakkaWindow2_SkipDigitAnim");
static_assert(sizeof(BPL_UIManager_C_MakkaWindow2_SkipDigitAnim) == 0x000098, "Wrong size on BPL_UIManager_C_MakkaWindow2_SkipDigitAnim");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SkipDigitAnim, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_MakkaWindow2_SkipDigitAnim::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SkipDigitAnim, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'BPL_UIManager_C_MakkaWindow2_SkipDigitAnim::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SkipDigitAnim, K2Node_DynamicCast_AsBPI_UIManager) == 0x000010, "Member 'BPL_UIManager_C_MakkaWindow2_SkipDigitAnim::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SkipDigitAnim, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPL_UIManager_C_MakkaWindow2_SkipDigitAnim::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SkipDigitAnim, CallFunc_BPI_GetUIManager_UIManager) == 0x000028, "Member 'BPL_UIManager_C_MakkaWindow2_SkipDigitAnim::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SkipDigitAnim, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000030, "Member 'BPL_UIManager_C_MakkaWindow2_SkipDigitAnim::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SkipDigitAnim, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BPL_UIManager_C_MakkaWindow2_SkipDigitAnim::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SkipDigitAnim, CallFunc_BPI_GetMakkaWindowCtrl2_outActor) == 0x000048, "Member 'BPL_UIManager_C_MakkaWindow2_SkipDigitAnim::CallFunc_BPI_GetMakkaWindowCtrl2_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SkipDigitAnim, K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2) == 0x000050, "Member 'BPL_UIManager_C_MakkaWindow2_SkipDigitAnim::K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SkipDigitAnim, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'BPL_UIManager_C_MakkaWindow2_SkipDigitAnim::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SkipDigitAnim, K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2_1) == 0x000068, "Member 'BPL_UIManager_C_MakkaWindow2_SkipDigitAnim::K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SkipDigitAnim, K2Node_DynamicCast_bSuccess_3) == 0x000078, "Member 'BPL_UIManager_C_MakkaWindow2_SkipDigitAnim::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SkipDigitAnim, CallFunc_BPI_SkipNumberAnim_Total_NotUse) == 0x000079, "Member 'BPL_UIManager_C_MakkaWindow2_SkipDigitAnim::CallFunc_BPI_SkipNumberAnim_Total_NotUse' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SkipDigitAnim, CallFunc_BPI_SkipNumberAnim_Money_NotUse) == 0x00007A, "Member 'BPL_UIManager_C_MakkaWindow2_SkipDigitAnim::CallFunc_BPI_SkipNumberAnim_Money_NotUse' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SkipDigitAnim, K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2_2) == 0x000080, "Member 'BPL_UIManager_C_MakkaWindow2_SkipDigitAnim::K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SkipDigitAnim, K2Node_DynamicCast_bSuccess_4) == 0x000090, "Member 'BPL_UIManager_C_MakkaWindow2_SkipDigitAnim::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SkipDigitAnim, CallFunc_BPI_SkipNumberAnim_Cost_NotUse) == 0x000091, "Member 'BPL_UIManager_C_MakkaWindow2_SkipDigitAnim::CallFunc_BPI_SkipNumberAnim_Cost_NotUse' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MakkaWindow2_IsPlayingDigitAnim
// 0x00A0 (0x00A0 - 0x0000)
struct BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlaying;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A7E[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A7F[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A80[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMakkaWindowCtrl2_outActor;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MakkaWindowCtrl2_C> K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2;      // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A81[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MakkaWindowCtrl2_C> K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2_1;    // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_IsPlayingNumberAnim_Total_IsPlaying;  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_IsPlayingNumberAnim_Money_IsPlaying;  // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A82[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MakkaWindowCtrl2_C> K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2_2;    // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_IsPlayingNumberAnim_Cost_IsPlaying;   // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim) == 0x000008, "Wrong alignment on BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim");
static_assert(sizeof(BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim) == 0x0000A0, "Wrong size on BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim, IsPlaying) == 0x000008, "Member 'BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim::IsPlaying' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim, CallFunc_BPI_GetMakkaWindowCtrl2_outActor) == 0x000050, "Member 'BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim::CallFunc_BPI_GetMakkaWindowCtrl2_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim, K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2) == 0x000058, "Member 'BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim::K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim, K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2_1) == 0x000070, "Member 'BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim::K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim, K2Node_DynamicCast_bSuccess_3) == 0x000080, "Member 'BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim, CallFunc_BPI_IsPlayingNumberAnim_Total_IsPlaying) == 0x000081, "Member 'BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim::CallFunc_BPI_IsPlayingNumberAnim_Total_IsPlaying' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim, CallFunc_BPI_IsPlayingNumberAnim_Money_IsPlaying) == 0x000082, "Member 'BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim::CallFunc_BPI_IsPlayingNumberAnim_Money_IsPlaying' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim, CallFunc_BooleanOR_ReturnValue) == 0x000083, "Member 'BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim, K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2_2) == 0x000088, "Member 'BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim::K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim, K2Node_DynamicCast_bSuccess_4) == 0x000098, "Member 'BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim, CallFunc_BPI_IsPlayingNumberAnim_Cost_IsPlaying) == 0x000099, "Member 'BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim::CallFunc_BPI_IsPlayingNumberAnim_Cost_IsPlaying' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim, CallFunc_BooleanOR_ReturnValue_1) == 0x00009A, "Member 'BPL_UIManager_C_MakkaWindow2_IsPlayingDigitAnim::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MakkaWindow2_SetCostColor
// 0x0078 (0x0078 - 0x0000)
struct BPL_UIManager_C_MakkaWindow2_SetCostColor final
{
public:
	struct FLinearColor                           InColor;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A83[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A84[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMakkaWindowCtrl2_outActor;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MakkaWindowCtrl2_C> K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2;      // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_SetCostColor_NotUse;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MakkaWindow2_SetCostColor) == 0x000008, "Wrong alignment on BPL_UIManager_C_MakkaWindow2_SetCostColor");
static_assert(sizeof(BPL_UIManager_C_MakkaWindow2_SetCostColor) == 0x000078, "Wrong size on BPL_UIManager_C_MakkaWindow2_SetCostColor");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCostColor, InColor) == 0x000000, "Member 'BPL_UIManager_C_MakkaWindow2_SetCostColor::InColor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCostColor, __WorldContext) == 0x000010, "Member 'BPL_UIManager_C_MakkaWindow2_SetCostColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCostColor, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'BPL_UIManager_C_MakkaWindow2_SetCostColor::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCostColor, K2Node_DynamicCast_AsBPI_UIManager) == 0x000020, "Member 'BPL_UIManager_C_MakkaWindow2_SetCostColor::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCostColor, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BPL_UIManager_C_MakkaWindow2_SetCostColor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCostColor, CallFunc_BPI_GetUIManager_UIManager) == 0x000038, "Member 'BPL_UIManager_C_MakkaWindow2_SetCostColor::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCostColor, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000040, "Member 'BPL_UIManager_C_MakkaWindow2_SetCostColor::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCostColor, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BPL_UIManager_C_MakkaWindow2_SetCostColor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCostColor, CallFunc_BPI_GetMakkaWindowCtrl2_outActor) == 0x000058, "Member 'BPL_UIManager_C_MakkaWindow2_SetCostColor::CallFunc_BPI_GetMakkaWindowCtrl2_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCostColor, K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2) == 0x000060, "Member 'BPL_UIManager_C_MakkaWindow2_SetCostColor::K2Node_DynamicCast_AsBPI_Makka_Window_Ctrl_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCostColor, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BPL_UIManager_C_MakkaWindow2_SetCostColor::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MakkaWindow2_SetCostColor, CallFunc_BPI_SetCostColor_NotUse) == 0x000071, "Member 'BPL_UIManager_C_MakkaWindow2_SetCostColor::CallFunc_BPI_SetCostColor_NotUse' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MoonAge_SetCounterUpdateSecond
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MoonAge_SetCounterUpdateSecond final
{
public:
	float                                         InSecond;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A85[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A86[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A87[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_MoonAgeCtrl_outActor;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MoonAgeCtrl_C>    K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl;            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MoonAge_SetCounterUpdateSecond) == 0x000008, "Wrong alignment on BPL_UIManager_C_MoonAge_SetCounterUpdateSecond");
static_assert(sizeof(BPL_UIManager_C_MoonAge_SetCounterUpdateSecond) == 0x000070, "Wrong size on BPL_UIManager_C_MoonAge_SetCounterUpdateSecond");
static_assert(offsetof(BPL_UIManager_C_MoonAge_SetCounterUpdateSecond, InSecond) == 0x000000, "Member 'BPL_UIManager_C_MoonAge_SetCounterUpdateSecond::InSecond' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_SetCounterUpdateSecond, __WorldContext) == 0x000008, "Member 'BPL_UIManager_C_MoonAge_SetCounterUpdateSecond::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_SetCounterUpdateSecond, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MoonAge_SetCounterUpdateSecond::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_SetCounterUpdateSecond, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MoonAge_SetCounterUpdateSecond::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_SetCounterUpdateSecond, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MoonAge_SetCounterUpdateSecond::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_SetCounterUpdateSecond, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MoonAge_SetCounterUpdateSecond::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_SetCounterUpdateSecond, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MoonAge_SetCounterUpdateSecond::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_SetCounterUpdateSecond, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MoonAge_SetCounterUpdateSecond::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_SetCounterUpdateSecond, CallFunc_BPI_MoonAgeCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_MoonAge_SetCounterUpdateSecond::CallFunc_BPI_MoonAgeCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_SetCounterUpdateSecond, K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_MoonAge_SetCounterUpdateSecond::K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_SetCounterUpdateSecond, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MoonAge_SetCounterUpdateSecond::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MoonAge_GetCounterUpdateSecond
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MoonAge_GetCounterUpdateSecond final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CounterUpdateSecond;                               // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A88[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A89[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A8A[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_MoonAgeCtrl_outActor;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MoonAgeCtrl_C>    K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl;            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A8B[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BPI_GetMoonAgeCntUpdateTime_CounterUpdateTime; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_UIManager_C_MoonAge_GetCounterUpdateSecond) == 0x000008, "Wrong alignment on BPL_UIManager_C_MoonAge_GetCounterUpdateSecond");
static_assert(sizeof(BPL_UIManager_C_MoonAge_GetCounterUpdateSecond) == 0x000070, "Wrong size on BPL_UIManager_C_MoonAge_GetCounterUpdateSecond");
static_assert(offsetof(BPL_UIManager_C_MoonAge_GetCounterUpdateSecond, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_MoonAge_GetCounterUpdateSecond::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_GetCounterUpdateSecond, CounterUpdateSecond) == 0x000008, "Member 'BPL_UIManager_C_MoonAge_GetCounterUpdateSecond::CounterUpdateSecond' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_GetCounterUpdateSecond, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MoonAge_GetCounterUpdateSecond::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_GetCounterUpdateSecond, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MoonAge_GetCounterUpdateSecond::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_GetCounterUpdateSecond, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MoonAge_GetCounterUpdateSecond::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_GetCounterUpdateSecond, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MoonAge_GetCounterUpdateSecond::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_GetCounterUpdateSecond, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MoonAge_GetCounterUpdateSecond::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_GetCounterUpdateSecond, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MoonAge_GetCounterUpdateSecond::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_GetCounterUpdateSecond, CallFunc_BPI_MoonAgeCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_MoonAge_GetCounterUpdateSecond::CallFunc_BPI_MoonAgeCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_GetCounterUpdateSecond, K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_MoonAge_GetCounterUpdateSecond::K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_GetCounterUpdateSecond, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MoonAge_GetCounterUpdateSecond::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_GetCounterUpdateSecond, CallFunc_BPI_GetMoonAgeCntUpdateTime_CounterUpdateTime) == 0x00006C, "Member 'BPL_UIManager_C_MoonAge_GetCounterUpdateSecond::CallFunc_BPI_GetMoonAgeCntUpdateTime_CounterUpdateTime' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MoonAge_getAnimationState
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MoonAge_getAnimationState final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MoonAgeAnimationState                       OutState;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A8C[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A8D[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A8E[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_MoonAgeCtrl_outActor;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MoonAgeCtrl_C>    K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl;            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_MoonAgeAnimationState                       CallFunc_BPI_GetMoonAgeAnimState_outState;         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_UIManager_C_MoonAge_getAnimationState) == 0x000008, "Wrong alignment on BPL_UIManager_C_MoonAge_getAnimationState");
static_assert(sizeof(BPL_UIManager_C_MoonAge_getAnimationState) == 0x000070, "Wrong size on BPL_UIManager_C_MoonAge_getAnimationState");
static_assert(offsetof(BPL_UIManager_C_MoonAge_getAnimationState, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_MoonAge_getAnimationState::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_getAnimationState, OutState) == 0x000008, "Member 'BPL_UIManager_C_MoonAge_getAnimationState::OutState' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_getAnimationState, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MoonAge_getAnimationState::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_getAnimationState, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MoonAge_getAnimationState::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_getAnimationState, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MoonAge_getAnimationState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_getAnimationState, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MoonAge_getAnimationState::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_getAnimationState, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MoonAge_getAnimationState::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_getAnimationState, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MoonAge_getAnimationState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_getAnimationState, CallFunc_BPI_MoonAgeCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_MoonAge_getAnimationState::CallFunc_BPI_MoonAgeCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_getAnimationState, K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_MoonAge_getAnimationState::K2Node_DynamicCast_AsBPI_Moon_Age_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_getAnimationState, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MoonAge_getAnimationState::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MoonAge_getAnimationState, CallFunc_BPI_GetMoonAgeAnimState_outState) == 0x000069, "Member 'BPL_UIManager_C_MoonAge_getAnimationState::CallFunc_BPI_GetMoonAgeAnimState_outState' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.MsgWindowIsNextPageIconClicked
// 0x0070 (0x0070 - 0x0000)
struct BPL_UIManager_C_MsgWindowIsNextPageIconClicked final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OutClicked;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A8F[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A90[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A91[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMsgCtrl_OutActor;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MsgCtrl_C>        K2Node_DynamicCast_AsBPI_Msg_Ctrl;                 // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IMsgWindowIsNextPageIconClicked_OutClicked; // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_MsgWindowIsNextPageIconClicked) == 0x000008, "Wrong alignment on BPL_UIManager_C_MsgWindowIsNextPageIconClicked");
static_assert(sizeof(BPL_UIManager_C_MsgWindowIsNextPageIconClicked) == 0x000070, "Wrong size on BPL_UIManager_C_MsgWindowIsNextPageIconClicked");
static_assert(offsetof(BPL_UIManager_C_MsgWindowIsNextPageIconClicked, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_MsgWindowIsNextPageIconClicked::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MsgWindowIsNextPageIconClicked, OutClicked) == 0x000008, "Member 'BPL_UIManager_C_MsgWindowIsNextPageIconClicked::OutClicked' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MsgWindowIsNextPageIconClicked, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_MsgWindowIsNextPageIconClicked::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MsgWindowIsNextPageIconClicked, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_MsgWindowIsNextPageIconClicked::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MsgWindowIsNextPageIconClicked, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_MsgWindowIsNextPageIconClicked::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MsgWindowIsNextPageIconClicked, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_MsgWindowIsNextPageIconClicked::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MsgWindowIsNextPageIconClicked, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_MsgWindowIsNextPageIconClicked::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MsgWindowIsNextPageIconClicked, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_MsgWindowIsNextPageIconClicked::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MsgWindowIsNextPageIconClicked, CallFunc_BPI_GetMsgCtrl_OutActor) == 0x000050, "Member 'BPL_UIManager_C_MsgWindowIsNextPageIconClicked::CallFunc_BPI_GetMsgCtrl_OutActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MsgWindowIsNextPageIconClicked, K2Node_DynamicCast_AsBPI_Msg_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_MsgWindowIsNextPageIconClicked::K2Node_DynamicCast_AsBPI_Msg_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MsgWindowIsNextPageIconClicked, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPL_UIManager_C_MsgWindowIsNextPageIconClicked::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_MsgWindowIsNextPageIconClicked, CallFunc_IMsgWindowIsNextPageIconClicked_OutClicked) == 0x000069, "Member 'BPL_UIManager_C_MsgWindowIsNextPageIconClicked::CallFunc_IMsgWindowIsNextPageIconClicked_OutClicked' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.UIIconHelpProc
// 0x0020 (0x0020 - 0x0000)
struct BPL_UIManager_C_UIIconHelpProc final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetIconHelpStatus_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TutorialWindow_WidgetState                  CallFunc_BPL_TutorialWIndow2_GetAnimState_AnimState; // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPL_TutorialWIndow2_IsClickedByMouse_IsClicked; // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetIconHelpStatus_ReturnValue_1;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetIconHelpStatus_ReturnValue_2;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A92[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetIconHelpStatus_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_UIIconHelpProc) == 0x000008, "Wrong alignment on BPL_UIManager_C_UIIconHelpProc");
static_assert(sizeof(BPL_UIManager_C_UIIconHelpProc) == 0x000020, "Wrong size on BPL_UIManager_C_UIIconHelpProc");
static_assert(offsetof(BPL_UIManager_C_UIIconHelpProc, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_UIIconHelpProc::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_UIIconHelpProc, CallFunc_SetIconHelpStatus_ReturnValue) == 0x000008, "Member 'BPL_UIManager_C_UIIconHelpProc::CallFunc_SetIconHelpStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_UIIconHelpProc, CallFunc_IsActionPadCheck_Success) == 0x000009, "Member 'BPL_UIManager_C_UIIconHelpProc::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_UIIconHelpProc, CallFunc_IsActionPadCheck_Success_1) == 0x00000A, "Member 'BPL_UIManager_C_UIIconHelpProc::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_UIIconHelpProc, CallFunc_BPL_TutorialWIndow2_GetAnimState_AnimState) == 0x00000B, "Member 'BPL_UIManager_C_UIIconHelpProc::CallFunc_BPL_TutorialWIndow2_GetAnimState_AnimState' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_UIIconHelpProc, CallFunc_BPL_TutorialWIndow2_IsClickedByMouse_IsClicked) == 0x00000C, "Member 'BPL_UIManager_C_UIIconHelpProc::CallFunc_BPL_TutorialWIndow2_IsClickedByMouse_IsClicked' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_UIIconHelpProc, K2Node_SwitchEnum_CmpSuccess) == 0x00000D, "Member 'BPL_UIManager_C_UIIconHelpProc::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_UIIconHelpProc, CallFunc_BooleanOR_ReturnValue) == 0x00000E, "Member 'BPL_UIManager_C_UIIconHelpProc::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_UIIconHelpProc, CallFunc_BooleanOR_ReturnValue_1) == 0x00000F, "Member 'BPL_UIManager_C_UIIconHelpProc::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_UIIconHelpProc, CallFunc_SetIconHelpStatus_ReturnValue_1) == 0x000010, "Member 'BPL_UIManager_C_UIIconHelpProc::CallFunc_SetIconHelpStatus_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_UIIconHelpProc, CallFunc_SetIconHelpStatus_ReturnValue_2) == 0x000011, "Member 'BPL_UIManager_C_UIIconHelpProc::CallFunc_SetIconHelpStatus_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_UIIconHelpProc, CallFunc_GetIconHelpStatus_ReturnValue) == 0x000014, "Member 'BPL_UIManager_C_UIIconHelpProc::CallFunc_GetIconHelpStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_UIIconHelpProc, K2Node_SwitchInteger_CmpSuccess) == 0x000018, "Member 'BPL_UIManager_C_UIIconHelpProc::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.GetCommonUI_EventCtrl
// 0x0068 (0x0068 - 0x0000)
struct BPL_UIManager_C_GetCommonUI_EventCtrl final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CommonUI_EventCtrl_C*               OutActor;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A93[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A94[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetCommonUI_EventCtrl_outActor;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CommonUI_EventCtrl_C*               K2Node_DynamicCast_AsBP_Common_UI_Event_Ctrl;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_GetCommonUI_EventCtrl) == 0x000008, "Wrong alignment on BPL_UIManager_C_GetCommonUI_EventCtrl");
static_assert(sizeof(BPL_UIManager_C_GetCommonUI_EventCtrl) == 0x000068, "Wrong size on BPL_UIManager_C_GetCommonUI_EventCtrl");
static_assert(offsetof(BPL_UIManager_C_GetCommonUI_EventCtrl, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_GetCommonUI_EventCtrl::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_GetCommonUI_EventCtrl, OutActor) == 0x000008, "Member 'BPL_UIManager_C_GetCommonUI_EventCtrl::OutActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_GetCommonUI_EventCtrl, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_GetCommonUI_EventCtrl::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_GetCommonUI_EventCtrl, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_GetCommonUI_EventCtrl::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_GetCommonUI_EventCtrl, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_GetCommonUI_EventCtrl::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_GetCommonUI_EventCtrl, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_GetCommonUI_EventCtrl::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_GetCommonUI_EventCtrl, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000038, "Member 'BPL_UIManager_C_GetCommonUI_EventCtrl::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_GetCommonUI_EventCtrl, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPL_UIManager_C_GetCommonUI_EventCtrl::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_GetCommonUI_EventCtrl, CallFunc_BPI_GetCommonUI_EventCtrl_outActor) == 0x000050, "Member 'BPL_UIManager_C_GetCommonUI_EventCtrl::CallFunc_BPI_GetCommonUI_EventCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_GetCommonUI_EventCtrl, K2Node_DynamicCast_AsBP_Common_UI_Event_Ctrl) == 0x000058, "Member 'BPL_UIManager_C_GetCommonUI_EventCtrl::K2Node_DynamicCast_AsBP_Common_UI_Event_Ctrl' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_GetCommonUI_EventCtrl, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'BPL_UIManager_C_GetCommonUI_EventCtrl::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BPL_UIManager.BPL_UIManager_C.UIManager_IsSpawnedCtrlActors
// 0x0058 (0x0058 - 0x0000)
struct BPL_UIManager_C_UIManager_IsSpawnedCtrlActors final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Complete;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A95[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A96[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A97[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_IsSpawnedUiCtrlActors_Complete;       // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_UIManager_C_UIManager_IsSpawnedCtrlActors) == 0x000008, "Wrong alignment on BPL_UIManager_C_UIManager_IsSpawnedCtrlActors");
static_assert(sizeof(BPL_UIManager_C_UIManager_IsSpawnedCtrlActors) == 0x000058, "Wrong size on BPL_UIManager_C_UIManager_IsSpawnedCtrlActors");
static_assert(offsetof(BPL_UIManager_C_UIManager_IsSpawnedCtrlActors, __WorldContext) == 0x000000, "Member 'BPL_UIManager_C_UIManager_IsSpawnedCtrlActors::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_UIManager_IsSpawnedCtrlActors, Complete) == 0x000008, "Member 'BPL_UIManager_C_UIManager_IsSpawnedCtrlActors::Complete' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_UIManager_IsSpawnedCtrlActors, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_UIManager_C_UIManager_IsSpawnedCtrlActors::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_UIManager_IsSpawnedCtrlActors, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BPL_UIManager_C_UIManager_IsSpawnedCtrlActors::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_UIManager_IsSpawnedCtrlActors, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPL_UIManager_C_UIManager_IsSpawnedCtrlActors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_UIManager_IsSpawnedCtrlActors, CallFunc_BPI_GetUIManager_UIManager) == 0x000030, "Member 'BPL_UIManager_C_UIManager_IsSpawnedCtrlActors::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_UIManager_IsSpawnedCtrlActors, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BPL_UIManager_C_UIManager_IsSpawnedCtrlActors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_UIManager_IsSpawnedCtrlActors, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000040, "Member 'BPL_UIManager_C_UIManager_IsSpawnedCtrlActors::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_UIManager_IsSpawnedCtrlActors, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BPL_UIManager_C_UIManager_IsSpawnedCtrlActors::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_UIManager_C_UIManager_IsSpawnedCtrlActors, CallFunc_BPI_IsSpawnedUiCtrlActors_Complete) == 0x000051, "Member 'BPL_UIManager_C_UIManager_IsSpawnedCtrlActors::CallFunc_BPI_IsSpawnedUiCtrlActors_Complete' has a wrong offset!");

}

