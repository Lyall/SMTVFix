#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TurnChange

#include "Basic.hpp"


namespace SDK::Params
{

// Function WB_TurnChange.WB_TurnChange_C.ExecuteUbergraph_WB_TurnChange
// 0x001C (0x001C - 0x0000)
struct WB_TurnChange_C_ExecuteUbergraph_WB_TurnChange final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName;           // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName;          // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TurnChange_C_ExecuteUbergraph_WB_TurnChange) == 0x000004, "Wrong alignment on WB_TurnChange_C_ExecuteUbergraph_WB_TurnChange");
static_assert(sizeof(WB_TurnChange_C_ExecuteUbergraph_WB_TurnChange) == 0x00001C, "Wrong size on WB_TurnChange_C_ExecuteUbergraph_WB_TurnChange");
static_assert(offsetof(WB_TurnChange_C_ExecuteUbergraph_WB_TurnChange, EntryPoint) == 0x000000, "Member 'WB_TurnChange_C_ExecuteUbergraph_WB_TurnChange::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_TurnChange_C_ExecuteUbergraph_WB_TurnChange, K2Node_ComponentBoundEvent_AnimPackName) == 0x000004, "Member 'WB_TurnChange_C_ExecuteUbergraph_WB_TurnChange::K2Node_ComponentBoundEvent_AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_TurnChange_C_ExecuteUbergraph_WB_TurnChange, K2Node_ComponentBoundEvent_AnimationName) == 0x00000C, "Member 'WB_TurnChange_C_ExecuteUbergraph_WB_TurnChange::K2Node_ComponentBoundEvent_AnimationName' has a wrong offset!");
static_assert(offsetof(WB_TurnChange_C_ExecuteUbergraph_WB_TurnChange, K2Node_ComponentBoundEvent_AnimPackIndex) == 0x000014, "Member 'WB_TurnChange_C_ExecuteUbergraph_WB_TurnChange::K2Node_ComponentBoundEvent_AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_TurnChange_C_ExecuteUbergraph_WB_TurnChange, K2Node_ComponentBoundEvent_AnimationIndex) == 0x000018, "Member 'WB_TurnChange_C_ExecuteUbergraph_WB_TurnChange::K2Node_ComponentBoundEvent_AnimationIndex' has a wrong offset!");

// Function WB_TurnChange.WB_TurnChange_C.BndEvt__SsPlayer_Turn_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_TurnChange_C_BndEvt__SsPlayer_Turn_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TurnChange_C_BndEvt__SsPlayer_Turn_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_TurnChange_C_BndEvt__SsPlayer_Turn_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_TurnChange_C_BndEvt__SsPlayer_Turn_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_TurnChange_C_BndEvt__SsPlayer_Turn_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_TurnChange_C_BndEvt__SsPlayer_Turn_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_TurnChange_C_BndEvt__SsPlayer_Turn_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_TurnChange_C_BndEvt__SsPlayer_Turn_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_TurnChange_C_BndEvt__SsPlayer_Turn_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_TurnChange_C_BndEvt__SsPlayer_Turn_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_TurnChange_C_BndEvt__SsPlayer_Turn_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_TurnChange_C_BndEvt__SsPlayer_Turn_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_TurnChange_C_BndEvt__SsPlayer_Turn_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_TurnChange.WB_TurnChange_C.Play
// 0x000C (0x000C - 0x0000)
struct WB_TurnChange_C_Play final
{
public:
	bool                                          IsPlayer;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49B1[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlayRate;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TurnChange_C_Play) == 0x000004, "Wrong alignment on WB_TurnChange_C_Play");
static_assert(sizeof(WB_TurnChange_C_Play) == 0x00000C, "Wrong size on WB_TurnChange_C_Play");
static_assert(offsetof(WB_TurnChange_C_Play, IsPlayer) == 0x000000, "Member 'WB_TurnChange_C_Play::IsPlayer' has a wrong offset!");
static_assert(offsetof(WB_TurnChange_C_Play, PlayRate) == 0x000004, "Member 'WB_TurnChange_C_Play::PlayRate' has a wrong offset!");
static_assert(offsetof(WB_TurnChange_C_Play, CallFunc_Play_ReturnValue) == 0x000008, "Member 'WB_TurnChange_C_Play::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TurnChange_C_Play, CallFunc_Play_ReturnValue_1) == 0x000009, "Member 'WB_TurnChange_C_Play::CallFunc_Play_ReturnValue_1' has a wrong offset!");

// Function WB_TurnChange.WB_TurnChange_C.IsPlaying
// 0x0002 (0x0002 - 0x0000)
struct WB_TurnChange_C_IsPlaying final
{
public:
	bool                                          Playing;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TurnChange_C_IsPlaying) == 0x000001, "Wrong alignment on WB_TurnChange_C_IsPlaying");
static_assert(sizeof(WB_TurnChange_C_IsPlaying) == 0x000002, "Wrong size on WB_TurnChange_C_IsPlaying");
static_assert(offsetof(WB_TurnChange_C_IsPlaying, Playing) == 0x000000, "Member 'WB_TurnChange_C_IsPlaying::Playing' has a wrong offset!");
static_assert(offsetof(WB_TurnChange_C_IsPlaying, CallFunc_IsPlaying_ReturnValue) == 0x000001, "Member 'WB_TurnChange_C_IsPlaying::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");

}

