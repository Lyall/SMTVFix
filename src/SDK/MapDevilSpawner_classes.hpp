#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MapDevilSpawner

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass MapDevilSpawner.MapDevilSpawner_C
// 0x0048 (0x0268 - 0x0220)
class AMapDevilSpawner_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0230(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EnemyID;                                           // 0x0234(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         SpawnNum;                                          // 0x0238(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         TestScale;                                         // 0x023C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_CHAR_TYPE                               CharType;                                          // 0x0240(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	E_PARTNER_ID                                  NewVar_0;                                          // 0x0241(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          M_InitialVisibility;                               // 0x0242(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_243[0x5];                                      // 0x0243(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             Evt_SpawnFinished;                                 // 0x0248(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         M_PlaceIndex;                                      // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          M_UseDelay;                                        // 0x025C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_25D[0x3];                                      // 0x025D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         M_Delay;                                           // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         M_DevilArrayIndex;                                 // 0x0264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Evt_SpawnFinished__DelegateSignature(class ACharaBase_C* RetValue);
	void ExecuteUbergraph_MapDevilSpawner(int32 EntryPoint);
	void ReceiveBeginPlay();
	void OnLoaded_574D61D64CECD5C0CC708EA205B71358(TSubclassOf<class UObject> Loaded);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MapDevilSpawner_C">();
	}
	static class AMapDevilSpawner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMapDevilSpawner_C>();
	}
};
static_assert(alignof(AMapDevilSpawner_C) == 0x000008, "Wrong alignment on AMapDevilSpawner_C");
static_assert(sizeof(AMapDevilSpawner_C) == 0x000268, "Wrong size on AMapDevilSpawner_C");
static_assert(offsetof(AMapDevilSpawner_C, UberGraphFrame) == 0x000220, "Member 'AMapDevilSpawner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMapDevilSpawner_C, DefaultSceneRoot) == 0x000228, "Member 'AMapDevilSpawner_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AMapDevilSpawner_C, DeltaTime) == 0x000230, "Member 'AMapDevilSpawner_C::DeltaTime' has a wrong offset!");
static_assert(offsetof(AMapDevilSpawner_C, EnemyID) == 0x000234, "Member 'AMapDevilSpawner_C::EnemyID' has a wrong offset!");
static_assert(offsetof(AMapDevilSpawner_C, SpawnNum) == 0x000238, "Member 'AMapDevilSpawner_C::SpawnNum' has a wrong offset!");
static_assert(offsetof(AMapDevilSpawner_C, TestScale) == 0x00023C, "Member 'AMapDevilSpawner_C::TestScale' has a wrong offset!");
static_assert(offsetof(AMapDevilSpawner_C, CharType) == 0x000240, "Member 'AMapDevilSpawner_C::CharType' has a wrong offset!");
static_assert(offsetof(AMapDevilSpawner_C, NewVar_0) == 0x000241, "Member 'AMapDevilSpawner_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(AMapDevilSpawner_C, M_InitialVisibility) == 0x000242, "Member 'AMapDevilSpawner_C::M_InitialVisibility' has a wrong offset!");
static_assert(offsetof(AMapDevilSpawner_C, Evt_SpawnFinished) == 0x000248, "Member 'AMapDevilSpawner_C::Evt_SpawnFinished' has a wrong offset!");
static_assert(offsetof(AMapDevilSpawner_C, M_PlaceIndex) == 0x000258, "Member 'AMapDevilSpawner_C::M_PlaceIndex' has a wrong offset!");
static_assert(offsetof(AMapDevilSpawner_C, M_UseDelay) == 0x00025C, "Member 'AMapDevilSpawner_C::M_UseDelay' has a wrong offset!");
static_assert(offsetof(AMapDevilSpawner_C, M_Delay) == 0x000260, "Member 'AMapDevilSpawner_C::M_Delay' has a wrong offset!");
static_assert(offsetof(AMapDevilSpawner_C, M_DevilArrayIndex) == 0x000264, "Member 'AMapDevilSpawner_C::M_DevilArrayIndex' has a wrong offset!");

}

