#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RyuketsuHealCtrl

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RyuketsuHealCtrl.BP_RyuketsuHealCtrl_C
// 0x0120 (0x0340 - 0x0220)
class ABP_RyuketsuHealCtrl_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   HealCtrl_Soft;                                     // 0x0230(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class AActor*                                 HealCtrl;                                          // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HealCharaPanelCtrl_C> BPIHealCtrl;                                       // 0x0260(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	FMulticastInlineDelegateProperty_             EvtDis_ReadyEnd;                                   // 0x0270(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         FADE_TIME;                                         // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87B1[0x4];                                     // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   MovieCtrl_Soft;                                    // 0x0288(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class AActor*                                 MovieCtrl;                                         // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             EvtDis_FadeOutEnd_Enter;                           // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             EvtDis_FadeOutEnd_Exit;                            // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TSoftClassPtr<class UClass>                   HealRoomCamera_Soft;                               // 0x02D8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class ACameraActor*                           HealRoomCamera;                                    // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DefaultCameraTarget;                               // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Environment_Soft;                                  // 0x0310(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class AActor*                                 Environment;                                       // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void EvtDis_ReadyEnd__DelegateSignature();
	void EvtDis_FadeOutEnd_Enter__DelegateSignature();
	void EvtDis_FadeOutEnd_Exit__DelegateSignature();
	void ExecuteUbergraph_BP_RyuketsuHealCtrl(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void OnLoaded_0B7B2EED4E4ABB77B55754ACA92DD6CC(TSubclassOf<class UObject> Loaded);
	void OnLoaded_A1A04CD440C4D34233AFEFBF00D5A7F0(TSubclassOf<class UObject> Loaded);
	void OnLoaded_94DB41C2426FC008E7DC6EB68FA34F3B(TSubclassOf<class UObject> Loaded);
	void OnLoaded_91FF8018411A41931592BFAD9297C2D6(TSubclassOf<class UObject> Loaded);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RyuketsuHealCtrl_C">();
	}
	static class ABP_RyuketsuHealCtrl_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_RyuketsuHealCtrl_C>();
	}
};
static_assert(alignof(ABP_RyuketsuHealCtrl_C) == 0x000008, "Wrong alignment on ABP_RyuketsuHealCtrl_C");
static_assert(sizeof(ABP_RyuketsuHealCtrl_C) == 0x000340, "Wrong size on ABP_RyuketsuHealCtrl_C");
static_assert(offsetof(ABP_RyuketsuHealCtrl_C, UberGraphFrame) == 0x000220, "Member 'ABP_RyuketsuHealCtrl_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_RyuketsuHealCtrl_C, DefaultSceneRoot) == 0x000228, "Member 'ABP_RyuketsuHealCtrl_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_RyuketsuHealCtrl_C, HealCtrl_Soft) == 0x000230, "Member 'ABP_RyuketsuHealCtrl_C::HealCtrl_Soft' has a wrong offset!");
static_assert(offsetof(ABP_RyuketsuHealCtrl_C, HealCtrl) == 0x000258, "Member 'ABP_RyuketsuHealCtrl_C::HealCtrl' has a wrong offset!");
static_assert(offsetof(ABP_RyuketsuHealCtrl_C, BPIHealCtrl) == 0x000260, "Member 'ABP_RyuketsuHealCtrl_C::BPIHealCtrl' has a wrong offset!");
static_assert(offsetof(ABP_RyuketsuHealCtrl_C, EvtDis_ReadyEnd) == 0x000270, "Member 'ABP_RyuketsuHealCtrl_C::EvtDis_ReadyEnd' has a wrong offset!");
static_assert(offsetof(ABP_RyuketsuHealCtrl_C, FADE_TIME) == 0x000280, "Member 'ABP_RyuketsuHealCtrl_C::FADE_TIME' has a wrong offset!");
static_assert(offsetof(ABP_RyuketsuHealCtrl_C, MovieCtrl_Soft) == 0x000288, "Member 'ABP_RyuketsuHealCtrl_C::MovieCtrl_Soft' has a wrong offset!");
static_assert(offsetof(ABP_RyuketsuHealCtrl_C, MovieCtrl) == 0x0002B0, "Member 'ABP_RyuketsuHealCtrl_C::MovieCtrl' has a wrong offset!");
static_assert(offsetof(ABP_RyuketsuHealCtrl_C, EvtDis_FadeOutEnd_Enter) == 0x0002B8, "Member 'ABP_RyuketsuHealCtrl_C::EvtDis_FadeOutEnd_Enter' has a wrong offset!");
static_assert(offsetof(ABP_RyuketsuHealCtrl_C, EvtDis_FadeOutEnd_Exit) == 0x0002C8, "Member 'ABP_RyuketsuHealCtrl_C::EvtDis_FadeOutEnd_Exit' has a wrong offset!");
static_assert(offsetof(ABP_RyuketsuHealCtrl_C, HealRoomCamera_Soft) == 0x0002D8, "Member 'ABP_RyuketsuHealCtrl_C::HealRoomCamera_Soft' has a wrong offset!");
static_assert(offsetof(ABP_RyuketsuHealCtrl_C, HealRoomCamera) == 0x000300, "Member 'ABP_RyuketsuHealCtrl_C::HealRoomCamera' has a wrong offset!");
static_assert(offsetof(ABP_RyuketsuHealCtrl_C, DefaultCameraTarget) == 0x000308, "Member 'ABP_RyuketsuHealCtrl_C::DefaultCameraTarget' has a wrong offset!");
static_assert(offsetof(ABP_RyuketsuHealCtrl_C, Environment_Soft) == 0x000310, "Member 'ABP_RyuketsuHealCtrl_C::Environment_Soft' has a wrong offset!");
static_assert(offsetof(ABP_RyuketsuHealCtrl_C, Environment) == 0x000338, "Member 'ABP_RyuketsuHealCtrl_C::Environment' has a wrong offset!");

}

