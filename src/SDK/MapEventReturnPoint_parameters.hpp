#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MapEventReturnPoint

#include "Basic.hpp"

#include "Project_structs.hpp"


namespace SDK::Params
{

// Function MapEventReturnPoint.MapEventReturnPoint_C.UserConstructionScript
// 0x0098 (0x0098 - 0x0000)
struct MapEventReturnPoint_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C4A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScriptMessage                         CallFunc_Array_Get_Item;                           // 0x0008(0x0040)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C4B[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0070(0x0018)()
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MapEventReturnPoint_C_UserConstructionScript) == 0x000008, "Wrong alignment on MapEventReturnPoint_C_UserConstructionScript");
static_assert(sizeof(MapEventReturnPoint_C_UserConstructionScript) == 0x000098, "Wrong size on MapEventReturnPoint_C_UserConstructionScript");
static_assert(offsetof(MapEventReturnPoint_C_UserConstructionScript, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000000, "Member 'MapEventReturnPoint_C_UserConstructionScript::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapEventReturnPoint_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000008, "Member 'MapEventReturnPoint_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MapEventReturnPoint_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'MapEventReturnPoint_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapEventReturnPoint_C_UserConstructionScript, CallFunc_Conv_NameToString_ReturnValue) == 0x000050, "Member 'MapEventReturnPoint_C_UserConstructionScript::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapEventReturnPoint_C_UserConstructionScript, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'MapEventReturnPoint_C_UserConstructionScript::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapEventReturnPoint_C_UserConstructionScript, CallFunc_Conv_StringToText_ReturnValue) == 0x000070, "Member 'MapEventReturnPoint_C_UserConstructionScript::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapEventReturnPoint_C_UserConstructionScript, CallFunc_GetMaterial_ReturnValue) == 0x000088, "Member 'MapEventReturnPoint_C_UserConstructionScript::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapEventReturnPoint_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000090, "Member 'MapEventReturnPoint_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

}

