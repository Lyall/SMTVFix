#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TitleMovieCtrl2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Project_classes.hpp"
#include "CriWareRuntime_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TitleMovieCtrl2.BP_TitleMovieCtrl2_C
// 0x0040 (0x0260 - 0x0220)
class ABP_TitleMovieCtrl2_C final : public AEventBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UManaComponent*                         TItleMana;                                         // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         M_Step;                                            // 0x0238(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EventMovie_C*                      M_MovieWidget;                                     // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         M_FadeRemainSec;                                   // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         M_FadeSec;                                         // 0x024C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         M_BGM_Volume;                                      // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          M_FirstMovie;                                      // 0x0254(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          M_IsPause;                                         // 0x0255(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          M_ForcePause;                                      // 0x0256(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          M_MouseVisible;                                    // 0x0257(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         M_MouseVisibleTime;                                // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          M_EnableMouseSkip;                                 // 0x025C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          M_IsFirst;                                         // 0x025D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_TitleMovieCtrl2(int32 EntryPoint);
	void Private_SeekCompleteNext(int32 FrameNumber, class UManaComponent* ManaComponent);
	void PauseMovie();
	void EndPauseMovieEvent();
	void StartPauseMovieEvent();
	void StartTitleMovieCtrl(bool IsFirstMovie);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void SetMyPause(bool Param_M_IsPause);
	bool IsPlayingMovieEvent();
	bool IsPauseMovieEvent();
	bool IsTalkPart();
	bool CheckPauseEvent();
	void SetMyMouseVisibility(bool Show);
	void IsEndTitleMovieCtrl(bool* IsEnd);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TitleMovieCtrl2_C">();
	}
	static class ABP_TitleMovieCtrl2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TitleMovieCtrl2_C>();
	}
};
static_assert(alignof(ABP_TitleMovieCtrl2_C) == 0x000008, "Wrong alignment on ABP_TitleMovieCtrl2_C");
static_assert(sizeof(ABP_TitleMovieCtrl2_C) == 0x000260, "Wrong size on ABP_TitleMovieCtrl2_C");
static_assert(offsetof(ABP_TitleMovieCtrl2_C, UberGraphFrame) == 0x000220, "Member 'ABP_TitleMovieCtrl2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_TitleMovieCtrl2_C, TItleMana) == 0x000228, "Member 'ABP_TitleMovieCtrl2_C::TItleMana' has a wrong offset!");
static_assert(offsetof(ABP_TitleMovieCtrl2_C, DefaultSceneRoot) == 0x000230, "Member 'ABP_TitleMovieCtrl2_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_TitleMovieCtrl2_C, M_Step) == 0x000238, "Member 'ABP_TitleMovieCtrl2_C::M_Step' has a wrong offset!");
static_assert(offsetof(ABP_TitleMovieCtrl2_C, M_MovieWidget) == 0x000240, "Member 'ABP_TitleMovieCtrl2_C::M_MovieWidget' has a wrong offset!");
static_assert(offsetof(ABP_TitleMovieCtrl2_C, M_FadeRemainSec) == 0x000248, "Member 'ABP_TitleMovieCtrl2_C::M_FadeRemainSec' has a wrong offset!");
static_assert(offsetof(ABP_TitleMovieCtrl2_C, M_FadeSec) == 0x00024C, "Member 'ABP_TitleMovieCtrl2_C::M_FadeSec' has a wrong offset!");
static_assert(offsetof(ABP_TitleMovieCtrl2_C, M_BGM_Volume) == 0x000250, "Member 'ABP_TitleMovieCtrl2_C::M_BGM_Volume' has a wrong offset!");
static_assert(offsetof(ABP_TitleMovieCtrl2_C, M_FirstMovie) == 0x000254, "Member 'ABP_TitleMovieCtrl2_C::M_FirstMovie' has a wrong offset!");
static_assert(offsetof(ABP_TitleMovieCtrl2_C, M_IsPause) == 0x000255, "Member 'ABP_TitleMovieCtrl2_C::M_IsPause' has a wrong offset!");
static_assert(offsetof(ABP_TitleMovieCtrl2_C, M_ForcePause) == 0x000256, "Member 'ABP_TitleMovieCtrl2_C::M_ForcePause' has a wrong offset!");
static_assert(offsetof(ABP_TitleMovieCtrl2_C, M_MouseVisible) == 0x000257, "Member 'ABP_TitleMovieCtrl2_C::M_MouseVisible' has a wrong offset!");
static_assert(offsetof(ABP_TitleMovieCtrl2_C, M_MouseVisibleTime) == 0x000258, "Member 'ABP_TitleMovieCtrl2_C::M_MouseVisibleTime' has a wrong offset!");
static_assert(offsetof(ABP_TitleMovieCtrl2_C, M_EnableMouseSkip) == 0x00025C, "Member 'ABP_TitleMovieCtrl2_C::M_EnableMouseSkip' has a wrong offset!");
static_assert(offsetof(ABP_TitleMovieCtrl2_C, M_IsFirst) == 0x00025D, "Member 'ABP_TitleMovieCtrl2_C::M_IsFirst' has a wrong offset!");

}

