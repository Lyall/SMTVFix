#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_CampSkillWindow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Project_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_CampSkillWindow.WB_CampSkillWindow_C
// 0x00D8 (0x0338 - 0x0260)
class UWB_CampSkillWindow_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           CanvasPanel_SkillList;                             // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanelSkillListRect;                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMessageSimpleTextWidget*               MessageSimpleTextNoData;                           // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerCursor;                                    // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerNoData;                                    // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerPosition;                                  // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerScroll;                                    // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerSkillTitle;                                // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CampSkillList_C*                    WB_CampSkillList_00;                               // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CampSkillList_C*                    WB_CampSkillList_01;                               // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CampSkillList_C*                    WB_CampSkillList_02;                               // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CampSkillList_C*                    WB_CampSkillList_03;                               // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CampSkillList_C*                    WB_CampSkillList_04;                               // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CampSkillList_C*                    WB_CampSkillList_05;                               // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CampSkillList_C*                    WB_CampSkillList_06;                               // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CampSkillList_C*                    WB_CampSkillList_07;                               // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ScrollBar_C*                        WB_ScrollBar;                                      // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              Cursortopposition;                                 // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsExistScrollBar;                                  // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Endanimationflag;                                  // 0x02F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Endmagatsuhianimationflag;                         // 0x02FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_931E[0x1];                                     // 0x02FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FListAnimationBaseData                 Listanimation;                                     // 0x02FC(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         AnimationMode;                                     // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cursoranimationflag;                               // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_931F[0x3];                                     // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Skillcursorposition;                               // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Usetypearray;                                      // 0x0318(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Darkmaskonflag;                                    // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9320[0x3];                                     // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Nowstepcount;                                      // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsItScrollBar;                                     // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9321[0x3];                                     // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Scrollbarvalue;                                    // 0x0334(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetScrollNumber(int32 InMaxNumber, int32 InDispNumber);
	void SetPanelUnique(int32 InIndex, int32 InSkillId, int32 InFaceIconId, int32 InCost, int32 InUseSkill, int32 InTekiseiParam, int32 InUseType, bool InDispOn);
	void IsSkillListRectArea(bool* OutParam);
	void IsItAvobeScrollBar(bool* OutParam);
	void GetScrollBarValue(float* OutValue);
	void DisableListMouseFocus();
	void EnableListMouseFocus();
	void GetMouseHovered(int32* OutIndex);
	void GetMouseOnClicked(int32* OutIndex);
	void ResetMouseFlag();
	void SetUseSkillType(int32 InIndex, int32 InUseType);
	void CalcSkillListAnimation_UseSkill();
	void StopListAnimation();
	void SetInitializeListAnimation(int32 InStepCount, int32 InType, int32 InAmimeType, bool InCursorOn);
	void CalcSkillListAnimation(float InDeltaTime);
	void Start_Use_Skill_List_Animation(bool InListAnimationFlag, bool InDarkMaskOn, int32 InDisplayMax);
	void SetPanelBlank(int32 InIndex, int32 InBlankType, int32 InFaceIconId, int32 InUseSkill, bool InDispOn, bool InDispOnFaceIcon, bool InDispOnMagatsuhi);
	void IsMagatsuhiGaugeAnimationEnd(bool* OutFinished);
	void SetPanelMagatsuhi(int32 InIndex, int32 InSkillId, int32 InFaceIconId, int32 InCost, int32 InUseSkill, int32 InTekiseiParam, int32 InUseType, bool InDispOn);
	void IsSkillListAnimationEnd(bool* OutFinished);
	void SetFaceIconColor(int32 InIndex, int32 InType);
	void SetSkillScrollRate(float InRate);
	void SkillScrollBarOut();
	void SkillScrollBarIn();
	void CampSkillDarkMaskOff(int32 InIndex);
	void CampSkillDarkMaskOn(int32 InIndex);
	void SetPanelSkillNameColor(int32 InIndex, int32 InUseSkill);
	void SkillTitleOff();
	void SkillTitleOn();
	void SetInitPosition();
	void SetCampSkillListCursorPosition(int32 InIndex);
	void PanelSkillNoDataOff();
	void PanelSkillNoDataOn();
	void PanelSkillOff(int32 InIndex);
	void PanelSkillOn(int32 InIndex);
	void SetPanelSkill(int32 InIndex, int32 InSkillId, int32 InFaceIconId, int32 InCost, int32 InUseSkill, int32 InTekiseiParam, int32 InUseType, bool InDispOn);
	void SetPanelSkillCursorAnimation(int32 InIndex, int32 InType, int32 InAnimeType);
	void SetPanelSkillCost(int32 InIndex, int32 InCost);
	void GetCampSkillList(int32 InIndex, class UWB_CampSkillList_C** OutList);
	void SetPanelSkillName(int32 InIndex, int32 InSkillId);
	void CampSkillListOff();
	void CampSkillListOn();
	void BndEvt__WB_CampSkillWindow_WB_ScrollBar_K2Node_ComponentBoundEvent_0_OnScrolledByMouse__DelegateSignature(float Position);
	void BndEvt__SsPlayerNoData_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BndEvt__SsPlayerCursor_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BndEvt__SsPlayerSkillTitle_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BndEvt__SsPlayerScroll_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void ExecuteUbergraph_WB_CampSkillWindow(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_CampSkillWindow_C">();
	}
	static class UWB_CampSkillWindow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_CampSkillWindow_C>();
	}
};
static_assert(alignof(UWB_CampSkillWindow_C) == 0x000008, "Wrong alignment on UWB_CampSkillWindow_C");
static_assert(sizeof(UWB_CampSkillWindow_C) == 0x000338, "Wrong size on UWB_CampSkillWindow_C");
static_assert(offsetof(UWB_CampSkillWindow_C, UberGraphFrame) == 0x000260, "Member 'UWB_CampSkillWindow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, CanvasPanel_SkillList) == 0x000268, "Member 'UWB_CampSkillWindow_C::CanvasPanel_SkillList' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, CanvasPanelSkillListRect) == 0x000270, "Member 'UWB_CampSkillWindow_C::CanvasPanelSkillListRect' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, MessageSimpleTextNoData) == 0x000278, "Member 'UWB_CampSkillWindow_C::MessageSimpleTextNoData' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, SsPlayerCursor) == 0x000280, "Member 'UWB_CampSkillWindow_C::SsPlayerCursor' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, SsPlayerNoData) == 0x000288, "Member 'UWB_CampSkillWindow_C::SsPlayerNoData' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, SsPlayerPosition) == 0x000290, "Member 'UWB_CampSkillWindow_C::SsPlayerPosition' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, SsPlayerScroll) == 0x000298, "Member 'UWB_CampSkillWindow_C::SsPlayerScroll' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, SsPlayerSkillTitle) == 0x0002A0, "Member 'UWB_CampSkillWindow_C::SsPlayerSkillTitle' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, WB_CampSkillList_00) == 0x0002A8, "Member 'UWB_CampSkillWindow_C::WB_CampSkillList_00' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, WB_CampSkillList_01) == 0x0002B0, "Member 'UWB_CampSkillWindow_C::WB_CampSkillList_01' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, WB_CampSkillList_02) == 0x0002B8, "Member 'UWB_CampSkillWindow_C::WB_CampSkillList_02' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, WB_CampSkillList_03) == 0x0002C0, "Member 'UWB_CampSkillWindow_C::WB_CampSkillList_03' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, WB_CampSkillList_04) == 0x0002C8, "Member 'UWB_CampSkillWindow_C::WB_CampSkillList_04' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, WB_CampSkillList_05) == 0x0002D0, "Member 'UWB_CampSkillWindow_C::WB_CampSkillList_05' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, WB_CampSkillList_06) == 0x0002D8, "Member 'UWB_CampSkillWindow_C::WB_CampSkillList_06' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, WB_CampSkillList_07) == 0x0002E0, "Member 'UWB_CampSkillWindow_C::WB_CampSkillList_07' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, WB_ScrollBar) == 0x0002E8, "Member 'UWB_CampSkillWindow_C::WB_ScrollBar' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, Cursortopposition) == 0x0002F0, "Member 'UWB_CampSkillWindow_C::Cursortopposition' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, IsExistScrollBar) == 0x0002F8, "Member 'UWB_CampSkillWindow_C::IsExistScrollBar' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, Endanimationflag) == 0x0002F9, "Member 'UWB_CampSkillWindow_C::Endanimationflag' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, Endmagatsuhianimationflag) == 0x0002FA, "Member 'UWB_CampSkillWindow_C::Endmagatsuhianimationflag' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, Listanimation) == 0x0002FC, "Member 'UWB_CampSkillWindow_C::Listanimation' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, AnimationMode) == 0x00030C, "Member 'UWB_CampSkillWindow_C::AnimationMode' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, Cursoranimationflag) == 0x000310, "Member 'UWB_CampSkillWindow_C::Cursoranimationflag' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, Skillcursorposition) == 0x000314, "Member 'UWB_CampSkillWindow_C::Skillcursorposition' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, Usetypearray) == 0x000318, "Member 'UWB_CampSkillWindow_C::Usetypearray' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, Darkmaskonflag) == 0x000328, "Member 'UWB_CampSkillWindow_C::Darkmaskonflag' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, Nowstepcount) == 0x00032C, "Member 'UWB_CampSkillWindow_C::Nowstepcount' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, IsItScrollBar) == 0x000330, "Member 'UWB_CampSkillWindow_C::IsItScrollBar' has a wrong offset!");
static_assert(offsetof(UWB_CampSkillWindow_C, Scrollbarvalue) == 0x000334, "Member 'UWB_CampSkillWindow_C::Scrollbarvalue' has a wrong offset!");

}

