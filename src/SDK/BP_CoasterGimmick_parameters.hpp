#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CoasterGimmick

#include "Basic.hpp"

#include "E_MapGimmickHideReason_structs.hpp"
#include "Project_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_CoasterGimmick.BP_CoasterGimmick_C.ExecuteUbergraph_BP_CoasterGimmick
// 0x07D0 (0x07D0 - 0x0000)
struct BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool Visible)>                 K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_9B82[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B83[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         CallFunc_SpawnSound2D_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B84[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool WalkedIn)>                K2Node_CreateDelegate_OutputDelegate_2;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_9B85[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B86[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B87[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapCommon_rerutn_1;                    // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_1;             // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B88[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_2;                    // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CoasterSpline_C>  K2Node_DynamicCast_AsBPI_Coaster_Spline;           // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B89[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_2;             // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_GetIsOpen_StartGimmickOpen;           // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_GetIsOpen_EndGimmickOpen;             // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B8A[0x1];                                     // 0x00EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00EC(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_MapGimmickHideReason                        K2Node_Event_HideReason_1;                         // 0x0107(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MapGimmickHideReason                        K2Node_Event_HideReason;                           // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B8B[0x1];                                     // 0x010B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BIT_DEL_ReturnValue;                      // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BIT_ADD_ReturnValue;                      // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B8C[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B8D[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_WalkedIn;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B8E[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B8F[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B90[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMsgCtrl_OutActor;                  // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CoasterGimmickBase_C*               CallFunc_GetOtherGimmick_Gimmick;                  // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MsgCtrl_C>        K2Node_DynamicCast_AsBPI_Msg_Ctrl;                 // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B91[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapGimmick_C>     K2Node_DynamicCast_AsBPI_Map_Gimmick;              // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IIsFinishedWindowOut_OutFinished;         // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B92[0x6];                                     // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MsgCtrl_C>        K2Node_DynamicCast_AsBPI_Msg_Ctrl_1;               // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B93[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MsgCtrl_C>        K2Node_DynamicCast_AsBPI_Msg_Ctrl_2;               // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B94[0x7];                                     // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MsgCtrl_C>        K2Node_DynamicCast_AsBPI_Msg_Ctrl_3;               // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B95[0x3];                                     // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B96[0x2];                                     // 0x01FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0204(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_9B97[0x4];                                     // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B98[0x4];                                     // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerBase_C*                          K2Node_DynamicCast_AsPlayer_Base;                  // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B99[0x3];                                     // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B9A[0x4];                                     // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0260(0x0010)(ConstParm, ReferenceParm)
	class ACustomPawn*                            K2Node_DynamicCast_AsCustom_Pawn;                  // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B9B[0x3];                                     // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_CapsuleTraceSingle_OutHit;                // 0x02A4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingle_ReturnValue;           // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x032D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x032E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B9C[0x1];                                     // 0x032F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0344(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0350(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x035C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0378(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0394(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x03A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B9D[0x4];                                     // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B9E[0x3];                                     // 0x03BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Open;                                 // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Animation;                            // 0x03CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x03CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B9F[0x1];                                     // 0x03CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BA0[0x4];                                     // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_3;                    // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_3;             // 0x03E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BA1[0x3];                                     // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalcNaviPosition_NaviPosition;            // 0x03F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_BPI_GetNaviDevilPawn_Pawn;                // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0414(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomPawn*                            K2Node_DynamicCast_AsCustom_Pawn_1;                // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BA2[0x3];                                     // 0x0429(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_2;                          // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UActorComponent*>                CallFunc_GetComponentsByInterface_ReturnValue;     // 0x0438(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0448(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BA3[0x4];                                     // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_Array_Get_Item_2;                         // 0x0458(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0460(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BA4[0x4];                                     // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaFollower_C>  K2Node_DynamicCast_AsBPI_Chara_Follower;           // 0x0470(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BA5[0x3];                                     // 0x0481(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaFollower_C>  K2Node_DynamicCast_AsBPI_Chara_Follower_1;         // 0x0490(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BA6[0x3];                                     // 0x04A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x04A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BA7[0x4];                                     // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_2;              // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BA8[0x3];                                     // 0x04C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x04C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x04DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x04E8(0x0010)(ZeroConstructor, NoDestructor)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_1;         // 0x04F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0510(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BA9[0x4];                                     // 0x051C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CoasterGimmickBase_C*               CallFunc_GetOtherGimmick_Gimmick_1;                // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Visible;                        // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetVisible_FromRiding_OutVisible;         // 0x052A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BAA[0x5];                                     // 0x052B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FadeOut_White_ReturnValue;                // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BAB[0x7];                                     // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_2;              // 0x0540(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BAC[0x7];                                     // 0x0551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager_1;             // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FadeIn_White_ReturnValue;                 // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BAD[0x7];                                     // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_3;              // 0x0568(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BAE[0x7];                                     // 0x0579(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMsgCtrl_OutActor_1;                // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MsgCtrl_C>        K2Node_DynamicCast_AsBPI_Msg_Ctrl_4;               // 0x0588(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BAF[0x7];                                     // 0x0599(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MsgCtrl_C>        K2Node_DynamicCast_AsBPI_Msg_Ctrl_5;               // 0x05A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BB0[0x7];                                     // 0x05B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MsgCtrl_C>        K2Node_DynamicCast_AsBPI_Msg_Ctrl_6;               // 0x05B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BB1[0x7];                                     // 0x05C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x05D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x05E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x05EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BB2[0x3];                                     // 0x05ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x05F0(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetMapUICtrl_MapUICtrl;                   // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMinimapDataID_DataID;                  // 0x0680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BB3[0x4];                                     // 0x0684(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapUICtrl_C>      K2Node_DynamicCast_AsBPI_Map_UICtrl;               // 0x0688(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BB4[0x7];                                     // 0x0699(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x06A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x06B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_StartCoasterLineMinimap_Dummy;        // 0x06BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BB5[0x3];                                     // 0x06BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapUICtrl_MapUICtrl_1;                 // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapUICtrl_C>      K2Node_DynamicCast_AsBPI_Map_UICtrl_1;             // 0x06C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_FinishCoasterLineMinimap_Dummy;       // 0x06D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BB6[0x6];                                     // 0x06DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CoasterGimmickBase_C*               CallFunc_GetOtherGimmick_Gimmick_2;                // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapUICtrl_MapUICtrl_2;                 // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_NaviDevilGimmick_C> K2Node_DynamicCast_AsBPI_Navi_Devil_Gimmick;       // 0x06F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_25;                    // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BB7[0x7];                                     // 0x0701(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapUICtrl_C>      K2Node_DynamicCast_AsBPI_Map_UICtrl_2;             // 0x0708(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_26;                    // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0719(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BB8[0x2];                                     // 0x071A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_6;            // 0x071C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_GetMinimapDataID_DataID_1;                // 0x072C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_StartCoasterLineMinimap_Dummy_1;      // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BB9[0x7];                                     // 0x0731(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0738(0x0010)(ReferenceParm)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0750(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BBA[0x4];                                     // 0x0754(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_4;              // 0x0758(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_27;                    // 0x0768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0769(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BBB[0x6];                                     // 0x076A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager_2;             // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_5;              // 0x0778(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_28;                    // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BBC[0x7];                                     // 0x0789(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMsgCtrl_OutActor_2;                // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckStartGimmick_StartGimmick;           // 0x0798(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BBD[0x7];                                     // 0x0799(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MsgCtrl_C>        K2Node_DynamicCast_AsBPI_Msg_Ctrl_7;               // 0x07A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_29;                    // 0x07B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BBE[0x7];                                     // 0x07B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MsgCtrl_C>        K2Node_DynamicCast_AsBPI_Msg_Ctrl_8;               // 0x07B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_30;                    // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IMsgCtrl_GetIsMacroEnd_IsEnd;             // 0x07C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckStartGimmick_StartGimmick_1;         // 0x07CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x07CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckStartGimmick_StartGimmick_2;         // 0x07CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_1;                           // 0x07CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x07CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x07CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick) == 0x000008, "Wrong alignment on BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick");
static_assert(sizeof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick) == 0x0007D0, "Wrong size on BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, EntryPoint) == 0x000000, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, Temp_float_Variable) == 0x000004, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, Temp_float_Variable_1) == 0x000008, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_CustomEvent_Loaded) == 0x000030, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, Temp_object_Variable) == 0x000038, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsSound_Atom_Cue) == 0x000040, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsSound_Atom_Cue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_SpawnSound2D_ReturnValue) == 0x000050, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, Temp_bool_Variable) == 0x000058, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_CreateDelegate_OutputDelegate_2) == 0x00005C, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_GetMapCommon_rerutn) == 0x000070, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, Temp_bool_Variable_1) == 0x000078, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_Map_Common) == 0x000080, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, Temp_int_Array_Index_Variable) == 0x000094, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_GetMapCommon_rerutn_1) == 0x000098, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_GetMapCommon_rerutn_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_Map_Common_1) == 0x0000A0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_Map_Common_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_GetMapCommon_rerutn_2) == 0x0000B8, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_GetMapCommon_rerutn_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_Coaster_Spline) == 0x0000C0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_Coaster_Spline' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_3) == 0x0000D0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_Map_Common_2) == 0x0000D8, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_Map_Common_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_4) == 0x0000E8, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BPI_GetIsOpen_StartGimmickOpen) == 0x0000E9, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BPI_GetIsOpen_StartGimmickOpen' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BPI_GetIsOpen_EndGimmickOpen) == 0x0000EA, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BPI_GetIsOpen_EndGimmickOpen' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000EC, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, Temp_int_Loop_Counter_Variable) == 0x0000FC, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_Add_IntInt_ReturnValue) == 0x000100, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000104, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000105, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000106, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_Event_HideReason_1) == 0x000107, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_Event_HideReason_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_Event_HideReason) == 0x000108, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_Event_HideReason' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000109, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00010A, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, Temp_int_Array_Index_Variable_1) == 0x00010C, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BIT_DEL_ReturnValue) == 0x000110, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BIT_DEL_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BIT_ADD_ReturnValue) == 0x000114, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BIT_ADD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000118, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, Temp_int_Loop_Counter_Variable_1) == 0x00011C, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_Add_IntInt_ReturnValue_1) == 0x000120, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_GetGameInstance_ReturnValue) == 0x000128, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_CustomEvent_WalkedIn) == 0x000130, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_CustomEvent_WalkedIn' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_UIManager) == 0x000138, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_5) == 0x000148, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BPI_GetUIManager_UIManager) == 0x000150, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000158, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_6) == 0x000168, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BPI_GetMsgCtrl_OutActor) == 0x000170, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BPI_GetMsgCtrl_OutActor' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_GetOtherGimmick_Gimmick) == 0x000178, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_GetOtherGimmick_Gimmick' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_Msg_Ctrl) == 0x000180, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_Msg_Ctrl' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_7) == 0x000190, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_Map_Gimmick) == 0x000198, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_Map_Gimmick' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_8) == 0x0001A8, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_IIsFinishedWindowOut_OutFinished) == 0x0001A9, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_IIsFinishedWindowOut_OutFinished' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_Msg_Ctrl_1) == 0x0001B0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_Msg_Ctrl_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_9) == 0x0001C0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_Msg_Ctrl_2) == 0x0001C8, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_Msg_Ctrl_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_10) == 0x0001D8, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_Msg_Ctrl_3) == 0x0001E0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_Msg_Ctrl_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_11) == 0x0001F0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, Temp_int_Array_Index_Variable_2) == 0x0001F4, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_IsValid_ReturnValue) == 0x0001F8, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_IsValid_ReturnValue_1) == 0x0001F9, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, Temp_int_Loop_Counter_Variable_2) == 0x0001FC, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_Add_IntInt_ReturnValue_2) == 0x000200, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_CreateDelegate_OutputDelegate_4) == 0x000204, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_GetPlayerPawn_ReturnValue) == 0x000218, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000220, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsPlayer_Base) == 0x000230, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsPlayer_Base' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_12) == 0x000238, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakVector_X) == 0x00023C, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakVector_Y) == 0x000240, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakVector_Z) == 0x000244, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_MakeVector_ReturnValue) == 0x000248, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000258, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_MakeArray_Array) == 0x000260, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsCustom_Pawn) == 0x000270, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsCustom_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_13) == 0x000278, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00027C, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_Add_VectorVector_ReturnValue) == 0x000288, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000294, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000298, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_CapsuleTraceSingle_OutHit) == 0x0002A4, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_CapsuleTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_CapsuleTraceSingle_ReturnValue) == 0x00032C, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_CapsuleTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakHitResult_bBlockingHit) == 0x00032D, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakHitResult_bInitialOverlap) == 0x00032E, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakHitResult_Time) == 0x000330, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakHitResult_Distance) == 0x000334, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakHitResult_Location) == 0x000338, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakHitResult_ImpactPoint) == 0x000344, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakHitResult_Normal) == 0x000350, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakHitResult_ImpactNormal) == 0x00035C, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakHitResult_PhysMat) == 0x000368, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakHitResult_HitActor) == 0x000370, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakHitResult_HitComponent) == 0x000378, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakHitResult_HitBoneName) == 0x000380, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakHitResult_HitItem) == 0x000388, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakHitResult_ElementIndex) == 0x00038C, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakHitResult_FaceIndex) == 0x000390, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakHitResult_TraceStart) == 0x000394, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakHitResult_TraceEnd) == 0x0003A0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_Array_Get_Item) == 0x0003B0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_Array_Length_ReturnValue) == 0x0003B8, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_Less_IntInt_ReturnValue) == 0x0003BC, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_Array_Get_Item_1) == 0x0003C0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_Array_Length_ReturnValue_1) == 0x0003C8, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_Event_Open) == 0x0003CC, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_Event_Open' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_Event_Animation) == 0x0003CD, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_Event_Animation' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_Less_IntInt_ReturnValue_1) == 0x0003CE, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_Select_Default) == 0x0003D0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_GetMapCommon_rerutn_3) == 0x0003D8, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_GetMapCommon_rerutn_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_Map_Common_3) == 0x0003E0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_Map_Common_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_14) == 0x0003F0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_CalcNaviPosition_NaviPosition) == 0x0003F4, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_CalcNaviPosition_NaviPosition' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BPI_GetNaviDevilPawn_Pawn) == 0x000400, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BPI_GetNaviDevilPawn_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakVector_X_1) == 0x000408, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakVector_Y_1) == 0x00040C, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakVector_Z_1) == 0x000410, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_MakeVector_ReturnValue_1) == 0x000414, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsCustom_Pawn_1) == 0x000420, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsCustom_Pawn_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_15) == 0x000428, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakVector_X_2) == 0x00042C, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakVector_Y_2) == 0x000430, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakVector_Z_2) == 0x000434, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_GetComponentsByInterface_ReturnValue) == 0x000438, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_GetComponentsByInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_MakeVector_ReturnValue_2) == 0x000448, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_Array_Get_Item_2) == 0x000458, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_FindLookAtRotation_ReturnValue) == 0x000460, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_Chara_Follower) == 0x000470, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_Chara_Follower' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_16) == 0x000480, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakRotator_Roll) == 0x000484, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakRotator_Pitch) == 0x000488, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakRotator_Yaw) == 0x00048C, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_Chara_Follower_1) == 0x000490, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_Chara_Follower_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_17) == 0x0004A0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_MakeRotator_ReturnValue) == 0x0004A4, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_Array_Length_ReturnValue_2) == 0x0004B0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_GetPlayerPawn_ReturnValue_2) == 0x0004B8, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_GetPlayerPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_Less_IntInt_ReturnValue_2) == 0x0004C0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0004C4, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakVector_X_3) == 0x0004D0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakVector_Y_3) == 0x0004D4, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakVector_Z_3) == 0x0004D8, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_MakeVector_ReturnValue_3) == 0x0004DC, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_CreateDelegate_OutputDelegate_5) == 0x0004E8, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_FindLookAtRotation_ReturnValue_1) == 0x0004F8, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_FindLookAtRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakRotator_Roll_1) == 0x000504, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakRotator_Pitch_1) == 0x000508, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BreakRotator_Yaw_1) == 0x00050C, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_MakeRotator_ReturnValue_1) == 0x000510, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_GetOtherGimmick_Gimmick_1) == 0x000520, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_GetOtherGimmick_Gimmick_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_CustomEvent_Visible) == 0x000528, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_CustomEvent_Visible' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_IsValid_ReturnValue_2) == 0x000529, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_SetVisible_FromRiding_OutVisible) == 0x00052A, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_SetVisible_FromRiding_OutVisible' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_GetGameInstance_ReturnValue_1) == 0x000530, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_FadeOut_White_ReturnValue) == 0x000538, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_FadeOut_White_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_UIManager_2) == 0x000540, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_UIManager_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_18) == 0x000550, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BPI_GetUIManager_UIManager_1) == 0x000558, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BPI_GetUIManager_UIManager_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_FadeIn_White_ReturnValue) == 0x000560, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_FadeIn_White_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_UIManager_3) == 0x000568, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_UIManager_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_19) == 0x000578, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BPI_GetMsgCtrl_OutActor_1) == 0x000580, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BPI_GetMsgCtrl_OutActor_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_Msg_Ctrl_4) == 0x000588, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_Msg_Ctrl_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_20) == 0x000598, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_Msg_Ctrl_5) == 0x0005A0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_Msg_Ctrl_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_21) == 0x0005B0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_Msg_Ctrl_6) == 0x0005B8, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_Msg_Ctrl_6' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_22) == 0x0005C8, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x0005D0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_ComponentBoundEvent_OtherActor_1) == 0x0005D8, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0005E0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x0005E8, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_ComponentBoundEvent_bFromSweep) == 0x0005EC, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_ComponentBoundEvent_SweepResult) == 0x0005F0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_GetMapUICtrl_MapUICtrl) == 0x000678, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_GetMapUICtrl_MapUICtrl' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_GetMinimapDataID_DataID) == 0x000680, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_GetMinimapDataID_DataID' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_Map_UICtrl) == 0x000688, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_Map_UICtrl' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_23) == 0x000698, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0006A0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_ComponentBoundEvent_OtherActor) == 0x0006A8, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_ComponentBoundEvent_OtherComp) == 0x0006B0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0006B8, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BPI_StartCoasterLineMinimap_Dummy) == 0x0006BC, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BPI_StartCoasterLineMinimap_Dummy' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_GetMapUICtrl_MapUICtrl_1) == 0x0006C0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_GetMapUICtrl_MapUICtrl_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_Map_UICtrl_1) == 0x0006C8, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_Map_UICtrl_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_24) == 0x0006D8, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BPI_FinishCoasterLineMinimap_Dummy) == 0x0006D9, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BPI_FinishCoasterLineMinimap_Dummy' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_GetOtherGimmick_Gimmick_2) == 0x0006E0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_GetOtherGimmick_Gimmick_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_GetMapUICtrl_MapUICtrl_2) == 0x0006E8, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_GetMapUICtrl_MapUICtrl_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_Navi_Devil_Gimmick) == 0x0006F0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_Navi_Devil_Gimmick' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_25) == 0x000700, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_25' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_Map_UICtrl_2) == 0x000708, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_Map_UICtrl_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_26) == 0x000718, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_26' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_IsValid_ReturnValue_3) == 0x000719, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_CreateDelegate_OutputDelegate_6) == 0x00071C, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_GetMinimapDataID_DataID_1) == 0x00072C, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_GetMinimapDataID_DataID_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BPI_StartCoasterLineMinimap_Dummy_1) == 0x000730, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BPI_StartCoasterLineMinimap_Dummy_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000738, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_GetGameInstance_ReturnValue_2) == 0x000748, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_Array_Length_ReturnValue_3) == 0x000750, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_UIManager_4) == 0x000758, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_UIManager_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_27) == 0x000768, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_27' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_Greater_IntInt_ReturnValue) == 0x000769, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BPI_GetUIManager_UIManager_2) == 0x000770, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BPI_GetUIManager_UIManager_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_UIManager_5) == 0x000778, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_UIManager_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_28) == 0x000788, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_28' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BPI_GetMsgCtrl_OutActor_2) == 0x000790, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BPI_GetMsgCtrl_OutActor_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_CheckStartGimmick_StartGimmick) == 0x000798, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_CheckStartGimmick_StartGimmick' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_Msg_Ctrl_7) == 0x0007A0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_Msg_Ctrl_7' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_29) == 0x0007B0, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_29' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_AsBPI_Msg_Ctrl_8) == 0x0007B8, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_AsBPI_Msg_Ctrl_8' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_DynamicCast_bSuccess_30) == 0x0007C8, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_DynamicCast_bSuccess_30' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_IMsgCtrl_GetIsMacroEnd_IsEnd) == 0x0007C9, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_IMsgCtrl_GetIsMacroEnd_IsEnd' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_CheckStartGimmick_StartGimmick_1) == 0x0007CA, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_CheckStartGimmick_StartGimmick_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_Not_PreBool_ReturnValue) == 0x0007CB, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_CheckStartGimmick_StartGimmick_2) == 0x0007CC, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_CheckStartGimmick_StartGimmick_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, K2Node_Select_Default_1) == 0x0007CD, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BooleanOR_ReturnValue) == 0x0007CE, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick, CallFunc_BooleanOR_ReturnValue_1) == 0x0007CF, "Member 'BP_CoasterGimmick_C_ExecuteUbergraph_BP_CoasterGimmick::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_CoasterGimmick.BP_CoasterGimmick_C.BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_CoasterGimmick.BP_CoasterGimmick_C.BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BBF[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_CoasterGimmick_C_BndEvt__BP_CoasterGimmick_Hit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_CoasterGimmick.BP_CoasterGimmick_C.OnEvtDis_CallVisible
// 0x0001 (0x0001 - 0x0000)
struct BP_CoasterGimmick_C_OnEvtDis_CallVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterGimmick_C_OnEvtDis_CallVisible) == 0x000001, "Wrong alignment on BP_CoasterGimmick_C_OnEvtDis_CallVisible");
static_assert(sizeof(BP_CoasterGimmick_C_OnEvtDis_CallVisible) == 0x000001, "Wrong size on BP_CoasterGimmick_C_OnEvtDis_CallVisible");
static_assert(offsetof(BP_CoasterGimmick_C_OnEvtDis_CallVisible, Visible) == 0x000000, "Member 'BP_CoasterGimmick_C_OnEvtDis_CallVisible::Visible' has a wrong offset!");

// Function BP_CoasterGimmick.BP_CoasterGimmick_C.SetMeshParam
// 0x0002 (0x0002 - 0x0000)
struct BP_CoasterGimmick_C_SetMeshParam final
{
public:
	bool                                          Open;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Animation;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterGimmick_C_SetMeshParam) == 0x000001, "Wrong alignment on BP_CoasterGimmick_C_SetMeshParam");
static_assert(sizeof(BP_CoasterGimmick_C_SetMeshParam) == 0x000002, "Wrong size on BP_CoasterGimmick_C_SetMeshParam");
static_assert(offsetof(BP_CoasterGimmick_C_SetMeshParam, Open) == 0x000000, "Member 'BP_CoasterGimmick_C_SetMeshParam::Open' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_SetMeshParam, Animation) == 0x000001, "Member 'BP_CoasterGimmick_C_SetMeshParam::Animation' has a wrong offset!");

// Function BP_CoasterGimmick.BP_CoasterGimmick_C.EvtDis_Show_WalkedIn_
// 0x0001 (0x0001 - 0x0000)
struct BP_CoasterGimmick_C_EvtDis_Show_WalkedIn_ final
{
public:
	bool                                          WalkedIn;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterGimmick_C_EvtDis_Show_WalkedIn_) == 0x000001, "Wrong alignment on BP_CoasterGimmick_C_EvtDis_Show_WalkedIn_");
static_assert(sizeof(BP_CoasterGimmick_C_EvtDis_Show_WalkedIn_) == 0x000001, "Wrong size on BP_CoasterGimmick_C_EvtDis_Show_WalkedIn_");
static_assert(offsetof(BP_CoasterGimmick_C_EvtDis_Show_WalkedIn_, WalkedIn) == 0x000000, "Member 'BP_CoasterGimmick_C_EvtDis_Show_WalkedIn_::WalkedIn' has a wrong offset!");

// Function BP_CoasterGimmick.BP_CoasterGimmick_C.BPI_HideGimmick
// 0x0001 (0x0001 - 0x0000)
struct BP_CoasterGimmick_C_BPI_HideGimmick final
{
public:
	E_MapGimmickHideReason                        Param_HideReason;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterGimmick_C_BPI_HideGimmick) == 0x000001, "Wrong alignment on BP_CoasterGimmick_C_BPI_HideGimmick");
static_assert(sizeof(BP_CoasterGimmick_C_BPI_HideGimmick) == 0x000001, "Wrong size on BP_CoasterGimmick_C_BPI_HideGimmick");
static_assert(offsetof(BP_CoasterGimmick_C_BPI_HideGimmick, Param_HideReason) == 0x000000, "Member 'BP_CoasterGimmick_C_BPI_HideGimmick::Param_HideReason' has a wrong offset!");

// Function BP_CoasterGimmick.BP_CoasterGimmick_C.BPI_ShowGimmick
// 0x0001 (0x0001 - 0x0000)
struct BP_CoasterGimmick_C_BPI_ShowGimmick final
{
public:
	E_MapGimmickHideReason                        Param_HideReason;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterGimmick_C_BPI_ShowGimmick) == 0x000001, "Wrong alignment on BP_CoasterGimmick_C_BPI_ShowGimmick");
static_assert(sizeof(BP_CoasterGimmick_C_BPI_ShowGimmick) == 0x000001, "Wrong size on BP_CoasterGimmick_C_BPI_ShowGimmick");
static_assert(offsetof(BP_CoasterGimmick_C_BPI_ShowGimmick, Param_HideReason) == 0x000000, "Member 'BP_CoasterGimmick_C_BPI_ShowGimmick::Param_HideReason' has a wrong offset!");

// Function BP_CoasterGimmick.BP_CoasterGimmick_C.OnLoaded_F3C8ACCB48DFF75596E91DAE0009CFD9
// 0x0008 (0x0008 - 0x0000)
struct BP_CoasterGimmick_C_OnLoaded_F3C8ACCB48DFF75596E91DAE0009CFD9 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterGimmick_C_OnLoaded_F3C8ACCB48DFF75596E91DAE0009CFD9) == 0x000008, "Wrong alignment on BP_CoasterGimmick_C_OnLoaded_F3C8ACCB48DFF75596E91DAE0009CFD9");
static_assert(sizeof(BP_CoasterGimmick_C_OnLoaded_F3C8ACCB48DFF75596E91DAE0009CFD9) == 0x000008, "Wrong size on BP_CoasterGimmick_C_OnLoaded_F3C8ACCB48DFF75596E91DAE0009CFD9");
static_assert(offsetof(BP_CoasterGimmick_C_OnLoaded_F3C8ACCB48DFF75596E91DAE0009CFD9, Loaded) == 0x000000, "Member 'BP_CoasterGimmick_C_OnLoaded_F3C8ACCB48DFF75596E91DAE0009CFD9::Loaded' has a wrong offset!");

// Function BP_CoasterGimmick.BP_CoasterGimmick_C.UserConstructionScript
// 0x0420 (0x0420 - 0x0000)
struct BP_CoasterGimmick_C_UserConstructionScript final
{
public:
	struct FVector                                L_CompLocation;                                    // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BC0[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                L_Comps;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BC1[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0028(0x0018)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BC2[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BC3[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0058(0x0010)(ConstParm, ReferenceParm)
	TArray<class USceneComponent*>                K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BC4[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BC5[0xC];                                     // 0x0094(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	class UTextRenderComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x00E0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IS_EDITOR_BUILD_ReturnValue;              // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BC6[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0198(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_CapsuleTraceSingle_OutHit;                // 0x01A8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingle_ReturnValue;           // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0233(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0254(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BC7[0x4];                                     // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0280(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x029C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x02C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x02D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BC8[0x4];                                     // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_LineTraceMulti_OutHits;                   // 0x02E0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceMulti_ReturnValue;               // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BC9[0x3];                                     // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item_1;                         // 0x02F4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BCA[0x2];                                     // 0x0382(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x038C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0398(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x03A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x03B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BCB[0x4];                                     // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x03D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x03EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x03F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0404(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BCC[0x3];                                     // 0x0405(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CoasterRelayPoint_C*                K2Node_DynamicCast_AsBP_Coaster_Relay_Point;       // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0411(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterGimmick_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_CoasterGimmick_C_UserConstructionScript");
static_assert(sizeof(BP_CoasterGimmick_C_UserConstructionScript) == 0x000420, "Wrong size on BP_CoasterGimmick_C_UserConstructionScript");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, L_CompLocation) == 0x000000, "Member 'BP_CoasterGimmick_C_UserConstructionScript::L_CompLocation' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, L_Comps) == 0x000010, "Member 'BP_CoasterGimmick_C_UserConstructionScript::L_Comps' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_CoasterGimmick_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_Conv_IntToText_ReturnValue) == 0x000028, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_CoasterGimmick_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, Temp_bool_True_if_break_was_hit_Variable) == 0x000048, "Member 'BP_CoasterGimmick_C_UserConstructionScript::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, Temp_int_Array_Index_Variable_1) == 0x00004C, "Member 'BP_CoasterGimmick_C_UserConstructionScript::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, Temp_object_Variable) == 0x000058, "Member 'BP_CoasterGimmick_C_UserConstructionScript::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000068, "Member 'BP_CoasterGimmick_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue_1) == 0x000078, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x00007C, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_1) == 0x000088, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x0000D0, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x0000E0, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000168, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000174, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_IS_EDITOR_BUILD_ReturnValue) == 0x000178, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_IS_EDITOR_BUILD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue) == 0x00017C, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000188, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, Temp_int_Loop_Counter_Variable_1) == 0x000194, "Member 'BP_CoasterGimmick_C_UserConstructionScript::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, Temp_object_Variable_1) == 0x000198, "Member 'BP_CoasterGimmick_C_UserConstructionScript::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_CapsuleTraceSingle_OutHit) == 0x0001A8, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_CapsuleTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_CapsuleTraceSingle_ReturnValue) == 0x000230, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_CapsuleTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000231, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_bBlockingHit) == 0x000232, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_bInitialOverlap) == 0x000233, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_Time) == 0x000234, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_Distance) == 0x000238, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_Location) == 0x00023C, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_ImpactPoint) == 0x000248, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_Normal) == 0x000254, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_ImpactNormal) == 0x000260, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_PhysMat) == 0x000270, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_HitActor) == 0x000278, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_HitComponent) == 0x000280, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_HitBoneName) == 0x000288, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_HitItem) == 0x000290, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_ElementIndex) == 0x000294, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_FaceIndex) == 0x000298, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_TraceStart) == 0x00029C, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_TraceEnd) == 0x0002A8, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002B4, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0002B8, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0002C4, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0002D0, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_LineTraceMulti_OutHits) == 0x0002E0, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_LineTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_LineTraceMulti_ReturnValue) == 0x0002F0, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_LineTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_Array_Get_Item_1) == 0x0002F4, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue_1) == 0x00037C, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000380, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000381, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_Time_1) == 0x000384, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_Distance_1) == 0x000388, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_Location_1) == 0x00038C, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000398, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_Normal_1) == 0x0003A4, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0003B0, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_PhysMat_1) == 0x0003C0, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_HitActor_1) == 0x0003C8, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_HitComponent_1) == 0x0003D0, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_HitBoneName_1) == 0x0003D8, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_HitItem_1) == 0x0003E0, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_ElementIndex_1) == 0x0003E4, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_FaceIndex_1) == 0x0003E8, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_TraceStart_1) == 0x0003EC, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BreakHitResult_TraceEnd_1) == 0x0003F8, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue_1) == 0x000404, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, K2Node_DynamicCast_AsBP_Coaster_Relay_Point) == 0x000408, "Member 'BP_CoasterGimmick_C_UserConstructionScript::K2Node_DynamicCast_AsBP_Coaster_Relay_Point' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000410, "Member 'BP_CoasterGimmick_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue) == 0x000411, "Member 'BP_CoasterGimmick_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_CoasterGimmick.BP_CoasterGimmick_C.CheckActive
// 0x0003 (0x0003 - 0x0000)
struct BP_CoasterGimmick_C_CheckActive final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterGimmick_C_CheckActive) == 0x000001, "Wrong alignment on BP_CoasterGimmick_C_CheckActive");
static_assert(sizeof(BP_CoasterGimmick_C_CheckActive) == 0x000003, "Wrong size on BP_CoasterGimmick_C_CheckActive");
static_assert(offsetof(BP_CoasterGimmick_C_CheckActive, Active) == 0x000000, "Member 'BP_CoasterGimmick_C_CheckActive::Active' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CheckActive, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_CoasterGimmick_C_CheckActive::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CheckActive, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'BP_CoasterGimmick_C_CheckActive::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_CoasterGimmick.BP_CoasterGimmick_C.CheckExist
// 0x0028 (0x0028 - 0x0000)
struct BP_CoasterGimmick_C_CheckExist final
{
public:
	bool                                          Exist;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckStartGimmick_StartGimmick;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BCD[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CoasterSpline_C>  K2Node_DynamicCast_AsBPI_Coaster_Spline;           // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BCE[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BPI_GetGlobalSaveID_SaveID;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCoasterOpenFlag_ReturnValue;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterGimmick_C_CheckExist) == 0x000008, "Wrong alignment on BP_CoasterGimmick_C_CheckExist");
static_assert(sizeof(BP_CoasterGimmick_C_CheckExist) == 0x000028, "Wrong size on BP_CoasterGimmick_C_CheckExist");
static_assert(offsetof(BP_CoasterGimmick_C_CheckExist, Exist) == 0x000000, "Member 'BP_CoasterGimmick_C_CheckExist::Exist' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CheckExist, CallFunc_CheckStartGimmick_StartGimmick) == 0x000001, "Member 'BP_CoasterGimmick_C_CheckExist::CallFunc_CheckStartGimmick_StartGimmick' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CheckExist, K2Node_DynamicCast_AsBPI_Coaster_Spline) == 0x000008, "Member 'BP_CoasterGimmick_C_CheckExist::K2Node_DynamicCast_AsBPI_Coaster_Spline' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CheckExist, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CoasterGimmick_C_CheckExist::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CheckExist, CallFunc_BPI_GetGlobalSaveID_SaveID) == 0x00001C, "Member 'BP_CoasterGimmick_C_CheckExist::CallFunc_BPI_GetGlobalSaveID_SaveID' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CheckExist, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000020, "Member 'BP_CoasterGimmick_C_CheckExist::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CheckExist, CallFunc_CheckCoasterOpenFlag_ReturnValue) == 0x000021, "Member 'BP_CoasterGimmick_C_CheckExist::CallFunc_CheckCoasterOpenFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CheckExist, CallFunc_IsValid_ReturnValue) == 0x000022, "Member 'BP_CoasterGimmick_C_CheckExist::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_CoasterGimmick.BP_CoasterGimmick_C.CalcIconDataID
// 0x0008 (0x0008 - 0x0000)
struct BP_CoasterGimmick_C_CalcIconDataID final
{
public:
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterGimmick_C_CalcIconDataID) == 0x000008, "Wrong alignment on BP_CoasterGimmick_C_CalcIconDataID");
static_assert(sizeof(BP_CoasterGimmick_C_CalcIconDataID) == 0x000008, "Wrong size on BP_CoasterGimmick_C_CalcIconDataID");
static_assert(offsetof(BP_CoasterGimmick_C_CalcIconDataID, CallFunc_GetObjectClass_ReturnValue) == 0x000000, "Member 'BP_CoasterGimmick_C_CalcIconDataID::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function BP_CoasterGimmick.BP_CoasterGimmick_C.OpenIcon
// 0x0020 (0x0020 - 0x0000)
struct BP_CoasterGimmick_C_OpenIcon final
{
public:
	int32                                         CallFunc_GetMinimapDataID_DataID;                  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAreaID_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMapID_ReturnValue;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BCF[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMinimapManager*                        CallFunc_GetMinimapManager_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSaveUniqueIdFromDataId_ReturnValue;    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterGimmick_C_OpenIcon) == 0x000008, "Wrong alignment on BP_CoasterGimmick_C_OpenIcon");
static_assert(sizeof(BP_CoasterGimmick_C_OpenIcon) == 0x000020, "Wrong size on BP_CoasterGimmick_C_OpenIcon");
static_assert(offsetof(BP_CoasterGimmick_C_OpenIcon, CallFunc_GetMinimapDataID_DataID) == 0x000000, "Member 'BP_CoasterGimmick_C_OpenIcon::CallFunc_GetMinimapDataID_DataID' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_OpenIcon, CallFunc_GetAreaID_ReturnValue) == 0x000004, "Member 'BP_CoasterGimmick_C_OpenIcon::CallFunc_GetAreaID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_OpenIcon, CallFunc_GetMapID_ReturnValue) == 0x000008, "Member 'BP_CoasterGimmick_C_OpenIcon::CallFunc_GetMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_OpenIcon, CallFunc_GetMinimapManager_ReturnValue) == 0x000010, "Member 'BP_CoasterGimmick_C_OpenIcon::CallFunc_GetMinimapManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_OpenIcon, CallFunc_GetSaveUniqueIdFromDataId_ReturnValue) == 0x000018, "Member 'BP_CoasterGimmick_C_OpenIcon::CallFunc_GetSaveUniqueIdFromDataId_ReturnValue' has a wrong offset!");

// Function BP_CoasterGimmick.BP_CoasterGimmick_C.CalcNaviPosition
// 0x02E8 (0x02E8 - 0x0000)
struct BP_CoasterGimmick_C_CalcNaviPosition final
{
public:
	struct FVector                                NaviPosition;                                      // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_PrevNaviLocation;                                // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomPawn*                            L_Navi;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_NearestLocation;                                 // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_CompLocation;                                    // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_DistanceMin;                                     // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_Distance;                                        // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_PlayerLocation;                                  // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BD0[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                L_Comps;                                           // 0x0050(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BD1[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckNaviPositionEnable_Enable;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BD2[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BD3[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_BPI_GetNaviDevilPawn_Pawn;                // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomPawn*                            K2Node_DynamicCast_AsCustom_Pawn;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BD4[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BD5[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BD6[0x4];                                     // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0168(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_CapsuleTraceSingle_OutHit;                // 0x017C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingle_ReturnValue;           // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BD7[0x3];                                     // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x020D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x020E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BD8[0x1];                                     // 0x020F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0258(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x02A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BD9[0x2];                                     // 0x02A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BDA[0x3];                                     // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x02BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x02D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterGimmick_C_CalcNaviPosition) == 0x000008, "Wrong alignment on BP_CoasterGimmick_C_CalcNaviPosition");
static_assert(sizeof(BP_CoasterGimmick_C_CalcNaviPosition) == 0x0002E8, "Wrong size on BP_CoasterGimmick_C_CalcNaviPosition");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, NaviPosition) == 0x000000, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::NaviPosition' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, L_PrevNaviLocation) == 0x00000C, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::L_PrevNaviLocation' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, L_Navi) == 0x000018, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::L_Navi' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, L_NearestLocation) == 0x000020, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::L_NearestLocation' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, L_CompLocation) == 0x00002C, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::L_CompLocation' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, L_DistanceMin) == 0x000038, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::L_DistanceMin' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, L_Distance) == 0x00003C, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::L_Distance' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, L_PlayerLocation) == 0x000040, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::L_PlayerLocation' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, L_Comps) == 0x000050, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::L_Comps' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_CheckNaviPositionEnable_Enable) == 0x000080, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_CheckNaviPositionEnable_Enable' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000084, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, K2Node_MakeArray_Array) == 0x000090, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000A0, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x0000AC, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_GetMapCommon_rerutn) == 0x0000B0, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, K2Node_DynamicCast_AsBPI_Map_Common) == 0x0000B8, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000CC, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BPI_GetNaviDevilPawn_Pawn) == 0x0000D8, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BPI_GetNaviDevilPawn_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakVector_X) == 0x0000E0, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakVector_Y) == 0x0000E4, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakVector_Z) == 0x0000E8, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_MakeVector_ReturnValue) == 0x0000EC, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, K2Node_DynamicCast_AsCustom_Pawn) == 0x0000F8, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::K2Node_DynamicCast_AsCustom_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, K2Node_DynamicCast_bSuccess_1) == 0x000100, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_Normal_ReturnValue) == 0x000104, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000110, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_Add_VectorVector_ReturnValue) == 0x00011C, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakVector_X_1) == 0x000128, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakVector_Y_1) == 0x00012C, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakVector_Z_1) == 0x000130, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000134, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_MakeVector_ReturnValue_1) == 0x000140, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_GetPlayerPawn_ReturnValue) == 0x000150, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_Normal_ReturnValue_1) == 0x000158, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, K2Node_MakeArray_Array_1) == 0x000168, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_Dot_VectorVector_ReturnValue) == 0x000178, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_CapsuleTraceSingle_OutHit) == 0x00017C, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_CapsuleTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_CapsuleTraceSingle_ReturnValue) == 0x000204, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_CapsuleTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_DegAcos_ReturnValue) == 0x000208, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00020C, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakHitResult_bBlockingHit) == 0x00020D, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakHitResult_bInitialOverlap) == 0x00020E, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakHitResult_Time) == 0x000210, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakHitResult_Distance) == 0x000214, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakHitResult_Location) == 0x000218, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakHitResult_ImpactPoint) == 0x000224, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakHitResult_Normal) == 0x000230, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakHitResult_ImpactNormal) == 0x00023C, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakHitResult_PhysMat) == 0x000248, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakHitResult_HitActor) == 0x000250, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakHitResult_HitComponent) == 0x000258, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakHitResult_HitBoneName) == 0x000260, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakHitResult_HitItem) == 0x000268, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakHitResult_ElementIndex) == 0x00026C, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakHitResult_FaceIndex) == 0x000270, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakHitResult_TraceStart) == 0x000274, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakHitResult_TraceEnd) == 0x000280, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakVector_X_2) == 0x00028C, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakVector_Y_2) == 0x000290, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakVector_Z_2) == 0x000294, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_MakeVector_ReturnValue_2) == 0x000298, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x0002A4, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0002A5, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, Temp_int_Loop_Counter_Variable) == 0x0002A8, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakVector_X_3) == 0x0002AC, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakVector_Y_3) == 0x0002B0, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_BreakVector_Z_3) == 0x0002B4, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_Less_IntInt_ReturnValue) == 0x0002B8, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_MakeVector_ReturnValue_3) == 0x0002BC, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_Vector_Distance_ReturnValue) == 0x0002C8, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_Add_IntInt_ReturnValue) == 0x0002CC, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x0002D0, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CalcNaviPosition, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0002D8, "Member 'BP_CoasterGimmick_C_CalcNaviPosition::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");

// Function BP_CoasterGimmick.BP_CoasterGimmick_C.ProcRelay
// 0x0004 (0x0004 - 0x0000)
struct BP_CoasterGimmick_C_ProcRelay final
{
public:
	bool                                          RideOn;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetVisible_FromRiding_OutVisible;         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterGimmick_C_ProcRelay) == 0x000001, "Wrong alignment on BP_CoasterGimmick_C_ProcRelay");
static_assert(sizeof(BP_CoasterGimmick_C_ProcRelay) == 0x000004, "Wrong size on BP_CoasterGimmick_C_ProcRelay");
static_assert(offsetof(BP_CoasterGimmick_C_ProcRelay, RideOn) == 0x000000, "Member 'BP_CoasterGimmick_C_ProcRelay::RideOn' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ProcRelay, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_CoasterGimmick_C_ProcRelay::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ProcRelay, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_CoasterGimmick_C_ProcRelay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_ProcRelay, CallFunc_SetVisible_FromRiding_OutVisible) == 0x000003, "Member 'BP_CoasterGimmick_C_ProcRelay::CallFunc_SetVisible_FromRiding_OutVisible' has a wrong offset!");

// Function BP_CoasterGimmick.BP_CoasterGimmick_C.GetMinimapDataID
// 0x0028 (0x0028 - 0x0000)
struct BP_CoasterGimmick_C_GetMinimapDataID final
{
public:
	int32                                         DataId;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckStartGimmick_StartGimmick;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BDB[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CoasterSpline_C>  K2Node_DynamicCast_AsBPI_Coaster_Spline;           // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BDC[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BPI_GetGlobalSaveID_SaveID;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCoasterMinimapID_FromSaveID_ReturnValue; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterGimmick_C_GetMinimapDataID) == 0x000008, "Wrong alignment on BP_CoasterGimmick_C_GetMinimapDataID");
static_assert(sizeof(BP_CoasterGimmick_C_GetMinimapDataID) == 0x000028, "Wrong size on BP_CoasterGimmick_C_GetMinimapDataID");
static_assert(offsetof(BP_CoasterGimmick_C_GetMinimapDataID, DataId) == 0x000000, "Member 'BP_CoasterGimmick_C_GetMinimapDataID::DataId' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_GetMinimapDataID, CallFunc_CheckStartGimmick_StartGimmick) == 0x000004, "Member 'BP_CoasterGimmick_C_GetMinimapDataID::CallFunc_CheckStartGimmick_StartGimmick' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_GetMinimapDataID, K2Node_DynamicCast_AsBPI_Coaster_Spline) == 0x000008, "Member 'BP_CoasterGimmick_C_GetMinimapDataID::K2Node_DynamicCast_AsBPI_Coaster_Spline' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_GetMinimapDataID, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CoasterGimmick_C_GetMinimapDataID::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_GetMinimapDataID, CallFunc_BPI_GetGlobalSaveID_SaveID) == 0x00001C, "Member 'BP_CoasterGimmick_C_GetMinimapDataID::CallFunc_BPI_GetGlobalSaveID_SaveID' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_GetMinimapDataID, CallFunc_GetCoasterMinimapID_FromSaveID_ReturnValue) == 0x000020, "Member 'BP_CoasterGimmick_C_GetMinimapDataID::CallFunc_GetCoasterMinimapID_FromSaveID_ReturnValue' has a wrong offset!");

// Function BP_CoasterGimmick.BP_CoasterGimmick_C.CheckStartGimmick
// 0x0018 (0x0018 - 0x0000)
struct BP_CoasterGimmick_C_CheckStartGimmick final
{
public:
	bool                                          StartGimmick;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BDD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetStartGimmick_Actor;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterGimmick_C_CheckStartGimmick) == 0x000008, "Wrong alignment on BP_CoasterGimmick_C_CheckStartGimmick");
static_assert(sizeof(BP_CoasterGimmick_C_CheckStartGimmick) == 0x000018, "Wrong size on BP_CoasterGimmick_C_CheckStartGimmick");
static_assert(offsetof(BP_CoasterGimmick_C_CheckStartGimmick, StartGimmick) == 0x000000, "Member 'BP_CoasterGimmick_C_CheckStartGimmick::StartGimmick' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CheckStartGimmick, CallFunc_GetStartGimmick_Actor) == 0x000008, "Member 'BP_CoasterGimmick_C_CheckStartGimmick::CallFunc_GetStartGimmick_Actor' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CheckStartGimmick, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'BP_CoasterGimmick_C_CheckStartGimmick::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_CoasterGimmick.BP_CoasterGimmick_C.CheckNaviPositionEnable
// 0x0010 (0x0010 - 0x0000)
struct BP_CoasterGimmick_C_CheckNaviPositionEnable final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BDE[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterGimmick_C_CheckNaviPositionEnable) == 0x000004, "Wrong alignment on BP_CoasterGimmick_C_CheckNaviPositionEnable");
static_assert(sizeof(BP_CoasterGimmick_C_CheckNaviPositionEnable) == 0x000010, "Wrong size on BP_CoasterGimmick_C_CheckNaviPositionEnable");
static_assert(offsetof(BP_CoasterGimmick_C_CheckNaviPositionEnable, Param_Index) == 0x000000, "Member 'BP_CoasterGimmick_C_CheckNaviPositionEnable::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CheckNaviPositionEnable, Enable) == 0x000004, "Member 'BP_CoasterGimmick_C_CheckNaviPositionEnable::Enable' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CheckNaviPositionEnable, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000005, "Member 'BP_CoasterGimmick_C_CheckNaviPositionEnable::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CheckNaviPositionEnable, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'BP_CoasterGimmick_C_CheckNaviPositionEnable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CheckNaviPositionEnable, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_CoasterGimmick_C_CheckNaviPositionEnable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CheckNaviPositionEnable, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'BP_CoasterGimmick_C_CheckNaviPositionEnable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_CheckNaviPositionEnable, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'BP_CoasterGimmick_C_CheckNaviPositionEnable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_CoasterGimmick.BP_CoasterGimmick_C.SetMinimapIconTableRow
// 0x00F8 (0x00F8 - 0x0000)
struct BP_CoasterGimmick_C_SetMinimapIconTableRow final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BDF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMinimapIconTableRow                   OutRow;                                            // 0x0008(0x0058)(Parm, OutParm)
	bool                                          NeedToAddMore;                                     // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BE0[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMinimapDataID_DataID;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BE1[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAreaID_ReturnValue;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMapID_ReturnValue;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BE2[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMinimapIconTableRow                   K2Node_MakeStruct_MinimapIconTableRow;             // 0x00A0(0x0058)()
};
static_assert(alignof(BP_CoasterGimmick_C_SetMinimapIconTableRow) == 0x000008, "Wrong alignment on BP_CoasterGimmick_C_SetMinimapIconTableRow");
static_assert(sizeof(BP_CoasterGimmick_C_SetMinimapIconTableRow) == 0x0000F8, "Wrong size on BP_CoasterGimmick_C_SetMinimapIconTableRow");
static_assert(offsetof(BP_CoasterGimmick_C_SetMinimapIconTableRow, Param_Index) == 0x000000, "Member 'BP_CoasterGimmick_C_SetMinimapIconTableRow::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_SetMinimapIconTableRow, OutRow) == 0x000008, "Member 'BP_CoasterGimmick_C_SetMinimapIconTableRow::OutRow' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_SetMinimapIconTableRow, NeedToAddMore) == 0x000060, "Member 'BP_CoasterGimmick_C_SetMinimapIconTableRow::NeedToAddMore' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_SetMinimapIconTableRow, CallFunc_GetMinimapDataID_DataID) == 0x000064, "Member 'BP_CoasterGimmick_C_SetMinimapIconTableRow::CallFunc_GetMinimapDataID_DataID' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_SetMinimapIconTableRow, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000068, "Member 'BP_CoasterGimmick_C_SetMinimapIconTableRow::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_SetMinimapIconTableRow, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000074, "Member 'BP_CoasterGimmick_C_SetMinimapIconTableRow::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_SetMinimapIconTableRow, CallFunc_BreakRotator_Roll) == 0x000078, "Member 'BP_CoasterGimmick_C_SetMinimapIconTableRow::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_SetMinimapIconTableRow, CallFunc_BreakRotator_Pitch) == 0x00007C, "Member 'BP_CoasterGimmick_C_SetMinimapIconTableRow::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_SetMinimapIconTableRow, CallFunc_BreakRotator_Yaw) == 0x000080, "Member 'BP_CoasterGimmick_C_SetMinimapIconTableRow::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_SetMinimapIconTableRow, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000084, "Member 'BP_CoasterGimmick_C_SetMinimapIconTableRow::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_SetMinimapIconTableRow, CallFunc_FTrunc_ReturnValue) == 0x000090, "Member 'BP_CoasterGimmick_C_SetMinimapIconTableRow::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_SetMinimapIconTableRow, CallFunc_GetAreaID_ReturnValue) == 0x000094, "Member 'BP_CoasterGimmick_C_SetMinimapIconTableRow::CallFunc_GetAreaID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_SetMinimapIconTableRow, CallFunc_GetMapID_ReturnValue) == 0x000098, "Member 'BP_CoasterGimmick_C_SetMinimapIconTableRow::CallFunc_GetMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_SetMinimapIconTableRow, K2Node_MakeStruct_MinimapIconTableRow) == 0x0000A0, "Member 'BP_CoasterGimmick_C_SetMinimapIconTableRow::K2Node_MakeStruct_MinimapIconTableRow' has a wrong offset!");

// Function BP_CoasterGimmick.BP_CoasterGimmick_C.BPI_SetDataId
// 0x0008 (0x0008 - 0x0000)
struct BP_CoasterGimmick_C_BPI_SetDataId final
{
public:
	int32                                         DataId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterGimmick_C_BPI_SetDataId) == 0x000004, "Wrong alignment on BP_CoasterGimmick_C_BPI_SetDataId");
static_assert(sizeof(BP_CoasterGimmick_C_BPI_SetDataId) == 0x000008, "Wrong size on BP_CoasterGimmick_C_BPI_SetDataId");
static_assert(offsetof(BP_CoasterGimmick_C_BPI_SetDataId, DataId) == 0x000000, "Member 'BP_CoasterGimmick_C_BPI_SetDataId::DataId' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_BPI_SetDataId, Dummy) == 0x000004, "Member 'BP_CoasterGimmick_C_BPI_SetDataId::Dummy' has a wrong offset!");

// Function BP_CoasterGimmick.BP_CoasterGimmick_C.BPI_CheckExist
// 0x0002 (0x0002 - 0x0000)
struct BP_CoasterGimmick_C_BPI_CheckExist final
{
public:
	bool                                          Exist;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckExist_Exist;                         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterGimmick_C_BPI_CheckExist) == 0x000001, "Wrong alignment on BP_CoasterGimmick_C_BPI_CheckExist");
static_assert(sizeof(BP_CoasterGimmick_C_BPI_CheckExist) == 0x000002, "Wrong size on BP_CoasterGimmick_C_BPI_CheckExist");
static_assert(offsetof(BP_CoasterGimmick_C_BPI_CheckExist, Exist) == 0x000000, "Member 'BP_CoasterGimmick_C_BPI_CheckExist::Exist' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_BPI_CheckExist, CallFunc_CheckExist_Exist) == 0x000001, "Member 'BP_CoasterGimmick_C_BPI_CheckExist::CallFunc_CheckExist_Exist' has a wrong offset!");

// Function BP_CoasterGimmick.BP_CoasterGimmick_C.BPI_CheckActive_WhenFlag
// 0x0001 (0x0001 - 0x0000)
struct BP_CoasterGimmick_C_BPI_CheckActive_WhenFlag final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterGimmick_C_BPI_CheckActive_WhenFlag) == 0x000001, "Wrong alignment on BP_CoasterGimmick_C_BPI_CheckActive_WhenFlag");
static_assert(sizeof(BP_CoasterGimmick_C_BPI_CheckActive_WhenFlag) == 0x000001, "Wrong size on BP_CoasterGimmick_C_BPI_CheckActive_WhenFlag");
static_assert(offsetof(BP_CoasterGimmick_C_BPI_CheckActive_WhenFlag, Active) == 0x000000, "Member 'BP_CoasterGimmick_C_BPI_CheckActive_WhenFlag::Active' has a wrong offset!");

// Function BP_CoasterGimmick.BP_CoasterGimmick_C.BPI_GetMinimapDataID
// 0x0008 (0x0008 - 0x0000)
struct BP_CoasterGimmick_C_BPI_GetMinimapDataID final
{
public:
	int32                                         DataId;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMinimapDataID_DataID;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterGimmick_C_BPI_GetMinimapDataID) == 0x000004, "Wrong alignment on BP_CoasterGimmick_C_BPI_GetMinimapDataID");
static_assert(sizeof(BP_CoasterGimmick_C_BPI_GetMinimapDataID) == 0x000008, "Wrong size on BP_CoasterGimmick_C_BPI_GetMinimapDataID");
static_assert(offsetof(BP_CoasterGimmick_C_BPI_GetMinimapDataID, DataId) == 0x000000, "Member 'BP_CoasterGimmick_C_BPI_GetMinimapDataID::DataId' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmick_C_BPI_GetMinimapDataID, CallFunc_GetMinimapDataID_DataID) == 0x000004, "Member 'BP_CoasterGimmick_C_BPI_GetMinimapDataID::CallFunc_GetMinimapDataID_DataID' has a wrong offset!");

}

