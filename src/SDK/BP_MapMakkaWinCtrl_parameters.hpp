#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapMakkaWinCtrl

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "E_MakkaWindowAnimState_structs.hpp"


namespace SDK::Params
{

// Function BP_MapMakkaWinCtrl.BP_MapMakkaWinCtrl_C.ExecuteUbergraph_BP_MapMakkaWinCtrl
// 0x0168 (0x0168 - 0x0000)
struct BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MiitsuWindow_IsShow_IsShow;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MiitsuWindow_IsPlayingPointAnim_IsPlaying; // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PrevMiitsu_2;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_AddMiitsu_1;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PrevMiitsu_1;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MiitsuWindow_IsShow_IsShow_1;             // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PrevMiitsu;                           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_AddMiitsu;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MiitsuWindow_IsShow_IsShow_2;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckMapPause_IsPause;                // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_MakkaWindowAnimState                        CallFunc_MakkaWindow2_GetAnimState_Money_AnimState; // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MakkaWindowAnimState                        CallFunc_MakkaWindow2_GetAnimState_Total_AnimState; // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87[0x1];                                       // 0x0087(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F[0x1];                                       // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_5;                               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F6[0x2];                                       // 0x00F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PrevMakka_1;                          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_AddMakka;                             // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PrevMakka;                            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_8;                               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Lock;                                 // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_ReturnAreaName;                       // 0x011E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x011F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_14;                // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_2;                 // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12A[0x2];                                      // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_9;                               // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_15;                // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_1;                    // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_1;             // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckMapPause_IsPause_1;              // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_MakkaWindowAnimState                        CallFunc_MakkaWindow2_GetAnimState_Money_AnimState_1; // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MakkaWindowAnimState                        CallFunc_MakkaWindow2_GetAnimState_Total_AnimState_1; // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MakkaWindow2_IsPlayingDigitAnim_IsPlaying; // 0x015F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_MakkaWindowAnimState                        CallFunc_MakkaWindow2_GetAnimState_Money_AnimState_2; // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MakkaWindowAnimState                        CallFunc_MakkaWindow2_GetAnimState_Total_AnimState_2; // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x0166(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl) == 0x000008, "Wrong alignment on BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl");
static_assert(sizeof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl) == 0x000168, "Wrong size on BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, EntryPoint) == 0x000000, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_MiitsuWindow_IsShow_IsShow) == 0x000004, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_MiitsuWindow_IsShow_IsShow' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Greater_IntInt_ReturnValue) == 0x00000D, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Array_Length_ReturnValue_1) == 0x000010, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Array_Length_ReturnValue_2) == 0x00001C, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000021, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_MiitsuWindow_IsPlayingPointAnim_IsPlaying) == 0x000022, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_MiitsuWindow_IsPlayingPointAnim_IsPlaying' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Not_PreBool_ReturnValue_1) == 0x000023, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, Temp_int_Variable) == 0x000024, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Not_PreBool_ReturnValue_2) == 0x000028, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, K2Node_Event_PrevMiitsu_2) == 0x00002C, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::K2Node_Event_PrevMiitsu_2' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, K2Node_Event_AddMiitsu_1) == 0x000030, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::K2Node_Event_AddMiitsu_1' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Array_Length_ReturnValue_3) == 0x000034, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000038, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, K2Node_Event_PrevMiitsu_1) == 0x00003C, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::K2Node_Event_PrevMiitsu_1' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Not_PreBool_ReturnValue_3) == 0x000044, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Array_Length_ReturnValue_4) == 0x00004C, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000050, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_MiitsuWindow_IsShow_IsShow_1) == 0x000051, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_MiitsuWindow_IsShow_IsShow_1' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, K2Node_Event_PrevMiitsu) == 0x000054, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::K2Node_Event_PrevMiitsu' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, K2Node_Event_AddMiitsu) == 0x000058, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::K2Node_Event_AddMiitsu' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_MiitsuWindow_IsShow_IsShow_2) == 0x00005C, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_MiitsuWindow_IsShow_IsShow_2' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Not_PreBool_ReturnValue_4) == 0x00005D, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Add_IntInt_ReturnValue_2) == 0x000060, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Not_PreBool_ReturnValue_5) == 0x000064, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_GetMapCommon_rerutn) == 0x000068, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, K2Node_DynamicCast_AsBPI_Map_Common) == 0x000070, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_BPI_CheckMapPause_IsPause) == 0x000081, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_BPI_CheckMapPause_IsPause' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_MakkaWindow2_GetAnimState_Money_AnimState) == 0x000082, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_MakkaWindow2_GetAnimState_Money_AnimState' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_MakkaWindow2_GetAnimState_Total_AnimState) == 0x000083, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_MakkaWindow2_GetAnimState_Total_AnimState' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000084, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000085, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_BooleanAND_ReturnValue) == 0x000086, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, K2Node_Event_DeltaSeconds) == 0x000088, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Not_PreBool_ReturnValue_6) == 0x00008C, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_BooleanAND_ReturnValue_1) == 0x00008D, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, K2Node_SwitchInteger_CmpSuccess) == 0x00008E, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, Temp_int_Variable_1) == 0x000090, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Add_IntInt_ReturnValue_3) == 0x000094, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Add_IntInt_ReturnValue_4) == 0x000098, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Add_FloatFloat_ReturnValue) == 0x00009C, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, Temp_int_Variable_2) == 0x0000A0, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000A4, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000A8, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, Temp_int_Variable_3) == 0x0000AC, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Add_IntInt_ReturnValue_6) == 0x0000B0, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0000B4, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Add_IntInt_ReturnValue_7) == 0x0000B8, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, Temp_int_Variable_4) == 0x0000BC, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0000C0, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_BooleanAND_ReturnValue_2) == 0x0000C1, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, Temp_int_Variable_5) == 0x0000C4, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x0000C8, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Add_IntInt_ReturnValue_8) == 0x0000CC, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Add_IntInt_ReturnValue_9) == 0x0000D0, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, Temp_int_Variable_6) == 0x0000D4, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, Temp_int_Variable_7) == 0x0000D8, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Add_IntInt_ReturnValue_10) == 0x0000DC, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Array_Length_ReturnValue_5) == 0x0000E0, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Array_Length_ReturnValue_6) == 0x0000E4, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Greater_IntInt_ReturnValue_3) == 0x0000E8, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Greater_IntInt_ReturnValue_4) == 0x0000E9, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Array_Length_ReturnValue_7) == 0x0000EC, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Array_Length_ReturnValue_8) == 0x0000F0, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Greater_IntInt_ReturnValue_5) == 0x0000F4, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x0000F5, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Add_IntInt_ReturnValue_11) == 0x0000F8, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Add_IntInt_ReturnValue_12) == 0x0000FC, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Add_IntInt_ReturnValue_13) == 0x000100, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, K2Node_Event_PrevMakka_1) == 0x000104, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::K2Node_Event_PrevMakka_1' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, K2Node_Event_AddMakka) == 0x000108, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::K2Node_Event_AddMakka' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, K2Node_Event_PrevMakka) == 0x00010C, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::K2Node_Event_PrevMakka' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Array_Add_ReturnValue_1) == 0x000110, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Not_PreBool_ReturnValue_7) == 0x000114, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, Temp_int_Variable_8) == 0x000118, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, K2Node_SwitchInteger_CmpSuccess_1) == 0x00011C, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, K2Node_Event_Lock) == 0x00011D, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::K2Node_Event_Lock' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, K2Node_Event_ReturnAreaName) == 0x00011E, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::K2Node_Event_ReturnAreaName' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Not_PreBool_ReturnValue_8) == 0x00011F, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Not_PreBool_ReturnValue_9) == 0x000120, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Add_IntInt_ReturnValue_14) == 0x000124, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Add_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, K2Node_SwitchInteger_CmpSuccess_2) == 0x000128, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::K2Node_SwitchInteger_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x000129, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Array_Length_ReturnValue_9) == 0x00012C, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x000130, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, Temp_int_Variable_9) == 0x000134, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Add_IntInt_ReturnValue_15) == 0x000138, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Add_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_GetMapCommon_rerutn_1) == 0x000140, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_GetMapCommon_rerutn_1' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, K2Node_DynamicCast_AsBPI_Map_Common_1) == 0x000148, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::K2Node_DynamicCast_AsBPI_Map_Common_1' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, K2Node_DynamicCast_bSuccess_1) == 0x000158, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_BPI_CheckMapPause_IsPause_1) == 0x000159, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_BPI_CheckMapPause_IsPause_1' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_MakkaWindow2_GetAnimState_Money_AnimState_1) == 0x00015A, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_MakkaWindow2_GetAnimState_Money_AnimState_1' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_MakkaWindow2_GetAnimState_Total_AnimState_1) == 0x00015B, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_MakkaWindow2_GetAnimState_Total_AnimState_1' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00015C, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00015D, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_BooleanAND_ReturnValue_3) == 0x00015E, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_MakkaWindow2_IsPlayingDigitAnim_IsPlaying) == 0x00015F, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_MakkaWindow2_IsPlayingDigitAnim_IsPlaying' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Not_PreBool_ReturnValue_10) == 0x000160, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_MakkaWindow2_GetAnimState_Money_AnimState_2) == 0x000161, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_MakkaWindow2_GetAnimState_Money_AnimState_2' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_MakkaWindow2_GetAnimState_Total_AnimState_2) == 0x000162, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_MakkaWindow2_GetAnimState_Total_AnimState_2' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000163, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000164, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_BooleanAND_ReturnValue_4) == 0x000165, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl, CallFunc_Not_PreBool_ReturnValue_11) == 0x000166, "Member 'BP_MapMakkaWinCtrl_C_ExecuteUbergraph_BP_MapMakkaWinCtrl::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");

// Function BP_MapMakkaWinCtrl.BP_MapMakkaWinCtrl_C.BPI_SetLock_MapMakkaWin
// 0x0002 (0x0002 - 0x0000)
struct BP_MapMakkaWinCtrl_C_BPI_SetLock_MapMakkaWin final
{
public:
	bool                                          Param_Lock;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnAreaName;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapMakkaWinCtrl_C_BPI_SetLock_MapMakkaWin) == 0x000001, "Wrong alignment on BP_MapMakkaWinCtrl_C_BPI_SetLock_MapMakkaWin");
static_assert(sizeof(BP_MapMakkaWinCtrl_C_BPI_SetLock_MapMakkaWin) == 0x000002, "Wrong size on BP_MapMakkaWinCtrl_C_BPI_SetLock_MapMakkaWin");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_BPI_SetLock_MapMakkaWin, Param_Lock) == 0x000000, "Member 'BP_MapMakkaWinCtrl_C_BPI_SetLock_MapMakkaWin::Param_Lock' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_BPI_SetLock_MapMakkaWin, ReturnAreaName) == 0x000001, "Member 'BP_MapMakkaWinCtrl_C_BPI_SetLock_MapMakkaWin::ReturnAreaName' has a wrong offset!");

// Function BP_MapMakkaWinCtrl.BP_MapMakkaWinCtrl_C.BPI_SetPrevMakka_MakkaWindow
// 0x0004 (0x0004 - 0x0000)
struct BP_MapMakkaWinCtrl_C_BPI_SetPrevMakka_MakkaWindow final
{
public:
	int32                                         Param_PrevMakka;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapMakkaWinCtrl_C_BPI_SetPrevMakka_MakkaWindow) == 0x000004, "Wrong alignment on BP_MapMakkaWinCtrl_C_BPI_SetPrevMakka_MakkaWindow");
static_assert(sizeof(BP_MapMakkaWinCtrl_C_BPI_SetPrevMakka_MakkaWindow) == 0x000004, "Wrong size on BP_MapMakkaWinCtrl_C_BPI_SetPrevMakka_MakkaWindow");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_BPI_SetPrevMakka_MakkaWindow, Param_PrevMakka) == 0x000000, "Member 'BP_MapMakkaWinCtrl_C_BPI_SetPrevMakka_MakkaWindow::Param_PrevMakka' has a wrong offset!");

// Function BP_MapMakkaWinCtrl.BP_MapMakkaWinCtrl_C.BPI_OpenMapMakkaWin
// 0x0008 (0x0008 - 0x0000)
struct BP_MapMakkaWinCtrl_C_BPI_OpenMapMakkaWin final
{
public:
	int32                                         Param_PrevMakka;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddMakka;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapMakkaWinCtrl_C_BPI_OpenMapMakkaWin) == 0x000004, "Wrong alignment on BP_MapMakkaWinCtrl_C_BPI_OpenMapMakkaWin");
static_assert(sizeof(BP_MapMakkaWinCtrl_C_BPI_OpenMapMakkaWin) == 0x000008, "Wrong size on BP_MapMakkaWinCtrl_C_BPI_OpenMapMakkaWin");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_BPI_OpenMapMakkaWin, Param_PrevMakka) == 0x000000, "Member 'BP_MapMakkaWinCtrl_C_BPI_OpenMapMakkaWin::Param_PrevMakka' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_BPI_OpenMapMakkaWin, AddMakka) == 0x000004, "Member 'BP_MapMakkaWinCtrl_C_BPI_OpenMapMakkaWin::AddMakka' has a wrong offset!");

// Function BP_MapMakkaWinCtrl.BP_MapMakkaWinCtrl_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_MapMakkaWinCtrl_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapMakkaWinCtrl_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_MapMakkaWinCtrl_C_ReceiveTick");
static_assert(sizeof(BP_MapMakkaWinCtrl_C_ReceiveTick) == 0x000004, "Wrong size on BP_MapMakkaWinCtrl_C_ReceiveTick");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_MapMakkaWinCtrl_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_MapMakkaWinCtrl.BP_MapMakkaWinCtrl_C.BPI_OpenMapMiitsuWin_ManualNext
// 0x0008 (0x0008 - 0x0000)
struct BP_MapMakkaWinCtrl_C_BPI_OpenMapMiitsuWin_ManualNext final
{
public:
	int32                                         Param_PrevMiitsu;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddMiitsu;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapMakkaWinCtrl_C_BPI_OpenMapMiitsuWin_ManualNext) == 0x000004, "Wrong alignment on BP_MapMakkaWinCtrl_C_BPI_OpenMapMiitsuWin_ManualNext");
static_assert(sizeof(BP_MapMakkaWinCtrl_C_BPI_OpenMapMiitsuWin_ManualNext) == 0x000008, "Wrong size on BP_MapMakkaWinCtrl_C_BPI_OpenMapMiitsuWin_ManualNext");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_BPI_OpenMapMiitsuWin_ManualNext, Param_PrevMiitsu) == 0x000000, "Member 'BP_MapMakkaWinCtrl_C_BPI_OpenMapMiitsuWin_ManualNext::Param_PrevMiitsu' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_BPI_OpenMapMiitsuWin_ManualNext, AddMiitsu) == 0x000004, "Member 'BP_MapMakkaWinCtrl_C_BPI_OpenMapMiitsuWin_ManualNext::AddMiitsu' has a wrong offset!");

// Function BP_MapMakkaWinCtrl.BP_MapMakkaWinCtrl_C.BPI_SetPrevMiitsu_MiitsuWindow
// 0x0004 (0x0004 - 0x0000)
struct BP_MapMakkaWinCtrl_C_BPI_SetPrevMiitsu_MiitsuWindow final
{
public:
	int32                                         Param_PrevMiitsu;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapMakkaWinCtrl_C_BPI_SetPrevMiitsu_MiitsuWindow) == 0x000004, "Wrong alignment on BP_MapMakkaWinCtrl_C_BPI_SetPrevMiitsu_MiitsuWindow");
static_assert(sizeof(BP_MapMakkaWinCtrl_C_BPI_SetPrevMiitsu_MiitsuWindow) == 0x000004, "Wrong size on BP_MapMakkaWinCtrl_C_BPI_SetPrevMiitsu_MiitsuWindow");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_BPI_SetPrevMiitsu_MiitsuWindow, Param_PrevMiitsu) == 0x000000, "Member 'BP_MapMakkaWinCtrl_C_BPI_SetPrevMiitsu_MiitsuWindow::Param_PrevMiitsu' has a wrong offset!");

// Function BP_MapMakkaWinCtrl.BP_MapMakkaWinCtrl_C.BPI_OpenMapMiitsuWin
// 0x0008 (0x0008 - 0x0000)
struct BP_MapMakkaWinCtrl_C_BPI_OpenMapMiitsuWin final
{
public:
	int32                                         Param_PrevMiitsu;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddMiitsu;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapMakkaWinCtrl_C_BPI_OpenMapMiitsuWin) == 0x000004, "Wrong alignment on BP_MapMakkaWinCtrl_C_BPI_OpenMapMiitsuWin");
static_assert(sizeof(BP_MapMakkaWinCtrl_C_BPI_OpenMapMiitsuWin) == 0x000008, "Wrong size on BP_MapMakkaWinCtrl_C_BPI_OpenMapMiitsuWin");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_BPI_OpenMapMiitsuWin, Param_PrevMiitsu) == 0x000000, "Member 'BP_MapMakkaWinCtrl_C_BPI_OpenMapMiitsuWin::Param_PrevMiitsu' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_BPI_OpenMapMiitsuWin, AddMiitsu) == 0x000004, "Member 'BP_MapMakkaWinCtrl_C_BPI_OpenMapMiitsuWin::AddMiitsu' has a wrong offset!");

// Function BP_MapMakkaWinCtrl.BP_MapMakkaWinCtrl_C.ShowAreaName
// 0x0028 (0x0028 - 0x0000)
struct BP_MapMakkaWinCtrl_C_ShowAreaName final
{
public:
	class AActor*                                 CallFunc_GetMapUICtrl_MapUICtrl;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_OPTION_COMMON_SELECT_TYPE                   CallFunc_GetMoveDisplayOther_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapUICtrl_C>      K2Node_DynamicCast_AsBPI_Map_UICtrl;               // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapMakkaWinCtrl_C_ShowAreaName) == 0x000008, "Wrong alignment on BP_MapMakkaWinCtrl_C_ShowAreaName");
static_assert(sizeof(BP_MapMakkaWinCtrl_C_ShowAreaName) == 0x000028, "Wrong size on BP_MapMakkaWinCtrl_C_ShowAreaName");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ShowAreaName, CallFunc_GetMapUICtrl_MapUICtrl) == 0x000000, "Member 'BP_MapMakkaWinCtrl_C_ShowAreaName::CallFunc_GetMapUICtrl_MapUICtrl' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ShowAreaName, CallFunc_GetMoveDisplayOther_ReturnValue) == 0x000008, "Member 'BP_MapMakkaWinCtrl_C_ShowAreaName::CallFunc_GetMoveDisplayOther_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ShowAreaName, K2Node_DynamicCast_AsBPI_Map_UICtrl) == 0x000010, "Member 'BP_MapMakkaWinCtrl_C_ShowAreaName::K2Node_DynamicCast_AsBPI_Map_UICtrl' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ShowAreaName, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_MapMakkaWinCtrl_C_ShowAreaName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_ShowAreaName, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'BP_MapMakkaWinCtrl_C_ShowAreaName::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_MapMakkaWinCtrl.BP_MapMakkaWinCtrl_C.HideAreaName
// 0x0030 (0x0030 - 0x0000)
struct BP_MapMakkaWinCtrl_C_HideAreaName final
{
public:
	E_LOCATION_WINDOW_STATE                       CallFunc_LocationWindow_getState_State;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapUICtrl_MapUICtrl;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapUICtrl_C>      K2Node_DynamicCast_AsBPI_Map_UICtrl;               // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapMakkaWinCtrl_C_HideAreaName) == 0x000008, "Wrong alignment on BP_MapMakkaWinCtrl_C_HideAreaName");
static_assert(sizeof(BP_MapMakkaWinCtrl_C_HideAreaName) == 0x000030, "Wrong size on BP_MapMakkaWinCtrl_C_HideAreaName");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_HideAreaName, CallFunc_LocationWindow_getState_State) == 0x000000, "Member 'BP_MapMakkaWinCtrl_C_HideAreaName::CallFunc_LocationWindow_getState_State' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_HideAreaName, CallFunc_GetMapUICtrl_MapUICtrl) == 0x000008, "Member 'BP_MapMakkaWinCtrl_C_HideAreaName::CallFunc_GetMapUICtrl_MapUICtrl' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_HideAreaName, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'BP_MapMakkaWinCtrl_C_HideAreaName::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_HideAreaName, K2Node_DynamicCast_AsBPI_Map_UICtrl) == 0x000018, "Member 'BP_MapMakkaWinCtrl_C_HideAreaName::K2Node_DynamicCast_AsBPI_Map_UICtrl' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_HideAreaName, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_MapMakkaWinCtrl_C_HideAreaName::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_MapMakkaWinCtrl.BP_MapMakkaWinCtrl_C.BPI_CheckActive
// 0x0002 (0x0002 - 0x0000)
struct BP_MapMakkaWinCtrl_C_BPI_CheckActive final
{
public:
	bool                                          Param_Active;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapMakkaWinCtrl_C_BPI_CheckActive) == 0x000001, "Wrong alignment on BP_MapMakkaWinCtrl_C_BPI_CheckActive");
static_assert(sizeof(BP_MapMakkaWinCtrl_C_BPI_CheckActive) == 0x000002, "Wrong size on BP_MapMakkaWinCtrl_C_BPI_CheckActive");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_BPI_CheckActive, Param_Active) == 0x000000, "Member 'BP_MapMakkaWinCtrl_C_BPI_CheckActive::Param_Active' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_BPI_CheckActive, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_MapMakkaWinCtrl_C_BPI_CheckActive::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MapMakkaWinCtrl.BP_MapMakkaWinCtrl_C.BPI_NextMapMiitsuWin
// 0x0002 (0x0002 - 0x0000)
struct BP_MapMakkaWinCtrl_C_BPI_NextMapMiitsuWin final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckNext_MapMiitsuWin_Next;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapMakkaWinCtrl_C_BPI_NextMapMiitsuWin) == 0x000001, "Wrong alignment on BP_MapMakkaWinCtrl_C_BPI_NextMapMiitsuWin");
static_assert(sizeof(BP_MapMakkaWinCtrl_C_BPI_NextMapMiitsuWin) == 0x000002, "Wrong size on BP_MapMakkaWinCtrl_C_BPI_NextMapMiitsuWin");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_BPI_NextMapMiitsuWin, Success) == 0x000000, "Member 'BP_MapMakkaWinCtrl_C_BPI_NextMapMiitsuWin::Success' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_BPI_NextMapMiitsuWin, CallFunc_BPI_CheckNext_MapMiitsuWin_Next) == 0x000001, "Member 'BP_MapMakkaWinCtrl_C_BPI_NextMapMiitsuWin::CallFunc_BPI_CheckNext_MapMiitsuWin_Next' has a wrong offset!");

// Function BP_MapMakkaWinCtrl.BP_MapMakkaWinCtrl_C.BPI_CheckNext_MapMiitsuWin
// 0x0003 (0x0003 - 0x0000)
struct BP_MapMakkaWinCtrl_C_BPI_CheckNext_MapMiitsuWin final
{
public:
	bool                                          Next;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapMakkaWinCtrl_C_BPI_CheckNext_MapMiitsuWin) == 0x000001, "Wrong alignment on BP_MapMakkaWinCtrl_C_BPI_CheckNext_MapMiitsuWin");
static_assert(sizeof(BP_MapMakkaWinCtrl_C_BPI_CheckNext_MapMiitsuWin) == 0x000003, "Wrong size on BP_MapMakkaWinCtrl_C_BPI_CheckNext_MapMiitsuWin");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_BPI_CheckNext_MapMiitsuWin, Next) == 0x000000, "Member 'BP_MapMakkaWinCtrl_C_BPI_CheckNext_MapMiitsuWin::Next' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_BPI_CheckNext_MapMiitsuWin, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_MapMakkaWinCtrl_C_BPI_CheckNext_MapMiitsuWin::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_BPI_CheckNext_MapMiitsuWin, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_MapMakkaWinCtrl_C_BPI_CheckNext_MapMiitsuWin::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_MapMakkaWinCtrl.BP_MapMakkaWinCtrl_C.BPI_CheckActive_Miitsu
// 0x0003 (0x0003 - 0x0000)
struct BP_MapMakkaWinCtrl_C_BPI_CheckActive_Miitsu final
{
public:
	bool                                          Param_Active;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckActive_Active;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapMakkaWinCtrl_C_BPI_CheckActive_Miitsu) == 0x000001, "Wrong alignment on BP_MapMakkaWinCtrl_C_BPI_CheckActive_Miitsu");
static_assert(sizeof(BP_MapMakkaWinCtrl_C_BPI_CheckActive_Miitsu) == 0x000003, "Wrong size on BP_MapMakkaWinCtrl_C_BPI_CheckActive_Miitsu");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_BPI_CheckActive_Miitsu, Param_Active) == 0x000000, "Member 'BP_MapMakkaWinCtrl_C_BPI_CheckActive_Miitsu::Param_Active' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_BPI_CheckActive_Miitsu, CallFunc_BPI_CheckActive_Active) == 0x000001, "Member 'BP_MapMakkaWinCtrl_C_BPI_CheckActive_Miitsu::CallFunc_BPI_CheckActive_Active' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_BPI_CheckActive_Miitsu, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_MapMakkaWinCtrl_C_BPI_CheckActive_Miitsu::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_MapMakkaWinCtrl.BP_MapMakkaWinCtrl_C.BPI_CheckNext_MimanMiitsu
// 0x0004 (0x0004 - 0x0000)
struct BP_MapMakkaWinCtrl_C_BPI_CheckNext_MimanMiitsu final
{
public:
	bool                                          Next;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapMakkaWinCtrl_C_BPI_CheckNext_MimanMiitsu) == 0x000001, "Wrong alignment on BP_MapMakkaWinCtrl_C_BPI_CheckNext_MimanMiitsu");
static_assert(sizeof(BP_MapMakkaWinCtrl_C_BPI_CheckNext_MimanMiitsu) == 0x000004, "Wrong size on BP_MapMakkaWinCtrl_C_BPI_CheckNext_MimanMiitsu");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_BPI_CheckNext_MimanMiitsu, Next) == 0x000000, "Member 'BP_MapMakkaWinCtrl_C_BPI_CheckNext_MimanMiitsu::Next' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_BPI_CheckNext_MimanMiitsu, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_MapMakkaWinCtrl_C_BPI_CheckNext_MimanMiitsu::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_BPI_CheckNext_MimanMiitsu, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000002, "Member 'BP_MapMakkaWinCtrl_C_BPI_CheckNext_MimanMiitsu::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapMakkaWinCtrl_C_BPI_CheckNext_MimanMiitsu, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_MapMakkaWinCtrl_C_BPI_CheckNext_MimanMiitsu::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

