#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Sk_DamageResultOnly

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "BTL_LIGHT_PLAY_PARAM_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "BTL_EFFECT_PLAY_PARAM_structs.hpp"


namespace SDK::Params
{

// Function sk_DamageResultOnly.sk_DamageResultOnly_C.ExecuteUbergraph_sk_DamageResultOnly
// 0x02E0 (0x02E0 - 0x0000)
struct Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PTBPInterface_C>  CallFunc_BIGetPTUnitInterface_AsBPI_PTBPInterface; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReflected_IsReflected;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_UnitSetVisibility_retValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7743[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetActorPartyIndex_index_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7744[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetTargetPartyIndex_index;                // 0x0040(0x0010)(ReferenceParm)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7745[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side_1;                        // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7746[0x5];                                     // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam;                   // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTargetDead_IsDead;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7747[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_GetTaskFactoryParentNameTaskCnt_retValue; // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7748[0x2];                                     // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BIGetTaskFactory_retValue;                // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlreadyCameraChanged_Changed;           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7749[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_Event_WaitTaskList;                         // 0x00C0(0x0010)(ReferenceParm)
	int32                                         CallFunc_BI_AddFirstSettingTask_PecID;             // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_DeadTarget_ComIndex;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNormalAttack_ReturnValue;               // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_774A[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Com_MessageShowSkillName_ComIndex;        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_774B[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBTL_EFFECT_PLAY_PARAM                 CallFunc_Array_Get_Item;                           // 0x00F0(0x00B0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_774C[0x3];                                     // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBTL_LIGHT_PLAY_PARAM                  CallFunc_Array_Get_Item_1;                         // 0x01B0(0x0078)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjRef_ReturnValue;            // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_774D[0x2];                                     // 0x022A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x022C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillForActorSide_IsForActorSide;       // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_774E[0x3];                                     // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorPartyIndex_index_2;               // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcMotionStartPosition_StartPosition;    // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorSetMotion_Com_Index;             // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Step)>                   K2Node_CreateDelegate_OutputDelegate;              // 0x0248(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Com_MessageHide_ComIndex;                 // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddStopAllSE_Task_WaitPecID;              // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BIGetMainWork_NewParam_1;                 // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_CalcSkipCameraName_CameraName;            // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_PrepareSkip_NoUse;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_774F[0x3];                                     // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Com_SetCamTargetRelative_ComIndex;        // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index_3;               // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_WaitTime_ComIndex;                    // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             CallFunc_GetDefaultIdleMotion_Idle;                // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7750[0x3];                                     // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Com_ApplyHit_ComIndex;                    // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_ActorSetMotion_Com_Index_1;           // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_AddTargetPointLight_Auto_ComIndex;    // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_PlayEffectTarget_ComIndex;            // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_WaitTime_ComIndex_1;                  // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7751[0x3];                                     // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddStopAllParticleTask_WaitPecID;         // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Step;                           // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Com_CallSkillPerformance_ComIndex;        // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7752[0x3];                                     // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSkillID_ID;                            // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NAHOBINO_SKILL_MOTION                       CallFunc_GetNahobinoMotion_ReturnValue;            // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x02CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7753[0x1];                                     // 0x02CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Com_ActorMoveToTarget_ComIndex;           // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemTelescope_IsTelescope;              // 0x02D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7754[0x2];                                     // 0x02D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Com_CallSkillPerformance_ComIndex_1;      // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly) == 0x000010, "Wrong alignment on Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly");
static_assert(sizeof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly) == 0x0002E0, "Wrong size on Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, EntryPoint) == 0x000000, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::EntryPoint' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_GetActorPartyIndex_index) == 0x00000C, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_BIGetPTUnitInterface_AsBPI_PTBPInterface) == 0x000010, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_BIGetPTUnitInterface_AsBPI_PTBPInterface' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_IsReflected_IsReflected) == 0x000020, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_IsReflected_IsReflected' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_BI_UnitSetVisibility_retValue) == 0x000021, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_BI_UnitSetVisibility_retValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_BIGetPartySystem_retValue) == 0x000028, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_GetActorPartyIndex_index_1) == 0x000038, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_GetActorPartyIndex_index_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_GetTargetPartyIndex_index) == 0x000040, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_GetTargetPartyIndex_index' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_BI_GetSide_side) == 0x000050, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_BI_GetSide_side' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Greater_IntInt_ReturnValue) == 0x000058, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_BI_GetSide_side_1) == 0x000059, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_BI_GetSide_side_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00005A, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_BIGetMainWork_NewParam) == 0x000060, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_BIGetMainWork_NewParam' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_IsTargetDead_IsDead) == 0x000070, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_IsTargetDead_IsDead' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_GetObjectName_ReturnValue) == 0x000078, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, Temp_int_Loop_Counter_Variable_1) == 0x000088, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_BI_GetTaskFactoryParentNameTaskCnt_retValue) == 0x00008C, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_BI_GetTaskFactoryParentNameTaskCnt_retValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000094, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_BooleanOR_ReturnValue) == 0x000095, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_BIGetTaskFactory_retValue) == 0x000098, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_BIGetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_IsAlreadyCameraChanged_Changed) == 0x0000A8, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_IsAlreadyCameraChanged_Changed' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_GetObjectName_ReturnValue_1) == 0x0000B0, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, K2Node_Event_WaitTaskList) == 0x0000C0, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::K2Node_Event_WaitTaskList' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_BI_AddFirstSettingTask_PecID) == 0x0000D0, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_BI_AddFirstSettingTask_PecID' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Com_DeadTarget_ComIndex) == 0x0000D4, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Com_DeadTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_IsNormalAttack_ReturnValue) == 0x0000D8, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_IsNormalAttack_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Com_MessageShowSkillName_ComIndex) == 0x0000DC, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Com_MessageShowSkillName_ComIndex' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, Temp_int_Array_Index_Variable) == 0x0000E0, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Array_Length_ReturnValue_1) == 0x0000E4, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000E8, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Array_Length_ReturnValue_2) == 0x0001A0, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Less_IntInt_ReturnValue) == 0x0001A4, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, Temp_int_Array_Index_Variable_1) == 0x0001A8, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Array_Length_ReturnValue_3) == 0x0001AC, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Array_Get_Item_1) == 0x0001B0, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Less_IntInt_ReturnValue_1) == 0x000228, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_IsValidSoftObjRef_ReturnValue) == 0x000229, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_IsValidSoftObjRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Conv_StringToName_ReturnValue) == 0x00022C, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_SelectInt_ReturnValue) == 0x000234, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_IsSkillForActorSide_IsForActorSide) == 0x000238, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_IsSkillForActorSide_IsForActorSide' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_GetActorPartyIndex_index_2) == 0x00023C, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_GetActorPartyIndex_index_2' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_CalcMotionStartPosition_StartPosition) == 0x000240, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_CalcMotionStartPosition_StartPosition' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Com_ActorSetMotion_Com_Index) == 0x000244, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Com_ActorSetMotion_Com_Index' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, K2Node_CreateDelegate_OutputDelegate) == 0x000248, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Com_MessageHide_ComIndex) == 0x000258, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Com_MessageHide_ComIndex' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_AddStopAllSE_Task_WaitPecID) == 0x00025C, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_AddStopAllSE_Task_WaitPecID' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_BIGetMainWork_NewParam_1) == 0x000260, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_BIGetMainWork_NewParam_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_CalcSkipCameraName_CameraName) == 0x000270, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_CalcSkipCameraName_CameraName' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_BI_PrepareSkip_NoUse) == 0x000280, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_BI_PrepareSkip_NoUse' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Com_SetCamTargetRelative_ComIndex) == 0x000284, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Com_SetCamTargetRelative_ComIndex' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_GetActorPartyIndex_index_3) == 0x000288, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_GetActorPartyIndex_index_3' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Com_WaitTime_ComIndex) == 0x00028C, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Com_WaitTime_ComIndex' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_FindUnit_Unit) == 0x000290, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_GetDefaultIdleMotion_Idle) == 0x000298, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_GetDefaultIdleMotion_Idle' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Com_ApplyHit_ComIndex) == 0x00029C, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Com_ApplyHit_ComIndex' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Com_ActorSetMotion_Com_Index_1) == 0x0002A0, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Com_ActorSetMotion_Com_Index_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Com_AddTargetPointLight_Auto_ComIndex) == 0x0002A4, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Com_AddTargetPointLight_Auto_ComIndex' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Com_PlayEffectTarget_ComIndex) == 0x0002A8, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Com_PlayEffectTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Array_Length_ReturnValue_4) == 0x0002AC, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Com_WaitTime_ComIndex_1) == 0x0002B0, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Com_WaitTime_ComIndex_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0002B4, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_AddStopAllParticleTask_WaitPecID) == 0x0002B8, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_AddStopAllParticleTask_WaitPecID' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, K2Node_CustomEvent_Step) == 0x0002BC, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::K2Node_CustomEvent_Step' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Com_CallSkillPerformance_ComIndex) == 0x0002C0, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Com_CallSkillPerformance_ComIndex' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, K2Node_SwitchInteger_CmpSuccess) == 0x0002C4, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_GetSkillID_ID) == 0x0002C8, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_GetSkillID_ID' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_GetNahobinoMotion_ReturnValue) == 0x0002CC, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_GetNahobinoMotion_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, K2Node_SwitchEnum_CmpSuccess) == 0x0002CD, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_BooleanAND_ReturnValue) == 0x0002CE, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Com_ActorMoveToTarget_ComIndex) == 0x0002D0, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Com_ActorMoveToTarget_ComIndex' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, K2Node_Event_EndPlayReason) == 0x0002D4, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_IsItemTelescope_IsTelescope) == 0x0002D5, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_IsItemTelescope_IsTelescope' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly, CallFunc_Com_CallSkillPerformance_ComIndex_1) == 0x0002D8, "Member 'Sk_DamageResultOnly_C_ExecuteUbergraph_sk_DamageResultOnly::CallFunc_Com_CallSkillPerformance_ComIndex_1' has a wrong offset!");

// Function sk_DamageResultOnly.sk_DamageResultOnly_C.Performance
// 0x0004 (0x0004 - 0x0000)
struct Sk_DamageResultOnly_C_Performance final
{
public:
	int32                                         Step;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Sk_DamageResultOnly_C_Performance) == 0x000004, "Wrong alignment on Sk_DamageResultOnly_C_Performance");
static_assert(sizeof(Sk_DamageResultOnly_C_Performance) == 0x000004, "Wrong size on Sk_DamageResultOnly_C_Performance");
static_assert(offsetof(Sk_DamageResultOnly_C_Performance, Step) == 0x000000, "Member 'Sk_DamageResultOnly_C_Performance::Step' has a wrong offset!");

// Function sk_DamageResultOnly.sk_DamageResultOnly_C.SetPlayParam
// 0x01F0 (0x01F0 - 0x0000)
struct Sk_DamageResultOnly_C_SetPlayParam final
{
public:
	TArray<struct FBTL_EFFECT_PLAY_PARAM>         EffectPlayParam;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FBTL_LIGHT_PLAY_PARAM>          LightPlayParam;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsUsedAnimCam;                                     // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7755[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         TrashActor;                                        // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class UActorComponent*>                TrashComponent;                                    // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7756[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBTL_EFFECT_PLAY_PARAM                 CallFunc_Array_Get_Item;                           // 0x0060(0x00B0)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7757[0x6];                                     // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesWildcard_ReturnValue;              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesWildcard_ReturnValue_1;            // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesWildcard_ReturnValue_2;            // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesWildcard_ReturnValue_3;            // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7758[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Right_ReturnValue;                        // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesWildcard_ReturnValue_4;            // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7759[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesWildcard_ReturnValue_5;            // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesWildcard_ReturnValue_6;            // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x014E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x014F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBTL_LIGHT_PLAY_PARAM                  CallFunc_Array_Get_Item_1;                         // 0x0150(0x0078)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_775A[0x3];                                     // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_HIT_STAMP_TYPE                        CallFunc_GetSkillHitStampType_ReturnValue;         // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_775B[0x2];                                     // 0x01D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_775C[0x3];                                     // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Sk_DamageResultOnly_C_SetPlayParam) == 0x000010, "Wrong alignment on Sk_DamageResultOnly_C_SetPlayParam");
static_assert(sizeof(Sk_DamageResultOnly_C_SetPlayParam) == 0x0001F0, "Wrong size on Sk_DamageResultOnly_C_SetPlayParam");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, EffectPlayParam) == 0x000000, "Member 'Sk_DamageResultOnly_C_SetPlayParam::EffectPlayParam' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, LightPlayParam) == 0x000010, "Member 'Sk_DamageResultOnly_C_SetPlayParam::LightPlayParam' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, IsUsedAnimCam) == 0x000020, "Member 'Sk_DamageResultOnly_C_SetPlayParam::IsUsedAnimCam' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, TrashActor) == 0x000028, "Member 'Sk_DamageResultOnly_C_SetPlayParam::TrashActor' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, TrashComponent) == 0x000038, "Member 'Sk_DamageResultOnly_C_SetPlayParam::TrashComponent' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, Temp_int_Array_Index_Variable) == 0x000048, "Member 'Sk_DamageResultOnly_C_SetPlayParam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'Sk_DamageResultOnly_C_SetPlayParam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, Temp_int_Array_Index_Variable_1) == 0x00005C, "Member 'Sk_DamageResultOnly_C_SetPlayParam::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_Array_Get_Item) == 0x000060, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_IsValid_ReturnValue) == 0x000110, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_IsValid_ReturnValue_1) == 0x000111, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_GetObjectName_ReturnValue) == 0x000118, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_MatchesWildcard_ReturnValue) == 0x000128, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_MatchesWildcard_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_MatchesWildcard_ReturnValue_1) == 0x000129, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_MatchesWildcard_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_MatchesWildcard_ReturnValue_2) == 0x00012A, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_MatchesWildcard_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_BooleanOR_ReturnValue) == 0x00012B, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_MatchesWildcard_ReturnValue_3) == 0x00012C, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_MatchesWildcard_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_Right_ReturnValue) == 0x000130, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_Right_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_MatchesWildcard_ReturnValue_4) == 0x000140, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_MatchesWildcard_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_Array_LastIndex_ReturnValue) == 0x000144, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_BooleanAND_ReturnValue) == 0x000148, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000149, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_MatchesWildcard_ReturnValue_5) == 0x00014A, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_MatchesWildcard_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_BooleanAND_ReturnValue_1) == 0x00014B, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_BooleanAND_ReturnValue_2) == 0x00014C, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_MatchesWildcard_ReturnValue_6) == 0x00014D, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_MatchesWildcard_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_BooleanAND_ReturnValue_3) == 0x00014E, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_BooleanOR_ReturnValue_1) == 0x00014F, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_Array_Get_Item_1) == 0x000150, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_BooleanOR_ReturnValue_2) == 0x0001C8, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_Array_Length_ReturnValue_1) == 0x0001CC, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_GetSkillHitStampType_ReturnValue) == 0x0001D0, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_GetSkillHitStampType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001D1, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_Array_Add_ReturnValue) == 0x0001D4, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, Temp_int_Loop_Counter_Variable_1) == 0x0001D8, "Member 'Sk_DamageResultOnly_C_SetPlayParam::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_Array_Add_ReturnValue_1) == 0x0001DC, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001E0, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SetPlayParam, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001E4, "Member 'Sk_DamageResultOnly_C_SetPlayParam::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function sk_DamageResultOnly.sk_DamageResultOnly_C.SkipInitialize
// 0x0188 (0x0188 - 0x0000)
struct Sk_DamageResultOnly_C_SkipInitialize final
{
public:
	class ACharaBase_C*                           Lo_Unit;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                Lo_MeshAttachedComponent;                          // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       Lo_Particle;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<int32>                                 Lo_Target;                                         // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_775D[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetMagatsuhiOtherActors_actors;           // 0x0048(0x0010)(ReferenceParm)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FCharaMoveParam                        CallFunc_GetMoveParam_MoveParam;                   // 0x0064(0x0038)()
	uint8                                         Pad_775E[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerBase_C*                          K2Node_DynamicCast_AsPlayer_Base;                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_775F[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x00AC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7760[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_GetTargetPartyIndex_index;                // 0x0148(0x0010)(ReferenceParm)
	bool                                          CallFunc_DamageResultSetting_IsReflected;          // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DamageResultSetting_Is1vs1Reflect;        // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7761[0x2];                                     // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GetPartyUnit_retValue;                 // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_StopCharaShake_NoUse;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7762[0x3];                                     // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7763[0x3];                                     // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Sk_DamageResultOnly_C_SkipInitialize) == 0x000008, "Wrong alignment on Sk_DamageResultOnly_C_SkipInitialize");
static_assert(sizeof(Sk_DamageResultOnly_C_SkipInitialize) == 0x000188, "Wrong size on Sk_DamageResultOnly_C_SkipInitialize");
static_assert(offsetof(Sk_DamageResultOnly_C_SkipInitialize, Lo_Unit) == 0x000000, "Member 'Sk_DamageResultOnly_C_SkipInitialize::Lo_Unit' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SkipInitialize, Lo_MeshAttachedComponent) == 0x000008, "Member 'Sk_DamageResultOnly_C_SkipInitialize::Lo_MeshAttachedComponent' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SkipInitialize, Lo_Particle) == 0x000018, "Member 'Sk_DamageResultOnly_C_SkipInitialize::Lo_Particle' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SkipInitialize, Lo_Target) == 0x000028, "Member 'Sk_DamageResultOnly_C_SkipInitialize::Lo_Target' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SkipInitialize, Temp_int_Array_Index_Variable) == 0x000038, "Member 'Sk_DamageResultOnly_C_SkipInitialize::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SkipInitialize, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'Sk_DamageResultOnly_C_SkipInitialize::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SkipInitialize, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'Sk_DamageResultOnly_C_SkipInitialize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SkipInitialize, CallFunc_GetMagatsuhiOtherActors_actors) == 0x000048, "Member 'Sk_DamageResultOnly_C_SkipInitialize::CallFunc_GetMagatsuhiOtherActors_actors' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SkipInitialize, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000058, "Member 'Sk_DamageResultOnly_C_SkipInitialize::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SkipInitialize, CallFunc_GetMoveParam_MoveParam) == 0x000064, "Member 'Sk_DamageResultOnly_C_SkipInitialize::CallFunc_GetMoveParam_MoveParam' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SkipInitialize, K2Node_DynamicCast_AsPlayer_Base) == 0x0000A0, "Member 'Sk_DamageResultOnly_C_SkipInitialize::K2Node_DynamicCast_AsPlayer_Base' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SkipInitialize, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'Sk_DamageResultOnly_C_SkipInitialize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SkipInitialize, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x0000AC, "Member 'Sk_DamageResultOnly_C_SkipInitialize::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SkipInitialize, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000134, "Member 'Sk_DamageResultOnly_C_SkipInitialize::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SkipInitialize, CallFunc_BIGetPartySystem_retValue) == 0x000138, "Member 'Sk_DamageResultOnly_C_SkipInitialize::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SkipInitialize, CallFunc_GetTargetPartyIndex_index) == 0x000148, "Member 'Sk_DamageResultOnly_C_SkipInitialize::CallFunc_GetTargetPartyIndex_index' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SkipInitialize, CallFunc_DamageResultSetting_IsReflected) == 0x000158, "Member 'Sk_DamageResultOnly_C_SkipInitialize::CallFunc_DamageResultSetting_IsReflected' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SkipInitialize, CallFunc_DamageResultSetting_Is1vs1Reflect) == 0x000159, "Member 'Sk_DamageResultOnly_C_SkipInitialize::CallFunc_DamageResultSetting_Is1vs1Reflect' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SkipInitialize, CallFunc_Array_Get_Item) == 0x00015C, "Member 'Sk_DamageResultOnly_C_SkipInitialize::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SkipInitialize, CallFunc_BI_GetPartyUnit_retValue) == 0x000160, "Member 'Sk_DamageResultOnly_C_SkipInitialize::CallFunc_BI_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SkipInitialize, CallFunc_BI_StopCharaShake_NoUse) == 0x000170, "Member 'Sk_DamageResultOnly_C_SkipInitialize::CallFunc_BI_StopCharaShake_NoUse' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SkipInitialize, CallFunc_Array_Length_ReturnValue) == 0x000174, "Member 'Sk_DamageResultOnly_C_SkipInitialize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SkipInitialize, CallFunc_GetActorPartyIndex_index) == 0x000178, "Member 'Sk_DamageResultOnly_C_SkipInitialize::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SkipInitialize, CallFunc_Less_IntInt_ReturnValue) == 0x00017C, "Member 'Sk_DamageResultOnly_C_SkipInitialize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_SkipInitialize, CallFunc_FindUnit_Unit) == 0x000180, "Member 'Sk_DamageResultOnly_C_SkipInitialize::CallFunc_FindUnit_Unit' has a wrong offset!");

// Function sk_DamageResultOnly.sk_DamageResultOnly_C.ForceDestroyLoadedModels
// 0x0078 (0x0078 - 0x0000)
struct Sk_DamageResultOnly_C_ForceDestroyLoadedModels final
{
public:
	TArray<int32>                                 Lo_Exist;                                          // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_loadedUnits;                                    // 0x0010(0x0010)(Edit, BlueprintVisible)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7764[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_1;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_DestroyUnit_retValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7765[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_const_GetStockLoopMax_retValue;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_const_GetStockStart_retValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7766[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7767[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_2;              // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetServantPartyIndex_PartyIndex;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_DestroyUnit_retValue_1;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Sk_DamageResultOnly_C_ForceDestroyLoadedModels) == 0x000008, "Wrong alignment on Sk_DamageResultOnly_C_ForceDestroyLoadedModels");
static_assert(sizeof(Sk_DamageResultOnly_C_ForceDestroyLoadedModels) == 0x000078, "Wrong size on Sk_DamageResultOnly_C_ForceDestroyLoadedModels");
static_assert(offsetof(Sk_DamageResultOnly_C_ForceDestroyLoadedModels, Lo_Exist) == 0x000000, "Member 'Sk_DamageResultOnly_C_ForceDestroyLoadedModels::Lo_Exist' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ForceDestroyLoadedModels, Lo_loadedUnits) == 0x000010, "Member 'Sk_DamageResultOnly_C_ForceDestroyLoadedModels::Lo_loadedUnits' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ForceDestroyLoadedModels, CallFunc_BIGetPartySystem_retValue) == 0x000020, "Member 'Sk_DamageResultOnly_C_ForceDestroyLoadedModels::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ForceDestroyLoadedModels, Temp_int_Variable) == 0x000030, "Member 'Sk_DamageResultOnly_C_ForceDestroyLoadedModels::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ForceDestroyLoadedModels, CallFunc_BIGetPartySystem_retValue_1) == 0x000038, "Member 'Sk_DamageResultOnly_C_ForceDestroyLoadedModels::CallFunc_BIGetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ForceDestroyLoadedModels, CallFunc_BI_DestroyUnit_retValue) == 0x000048, "Member 'Sk_DamageResultOnly_C_ForceDestroyLoadedModels::CallFunc_BI_DestroyUnit_retValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ForceDestroyLoadedModels, CallFunc_BI_const_GetStockLoopMax_retValue) == 0x00004C, "Member 'Sk_DamageResultOnly_C_ForceDestroyLoadedModels::CallFunc_BI_const_GetStockLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ForceDestroyLoadedModels, CallFunc_BI_const_GetStockStart_retValue) == 0x000050, "Member 'Sk_DamageResultOnly_C_ForceDestroyLoadedModels::CallFunc_BI_const_GetStockStart_retValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ForceDestroyLoadedModels, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000054, "Member 'Sk_DamageResultOnly_C_ForceDestroyLoadedModels::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ForceDestroyLoadedModels, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'Sk_DamageResultOnly_C_ForceDestroyLoadedModels::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ForceDestroyLoadedModels, CallFunc_BIGetPartySystem_retValue_2) == 0x000060, "Member 'Sk_DamageResultOnly_C_ForceDestroyLoadedModels::CallFunc_BIGetPartySystem_retValue_2' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ForceDestroyLoadedModels, CallFunc_GetServantPartyIndex_PartyIndex) == 0x000070, "Member 'Sk_DamageResultOnly_C_ForceDestroyLoadedModels::CallFunc_GetServantPartyIndex_PartyIndex' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ForceDestroyLoadedModels, CallFunc_BI_DestroyUnit_retValue_1) == 0x000074, "Member 'Sk_DamageResultOnly_C_ForceDestroyLoadedModels::CallFunc_BI_DestroyUnit_retValue_1' has a wrong offset!");

// Function sk_DamageResultOnly.sk_DamageResultOnly_C.ForceRestoreActorScale
// 0x0020 (0x0020 - 0x0000)
struct Sk_DamageResultOnly_C_ForceRestoreActorScale final
{
public:
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7768[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_AdjustMeshScale_self_CastInput;        // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Sk_DamageResultOnly_C_ForceRestoreActorScale) == 0x000008, "Wrong alignment on Sk_DamageResultOnly_C_ForceRestoreActorScale");
static_assert(sizeof(Sk_DamageResultOnly_C_ForceRestoreActorScale) == 0x000020, "Wrong size on Sk_DamageResultOnly_C_ForceRestoreActorScale");
static_assert(offsetof(Sk_DamageResultOnly_C_ForceRestoreActorScale, CallFunc_GetActorPartyIndex_index) == 0x000000, "Member 'Sk_DamageResultOnly_C_ForceRestoreActorScale::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ForceRestoreActorScale, CallFunc_FindUnit_Unit) == 0x000008, "Member 'Sk_DamageResultOnly_C_ForceRestoreActorScale::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_ForceRestoreActorScale, CallFunc_BI_AdjustMeshScale_self_CastInput) == 0x000010, "Member 'Sk_DamageResultOnly_C_ForceRestoreActorScale::CallFunc_BI_AdjustMeshScale_self_CastInput' has a wrong offset!");

// Function sk_DamageResultOnly.sk_DamageResultOnly_C.IsItemTelescope
// 0x000C (0x000C - 0x0000)
struct Sk_DamageResultOnly_C_IsItemTelescope final
{
public:
	bool                                          IsTelescope;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7769[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemID_ID;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Sk_DamageResultOnly_C_IsItemTelescope) == 0x000004, "Wrong alignment on Sk_DamageResultOnly_C_IsItemTelescope");
static_assert(sizeof(Sk_DamageResultOnly_C_IsItemTelescope) == 0x00000C, "Wrong size on Sk_DamageResultOnly_C_IsItemTelescope");
static_assert(offsetof(Sk_DamageResultOnly_C_IsItemTelescope, IsTelescope) == 0x000000, "Member 'Sk_DamageResultOnly_C_IsItemTelescope::IsTelescope' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_IsItemTelescope, CallFunc_GetItemID_ID) == 0x000004, "Member 'Sk_DamageResultOnly_C_IsItemTelescope::CallFunc_GetItemID_ID' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_IsItemTelescope, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'Sk_DamageResultOnly_C_IsItemTelescope::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_IsItemTelescope, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000009, "Member 'Sk_DamageResultOnly_C_IsItemTelescope::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_IsItemTelescope, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'Sk_DamageResultOnly_C_IsItemTelescope::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function sk_DamageResultOnly.sk_DamageResultOnly_C.DestroyTrashActors
// 0x0038 (0x0038 - 0x0000)
struct Sk_DamageResultOnly_C_DestroyTrashActors final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_776A[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Sk_DamageResultOnly_C_DestroyTrashActors) == 0x000008, "Wrong alignment on Sk_DamageResultOnly_C_DestroyTrashActors");
static_assert(sizeof(Sk_DamageResultOnly_C_DestroyTrashActors) == 0x000038, "Wrong size on Sk_DamageResultOnly_C_DestroyTrashActors");
static_assert(offsetof(Sk_DamageResultOnly_C_DestroyTrashActors, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Sk_DamageResultOnly_C_DestroyTrashActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_DestroyTrashActors, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Sk_DamageResultOnly_C_DestroyTrashActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_DestroyTrashActors, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Sk_DamageResultOnly_C_DestroyTrashActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_DestroyTrashActors, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'Sk_DamageResultOnly_C_DestroyTrashActors::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_DestroyTrashActors, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'Sk_DamageResultOnly_C_DestroyTrashActors::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_DestroyTrashActors, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'Sk_DamageResultOnly_C_DestroyTrashActors::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_DestroyTrashActors, CallFunc_Array_Get_Item) == 0x000018, "Member 'Sk_DamageResultOnly_C_DestroyTrashActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_DestroyTrashActors, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'Sk_DamageResultOnly_C_DestroyTrashActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_DestroyTrashActors, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'Sk_DamageResultOnly_C_DestroyTrashActors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_DestroyTrashActors, CallFunc_Less_IntInt_ReturnValue) == 0x000025, "Member 'Sk_DamageResultOnly_C_DestroyTrashActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_DestroyTrashActors, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'Sk_DamageResultOnly_C_DestroyTrashActors::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_DestroyTrashActors, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'Sk_DamageResultOnly_C_DestroyTrashActors::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_DestroyTrashActors, CallFunc_IsValid_ReturnValue_1) == 0x000034, "Member 'Sk_DamageResultOnly_C_DestroyTrashActors::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_DestroyTrashActors, CallFunc_Less_IntInt_ReturnValue_1) == 0x000035, "Member 'Sk_DamageResultOnly_C_DestroyTrashActors::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function sk_DamageResultOnly.sk_DamageResultOnly_C.StopMagatsuhiOtherActorsMotion
// 0x0068 (0x0068 - 0x0000)
struct Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_776B[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_776C[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetSideActList_retValue;               // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_776D[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GetPartyUnit_retValue;                 // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_BattleStopMotion_NoUse;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CHARA_MOTION_ID                             CallFunc_BI_GetDefaultIdleMotion_Motion;           // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_BattlePlayMotion_NoUse;                // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion) == 0x000008, "Wrong alignment on Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion");
static_assert(sizeof(Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion) == 0x000068, "Wrong size on Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion");
static_assert(offsetof(Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion, CallFunc_GetActorPartyIndex_index) == 0x00000C, "Member 'Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion, CallFunc_BIGetPartySystem_retValue) == 0x000018, "Member 'Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion, CallFunc_BI_GetSide_side) == 0x000029, "Member 'Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion::CallFunc_BI_GetSide_side' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion, CallFunc_BI_GetSideActList_retValue) == 0x000030, "Member 'Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion::CallFunc_BI_GetSideActList_retValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion, CallFunc_Array_Get_Item) == 0x000044, "Member 'Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion, CallFunc_BI_GetPartyUnit_retValue) == 0x000050, "Member 'Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion::CallFunc_BI_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion, CallFunc_BI_BattleStopMotion_NoUse) == 0x000060, "Member 'Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion::CallFunc_BI_BattleStopMotion_NoUse' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion, CallFunc_BI_GetDefaultIdleMotion_Motion) == 0x000061, "Member 'Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion::CallFunc_BI_GetDefaultIdleMotion_Motion' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion, CallFunc_Array_Contains_ReturnValue) == 0x000062, "Member 'Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion, CallFunc_BI_BattlePlayMotion_NoUse) == 0x000063, "Member 'Sk_DamageResultOnly_C_StopMagatsuhiOtherActorsMotion::CallFunc_BI_BattlePlayMotion_NoUse' has a wrong offset!");

// Function sk_DamageResultOnly.sk_DamageResultOnly_C.Invisible Loaded Models
// 0x00E8 (0x00E8 - 0x0000)
struct Sk_DamageResultOnly_C_Invisible_Loaded_Models final
{
public:
	TArray<int32>                                 Lo_MagatsuhiActors;                                // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_ExistPartyIndex;                                // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActorPartyIndex_index;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_776E[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_AdjustMeshScale_self_CastInput;        // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_776F[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetServantPartyIndex_PartyIndex;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_FindUnit_Unit_1;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_BattleStopMotion_self_CastInput;       // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_BattleStopMotion_NoUse;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7770[0x2];                                     // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7771[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue;                // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_1;              // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_BI_GetSideActList_retValue;               // 0x00A8(0x0010)(ReferenceParm)
	bool                                          CallFunc_BI_UnitSetVisibility_retValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7772[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetSideActList_retValue_1;             // 0x00C0(0x0010)(ReferenceParm)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BIGetPartySystem_retValue_2;              // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_UnitSetVisibility_retValue_1;          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Sk_DamageResultOnly_C_Invisible_Loaded_Models) == 0x000008, "Wrong alignment on Sk_DamageResultOnly_C_Invisible_Loaded_Models");
static_assert(sizeof(Sk_DamageResultOnly_C_Invisible_Loaded_Models) == 0x0000E8, "Wrong size on Sk_DamageResultOnly_C_Invisible_Loaded_Models");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, Lo_MagatsuhiActors) == 0x000000, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::Lo_MagatsuhiActors' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, Lo_ExistPartyIndex) == 0x000010, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::Lo_ExistPartyIndex' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, Temp_int_Array_Index_Variable) == 0x000020, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, CallFunc_GetActorPartyIndex_index) == 0x00002C, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::CallFunc_GetActorPartyIndex_index' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, CallFunc_Array_Get_Item) == 0x000030, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, CallFunc_Array_Add_ReturnValue) == 0x000034, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, CallFunc_FindUnit_Unit) == 0x000038, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::CallFunc_FindUnit_Unit' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, CallFunc_BI_AdjustMeshScale_self_CastInput) == 0x000048, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::CallFunc_BI_AdjustMeshScale_self_CastInput' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, CallFunc_GetServantPartyIndex_PartyIndex) == 0x00005C, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::CallFunc_GetServantPartyIndex_PartyIndex' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, CallFunc_FindUnit_Unit_1) == 0x000060, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::CallFunc_FindUnit_Unit_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, CallFunc_BI_BattleStopMotion_self_CastInput) == 0x000068, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::CallFunc_BI_BattleStopMotion_self_CastInput' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, CallFunc_BI_BattleStopMotion_NoUse) == 0x000078, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::CallFunc_BI_BattleStopMotion_NoUse' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, CallFunc_IsValid_ReturnValue) == 0x000079, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, CallFunc_Array_Length_ReturnValue_1) == 0x00007C, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, CallFunc_Greater_IntInt_ReturnValue) == 0x000080, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, CallFunc_Array_Contains_ReturnValue) == 0x000081, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, CallFunc_BIGetPartySystem_retValue) == 0x000088, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::CallFunc_BIGetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, CallFunc_BIGetPartySystem_retValue_1) == 0x000098, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::CallFunc_BIGetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, CallFunc_BI_GetSideActList_retValue) == 0x0000A8, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::CallFunc_BI_GetSideActList_retValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, CallFunc_BI_UnitSetVisibility_retValue) == 0x0000B8, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::CallFunc_BI_UnitSetVisibility_retValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, CallFunc_BI_GetSideActList_retValue_1) == 0x0000C0, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::CallFunc_BI_GetSideActList_retValue_1' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, CallFunc_BIGetPartySystem_retValue_2) == 0x0000D0, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::CallFunc_BIGetPartySystem_retValue_2' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_Invisible_Loaded_Models, CallFunc_BI_UnitSetVisibility_retValue_1) == 0x0000E0, "Member 'Sk_DamageResultOnly_C_Invisible_Loaded_Models::CallFunc_BI_UnitSetVisibility_retValue_1' has a wrong offset!");

// Function sk_DamageResultOnly.sk_DamageResultOnly_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct Sk_DamageResultOnly_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Sk_DamageResultOnly_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on Sk_DamageResultOnly_C_ReceiveEndPlay");
static_assert(sizeof(Sk_DamageResultOnly_C_ReceiveEndPlay) == 0x000001, "Wrong size on Sk_DamageResultOnly_C_ReceiveEndPlay");
static_assert(offsetof(Sk_DamageResultOnly_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'Sk_DamageResultOnly_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function sk_DamageResultOnly.sk_DamageResultOnly_C.GetSkillArea
// 0x0003 (0x0003 - 0x0000)
struct Sk_DamageResultOnly_C_GetSkillArea final
{
public:
	E_SKILL_TARGET                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                CallFunc_GetSkillArea_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Sk_DamageResultOnly_C_GetSkillArea) == 0x000001, "Wrong alignment on Sk_DamageResultOnly_C_GetSkillArea");
static_assert(sizeof(Sk_DamageResultOnly_C_GetSkillArea) == 0x000003, "Wrong size on Sk_DamageResultOnly_C_GetSkillArea");
static_assert(offsetof(Sk_DamageResultOnly_C_GetSkillArea, ReturnValue) == 0x000000, "Member 'Sk_DamageResultOnly_C_GetSkillArea::ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_GetSkillArea, CallFunc_GetSkillArea_ReturnValue) == 0x000001, "Member 'Sk_DamageResultOnly_C_GetSkillArea::CallFunc_GetSkillArea_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sk_DamageResultOnly_C_GetSkillArea, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'Sk_DamageResultOnly_C_GetSkillArea::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function sk_DamageResultOnly.sk_DamageResultOnly_C.AddFirstSettingTask
// 0x0010 (0x0010 - 0x0000)
struct Sk_DamageResultOnly_C_AddFirstSettingTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Sk_DamageResultOnly_C_AddFirstSettingTask) == 0x000008, "Wrong alignment on Sk_DamageResultOnly_C_AddFirstSettingTask");
static_assert(sizeof(Sk_DamageResultOnly_C_AddFirstSettingTask) == 0x000010, "Wrong size on Sk_DamageResultOnly_C_AddFirstSettingTask");
static_assert(offsetof(Sk_DamageResultOnly_C_AddFirstSettingTask, WaitTaskList) == 0x000000, "Member 'Sk_DamageResultOnly_C_AddFirstSettingTask::WaitTaskList' has a wrong offset!");

}

