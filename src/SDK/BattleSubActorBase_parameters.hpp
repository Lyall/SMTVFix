#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleSubActorBase

#include "Basic.hpp"


namespace SDK::Params
{

// Function BattleSubActorBase.BattleSubActorBase_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct BattleSubActorBase_C_UserConstructionScript final
{
public:
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSubActorBase_C_UserConstructionScript) == 0x000008, "Wrong alignment on BattleSubActorBase_C_UserConstructionScript");
static_assert(sizeof(BattleSubActorBase_C_UserConstructionScript) == 0x000010, "Wrong size on BattleSubActorBase_C_UserConstructionScript");
static_assert(offsetof(BattleSubActorBase_C_UserConstructionScript, CallFunc_GetObjectName_ReturnValue) == 0x000000, "Member 'BattleSubActorBase_C_UserConstructionScript::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");

// Function BattleSubActorBase.BattleSubActorBase_C.GetMainWork
// 0x0020 (0x0020 - 0x0000)
struct BattleSubActorBase_C_GetMainWork final
{
public:
	class ABattleMain_C*                          AsBattle_Main;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          K2Node_DynamicCast_AsBattle_Main;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSubActorBase_C_GetMainWork) == 0x000008, "Wrong alignment on BattleSubActorBase_C_GetMainWork");
static_assert(sizeof(BattleSubActorBase_C_GetMainWork) == 0x000020, "Wrong size on BattleSubActorBase_C_GetMainWork");
static_assert(offsetof(BattleSubActorBase_C_GetMainWork, AsBattle_Main) == 0x000000, "Member 'BattleSubActorBase_C_GetMainWork::AsBattle_Main' has a wrong offset!");
static_assert(offsetof(BattleSubActorBase_C_GetMainWork, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BattleSubActorBase_C_GetMainWork::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSubActorBase_C_GetMainWork, K2Node_DynamicCast_AsBattle_Main) == 0x000010, "Member 'BattleSubActorBase_C_GetMainWork::K2Node_DynamicCast_AsBattle_Main' has a wrong offset!");
static_assert(offsetof(BattleSubActorBase_C_GetMainWork, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BattleSubActorBase_C_GetMainWork::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleSubActorBase.BattleSubActorBase_C.GetPartySystem
// 0x0010 (0x0010 - 0x0000)
struct BattleSubActorBase_C_GetPartySystem final
{
public:
	class UBattlePartySystem_C*                   RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          CallFunc_GetMainWork_AsBattle_Main;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSubActorBase_C_GetPartySystem) == 0x000008, "Wrong alignment on BattleSubActorBase_C_GetPartySystem");
static_assert(sizeof(BattleSubActorBase_C_GetPartySystem) == 0x000010, "Wrong size on BattleSubActorBase_C_GetPartySystem");
static_assert(offsetof(BattleSubActorBase_C_GetPartySystem, RetValue) == 0x000000, "Member 'BattleSubActorBase_C_GetPartySystem::RetValue' has a wrong offset!");
static_assert(offsetof(BattleSubActorBase_C_GetPartySystem, CallFunc_GetMainWork_AsBattle_Main) == 0x000008, "Member 'BattleSubActorBase_C_GetPartySystem::CallFunc_GetMainWork_AsBattle_Main' has a wrong offset!");

// Function BattleSubActorBase.BattleSubActorBase_C.GetTaskFactory
// 0x0010 (0x0010 - 0x0000)
struct BattleSubActorBase_C_GetTaskFactory final
{
public:
	class UBattleActionTaskFactory_C*             RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          CallFunc_GetMainWork_AsBattle_Main;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSubActorBase_C_GetTaskFactory) == 0x000008, "Wrong alignment on BattleSubActorBase_C_GetTaskFactory");
static_assert(sizeof(BattleSubActorBase_C_GetTaskFactory) == 0x000010, "Wrong size on BattleSubActorBase_C_GetTaskFactory");
static_assert(offsetof(BattleSubActorBase_C_GetTaskFactory, RetValue) == 0x000000, "Member 'BattleSubActorBase_C_GetTaskFactory::RetValue' has a wrong offset!");
static_assert(offsetof(BattleSubActorBase_C_GetTaskFactory, CallFunc_GetMainWork_AsBattle_Main) == 0x000008, "Member 'BattleSubActorBase_C_GetTaskFactory::CallFunc_GetMainWork_AsBattle_Main' has a wrong offset!");

// Function BattleSubActorBase.BattleSubActorBase_C.GetTargetSelect
// 0x0010 (0x0010 - 0x0000)
struct BattleSubActorBase_C_GetTargetSelect final
{
public:
	class UBattleTargetSelect_C*                  BattleTargetSelect;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          CallFunc_GetMainWork_AsBattle_Main;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSubActorBase_C_GetTargetSelect) == 0x000008, "Wrong alignment on BattleSubActorBase_C_GetTargetSelect");
static_assert(sizeof(BattleSubActorBase_C_GetTargetSelect) == 0x000010, "Wrong size on BattleSubActorBase_C_GetTargetSelect");
static_assert(offsetof(BattleSubActorBase_C_GetTargetSelect, BattleTargetSelect) == 0x000000, "Member 'BattleSubActorBase_C_GetTargetSelect::BattleTargetSelect' has a wrong offset!");
static_assert(offsetof(BattleSubActorBase_C_GetTargetSelect, CallFunc_GetMainWork_AsBattle_Main) == 0x000008, "Member 'BattleSubActorBase_C_GetTargetSelect::CallFunc_GetMainWork_AsBattle_Main' has a wrong offset!");

// Function BattleSubActorBase.BattleSubActorBase_C.GetCalc
// 0x0010 (0x0010 - 0x0000)
struct BattleSubActorBase_C_GetCalc final
{
public:
	class UBattleCalc_C*                          RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          CallFunc_GetMainWork_AsBattle_Main;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSubActorBase_C_GetCalc) == 0x000008, "Wrong alignment on BattleSubActorBase_C_GetCalc");
static_assert(sizeof(BattleSubActorBase_C_GetCalc) == 0x000010, "Wrong size on BattleSubActorBase_C_GetCalc");
static_assert(offsetof(BattleSubActorBase_C_GetCalc, RetValue) == 0x000000, "Member 'BattleSubActorBase_C_GetCalc::RetValue' has a wrong offset!");
static_assert(offsetof(BattleSubActorBase_C_GetCalc, CallFunc_GetMainWork_AsBattle_Main) == 0x000008, "Member 'BattleSubActorBase_C_GetCalc::CallFunc_GetMainWork_AsBattle_Main' has a wrong offset!");

// Function BattleSubActorBase.BattleSubActorBase_C.GetCamActorFactory
// 0x0010 (0x0010 - 0x0000)
struct BattleSubActorBase_C_GetCamActorFactory final
{
public:
	class UBattleCamActorFactory_C*               RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          CallFunc_GetMainWork_AsBattle_Main;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSubActorBase_C_GetCamActorFactory) == 0x000008, "Wrong alignment on BattleSubActorBase_C_GetCamActorFactory");
static_assert(sizeof(BattleSubActorBase_C_GetCamActorFactory) == 0x000010, "Wrong size on BattleSubActorBase_C_GetCamActorFactory");
static_assert(offsetof(BattleSubActorBase_C_GetCamActorFactory, RetValue) == 0x000000, "Member 'BattleSubActorBase_C_GetCamActorFactory::RetValue' has a wrong offset!");
static_assert(offsetof(BattleSubActorBase_C_GetCamActorFactory, CallFunc_GetMainWork_AsBattle_Main) == 0x000008, "Member 'BattleSubActorBase_C_GetCamActorFactory::CallFunc_GetMainWork_AsBattle_Main' has a wrong offset!");

// Function BattleSubActorBase.BattleSubActorBase_C.GetEffectManager
// 0x0010 (0x0010 - 0x0000)
struct BattleSubActorBase_C_GetEffectManager final
{
public:
	class UBattleEffectManager_C*                 RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          CallFunc_GetMainWork_AsBattle_Main;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSubActorBase_C_GetEffectManager) == 0x000008, "Wrong alignment on BattleSubActorBase_C_GetEffectManager");
static_assert(sizeof(BattleSubActorBase_C_GetEffectManager) == 0x000010, "Wrong size on BattleSubActorBase_C_GetEffectManager");
static_assert(offsetof(BattleSubActorBase_C_GetEffectManager, RetValue) == 0x000000, "Member 'BattleSubActorBase_C_GetEffectManager::RetValue' has a wrong offset!");
static_assert(offsetof(BattleSubActorBase_C_GetEffectManager, CallFunc_GetMainWork_AsBattle_Main) == 0x000008, "Member 'BattleSubActorBase_C_GetEffectManager::CallFunc_GetMainWork_AsBattle_Main' has a wrong offset!");

// Function BattleSubActorBase.BattleSubActorBase_C.GetBPI_MainWork
// 0x0030 (0x0030 - 0x0000)
struct BattleSubActorBase_C_GetBPI_MainWork final
{
public:
	TScriptInterface<class IBPI_BattleMain_C>     RetValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     K2Node_DynamicCast_AsBPI_Battle_Main;              // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSubActorBase_C_GetBPI_MainWork) == 0x000008, "Wrong alignment on BattleSubActorBase_C_GetBPI_MainWork");
static_assert(sizeof(BattleSubActorBase_C_GetBPI_MainWork) == 0x000030, "Wrong size on BattleSubActorBase_C_GetBPI_MainWork");
static_assert(offsetof(BattleSubActorBase_C_GetBPI_MainWork, RetValue) == 0x000000, "Member 'BattleSubActorBase_C_GetBPI_MainWork::RetValue' has a wrong offset!");
static_assert(offsetof(BattleSubActorBase_C_GetBPI_MainWork, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleSubActorBase_C_GetBPI_MainWork::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSubActorBase_C_GetBPI_MainWork, K2Node_DynamicCast_AsBPI_Battle_Main) == 0x000018, "Member 'BattleSubActorBase_C_GetBPI_MainWork::K2Node_DynamicCast_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleSubActorBase_C_GetBPI_MainWork, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleSubActorBase_C_GetBPI_MainWork::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleSubActorBase.BattleSubActorBase_C.GetBPI_AICommand
// 0x0040 (0x0040 - 0x0000)
struct BattleSubActorBase_C_GetBPI_AICommand final
{
public:
	TScriptInterface<class IBPI_AICommand_C>      Ret;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     K2Node_DynamicCast_AsBPI_Battle_Main;              // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_254C[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AICommand_C>      CallFunc_BI_GetAICommand_ret;                      // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSubActorBase_C_GetBPI_AICommand) == 0x000008, "Wrong alignment on BattleSubActorBase_C_GetBPI_AICommand");
static_assert(sizeof(BattleSubActorBase_C_GetBPI_AICommand) == 0x000040, "Wrong size on BattleSubActorBase_C_GetBPI_AICommand");
static_assert(offsetof(BattleSubActorBase_C_GetBPI_AICommand, Ret) == 0x000000, "Member 'BattleSubActorBase_C_GetBPI_AICommand::Ret' has a wrong offset!");
static_assert(offsetof(BattleSubActorBase_C_GetBPI_AICommand, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleSubActorBase_C_GetBPI_AICommand::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSubActorBase_C_GetBPI_AICommand, K2Node_DynamicCast_AsBPI_Battle_Main) == 0x000018, "Member 'BattleSubActorBase_C_GetBPI_AICommand::K2Node_DynamicCast_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleSubActorBase_C_GetBPI_AICommand, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleSubActorBase_C_GetBPI_AICommand::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleSubActorBase_C_GetBPI_AICommand, CallFunc_BI_GetAICommand_ret) == 0x000030, "Member 'BattleSubActorBase_C_GetBPI_AICommand::CallFunc_BI_GetAICommand_ret' has a wrong offset!");

}

